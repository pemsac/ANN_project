// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrix_multiply_top,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.646000,HLS_SYN_LAT=97,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=766,HLS_SYN_LUT=975}" *)

module matrix_multiply_top (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_TDATA,
        A_TVALID,
        A_TREADY,
        B_TDATA,
        B_TVALID,
        B_TREADY,
        C_TDATA,
        C_TVALID,
        C_TREADY
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_st5_fsm_4 = 9'b10000;
parameter    ap_ST_st6_fsm_5 = 9'b100000;
parameter    ap_ST_st7_fsm_6 = 9'b1000000;
parameter    ap_ST_st8_fsm_7 = 9'b10000000;
parameter    ap_ST_st9_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_TDATA;
input   A_TVALID;
output   A_TREADY;
input  [31:0] B_TDATA;
input   B_TVALID;
output   B_TREADY;
output  [31:0] C_TDATA;
output   C_TVALID;
input   C_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_TREADY;
reg B_TREADY;
reg C_TVALID;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_27;
wire   [1:0] r_1_fu_206_p2;
reg   [1:0] r_1_reg_383;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_50;
wire   [4:0] tmp_9_fu_228_p2;
reg   [4:0] tmp_9_reg_388;
wire   [0:0] exitcond5_fu_200_p2;
wire   [1:0] c_1_fu_240_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_65;
wire   [0:0] exitcond4_fu_234_p2;
reg    ap_sig_bdd_71;
wire   [1:0] r_2_fu_266_p2;
reg   [1:0] r_2_reg_404;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_81;
wire   [4:0] tmp_1_fu_288_p2;
reg   [4:0] tmp_1_reg_409;
wire   [0:0] exitcond3_fu_260_p2;
wire   [1:0] c_2_fu_300_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_95;
wire   [0:0] exitcond2_fu_294_p2;
reg    ap_sig_bdd_101;
wire   [1:0] r_3_fu_326_p2;
reg   [1:0] r_3_reg_425;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_111;
wire   [4:0] tmp_7_fu_348_p2;
reg   [4:0] tmp_7_reg_430;
wire   [0:0] exitcond1_fu_320_p2;
wire   [1:0] c_3_fu_360_p2;
reg   [1:0] c_3_reg_438;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_125;
wire   [0:0] exitcond_fu_354_p2;
reg   [3:0] a_i_address0;
reg    a_i_ce0;
reg    a_i_we0;
wire   [31:0] a_i_d0;
wire   [31:0] a_i_q0;
reg   [3:0] b_i_address0;
reg    b_i_ce0;
reg    b_i_we0;
wire   [31:0] b_i_d0;
wire   [31:0] b_i_q0;
reg   [3:0] C_assign_address0;
reg    C_assign_ce0;
reg    C_assign_we0;
wire   [31:0] C_assign_d0;
wire   [31:0] C_assign_q0;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_done;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_idle;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_ready;
wire   [3:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_address0;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_ce0;
wire   [31:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_q0;
wire   [3:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_address0;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_ce0;
wire   [31:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_q0;
wire   [3:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_address0;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_ce0;
wire    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_we0;
wire   [31:0] grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_d0;
reg   [1:0] r_reg_127;
reg   [1:0] c_reg_138;
reg   [1:0] r1_reg_149;
reg   [1:0] c2_reg_160;
reg   [1:0] r3_reg_171;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_203;
reg   [1:0] c4_reg_182;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_217;
reg    ap_sig_ioackin_C_TREADY;
reg    grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg = 1'b0;
wire  signed [63:0] tmp_12_cast_fu_255_p1;
wire  signed [63:0] tmp_15_cast_fu_315_p1;
wire  signed [63:0] tmp_16_cast_fu_375_p1;
reg    ap_reg_ioackin_C_TREADY = 1'b0;
wire   [3:0] tmp_6_fu_216_p3;
wire   [4:0] p_shl_cast_fu_224_p1;
wire   [4:0] tmp_cast_fu_212_p1;
wire   [4:0] tmp_3_cast_fu_246_p1;
wire   [4:0] tmp_3_fu_250_p2;
wire   [3:0] tmp_s_fu_276_p3;
wire   [4:0] p_shl1_cast_fu_284_p1;
wire   [4:0] tmp_1_cast_fu_272_p1;
wire   [4:0] tmp_7_cast_fu_306_p1;
wire   [4:0] tmp_10_fu_310_p2;
wire   [3:0] tmp_5_fu_336_p3;
wire   [4:0] p_shl2_cast_fu_344_p1;
wire   [4:0] tmp_5_cast_fu_332_p1;
wire   [4:0] tmp_cast_10_fu_366_p1;
wire   [4:0] tmp_11_fu_370_p2;
reg   [8:0] ap_NS_fsm;


matrix_multiply_top_a_i #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
a_i_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( a_i_address0 ),
    .ce0( a_i_ce0 ),
    .we0( a_i_we0 ),
    .d0( a_i_d0 ),
    .q0( a_i_q0 )
);

matrix_multiply_top_a_i #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
b_i_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( b_i_address0 ),
    .ce0( b_i_ce0 ),
    .we0( b_i_we0 ),
    .d0( b_i_d0 ),
    .q0( b_i_q0 )
);

matrix_multiply_top_a_i #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
C_assign_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( C_assign_address0 ),
    .ce0( C_assign_ce0 ),
    .we0( C_assign_we0 ),
    .d0( C_assign_d0 ),
    .q0( C_assign_q0 )
);

matrix_multiply_top_matrix_multiply_alt2 grp_matrix_multiply_top_matrix_multiply_alt2_fu_193(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start ),
    .ap_done( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_done ),
    .ap_idle( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_idle ),
    .ap_ready( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_ready ),
    .A_address0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_address0 ),
    .A_ce0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_ce0 ),
    .A_q0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_q0 ),
    .B_address0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_address0 ),
    .B_ce0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_ce0 ),
    .B_q0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_q0 ),
    .C_address0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_address0 ),
    .C_ce0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_ce0 ),
    .C_we0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_we0 ),
    .C_d0( grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_d0 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_C_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_C_TREADY)) begin
                ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == C_TREADY)) begin
                ap_reg_ioackin_C_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond3_fu_260_p2))) begin
            grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_ready)) begin
            grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_294_p2) & ~ap_sig_bdd_101)) begin
        c2_reg_160 <= c_2_fu_300_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_260_p2))) begin
        c2_reg_160 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_logic_0 == ap_sig_ioackin_C_TREADY))) begin
        c4_reg_182 <= c_3_reg_438;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond1_fu_320_p2))) begin
        c4_reg_182 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond4_fu_234_p2) & ~ap_sig_bdd_71)) begin
        c_reg_138 <= c_1_fu_240_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_200_p2 == ap_const_lv1_0))) begin
        c_reg_138 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_fu_200_p2 == ap_const_lv1_0))) begin
        r1_reg_149 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_bdd_101 & ~(ap_const_lv1_0 == exitcond2_fu_294_p2))) begin
        r1_reg_149 <= r_2_reg_404;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == exitcond_fu_354_p2))) begin
        r3_reg_171 <= r_3_reg_425;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_logic_0 == grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_done))) begin
        r3_reg_171 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_71 & ~(ap_const_lv1_0 == exitcond4_fu_234_p2))) begin
        r_reg_127 <= r_1_reg_383;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        r_reg_127 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        c_3_reg_438 <= c_3_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        r_1_reg_383 <= r_1_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        r_2_reg_404 <= r_2_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        r_3_reg_425 <= r_3_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond3_fu_260_p2))) begin
        tmp_1_reg_409 <= tmp_1_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond1_fu_320_p2))) begin
        tmp_7_reg_430 <= tmp_7_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_200_p2 == ap_const_lv1_0))) begin
        tmp_9_reg_388 <= tmp_9_fu_228_p2;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond4_fu_234_p2 or ap_sig_bdd_71) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond4_fu_234_p2) & ~ap_sig_bdd_71)) begin
        A_TREADY = ap_const_logic_1;
    end else begin
        A_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond2_fu_294_p2 or ap_sig_bdd_101) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_294_p2) & ~ap_sig_bdd_101)) begin
        B_TREADY = ap_const_logic_1;
    end else begin
        B_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_reg_ioackin_C_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & (ap_const_logic_0 == ap_reg_ioackin_C_TREADY))) begin
        C_TVALID = ap_const_logic_1;
    end else begin
        C_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st8_fsm_7 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_address0 or ap_sig_cseq_ST_st6_fsm_5 or tmp_16_cast_fu_375_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C_assign_address0 = tmp_16_cast_fu_375_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_assign_address0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_address0;
    end else begin
        C_assign_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st8_fsm_7 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_ce0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C_assign_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_assign_ce0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_ce0;
    end else begin
        C_assign_ce0 = ap_const_logic_0;
    end
end

always @ (grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_we0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C_assign_we0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_we0;
    end else begin
        C_assign_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_address0 or ap_sig_cseq_ST_st6_fsm_5 or tmp_12_cast_fu_255_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        a_i_address0 = tmp_12_cast_fu_255_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        a_i_address0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_address0;
    end else begin
        a_i_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_71 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_ce0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_71)) begin
        a_i_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        a_i_ce0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_ce0;
    end else begin
        a_i_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond4_fu_234_p2 or ap_sig_bdd_71) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond4_fu_234_p2) & ~ap_sig_bdd_71)) begin
        a_i_we0 = ap_const_logic_1;
    end else begin
        a_i_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or exitcond1_fu_320_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond1_fu_320_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or exitcond1_fu_320_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond1_fu_320_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_27) begin
    if (ap_sig_bdd_27) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_50) begin
    if (ap_sig_bdd_50) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_65) begin
    if (ap_sig_bdd_65) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_81) begin
    if (ap_sig_bdd_81) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_95) begin
    if (ap_sig_bdd_95) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_203) begin
    if (ap_sig_bdd_203) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_125) begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_217) begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (C_TREADY or ap_reg_ioackin_C_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_C_TREADY)) begin
        ap_sig_ioackin_C_TREADY = C_TREADY;
    end else begin
        ap_sig_ioackin_C_TREADY = ap_const_logic_1;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_address0 or ap_sig_cseq_ST_st6_fsm_5 or tmp_15_cast_fu_315_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        b_i_address0 = tmp_15_cast_fu_315_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        b_i_address0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_address0;
    end else begin
        b_i_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_bdd_101 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_ce0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_bdd_101)) begin
        b_i_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        b_i_ce0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_ce0;
    end else begin
        b_i_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond2_fu_294_p2 or ap_sig_bdd_101) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_294_p2) & ~ap_sig_bdd_101)) begin
        b_i_we0 = ap_const_logic_1;
    end else begin
        b_i_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond5_fu_200_p2 or exitcond4_fu_234_p2 or ap_sig_bdd_71 or exitcond3_fu_260_p2 or exitcond2_fu_294_p2 or ap_sig_bdd_101 or exitcond1_fu_320_p2 or exitcond_fu_354_p2 or grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_done or ap_sig_ioackin_C_TREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond5_fu_200_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((~ap_sig_bdd_71 & ~(ap_const_lv1_0 == exitcond4_fu_234_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((ap_const_lv1_0 == exitcond4_fu_234_p2) & ~ap_sig_bdd_71)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_260_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((~ap_sig_bdd_101 & ~(ap_const_lv1_0 == exitcond2_fu_294_p2))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else if (((ap_const_lv1_0 == exitcond2_fu_294_p2) & ~ap_sig_bdd_101)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_logic_0 == grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_320_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_354_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_C_TREADY)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign C_TDATA = C_assign_q0;

assign C_assign_d0 = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_C_d0;

assign a_i_d0 = A_TDATA;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (B_TVALID or exitcond2_fu_294_p2) begin
    ap_sig_bdd_101 = ((B_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_fu_294_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_125 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_203 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_27 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_50 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_65 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (A_TVALID or exitcond4_fu_234_p2) begin
    ap_sig_bdd_71 = ((A_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond4_fu_234_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_81 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_95 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign b_i_d0 = B_TDATA;

assign c_1_fu_240_p2 = (c_reg_138 + ap_const_lv2_1);

assign c_2_fu_300_p2 = (c2_reg_160 + ap_const_lv2_1);

assign c_3_fu_360_p2 = (c4_reg_182 + ap_const_lv2_1);

assign exitcond1_fu_320_p2 = (r3_reg_171 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond2_fu_294_p2 = (c2_reg_160 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond3_fu_260_p2 = (r1_reg_149 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond4_fu_234_p2 = (c_reg_138 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond5_fu_200_p2 = (r_reg_127 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond_fu_354_p2 = (c4_reg_182 == ap_const_lv2_3? 1'b1: 1'b0);

assign grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_A_q0 = a_i_q0;

assign grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_B_q0 = b_i_q0;

assign grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start = grp_matrix_multiply_top_matrix_multiply_alt2_fu_193_ap_start_ap_start_reg;

assign p_shl1_cast_fu_284_p1 = tmp_s_fu_276_p3;

assign p_shl2_cast_fu_344_p1 = tmp_5_fu_336_p3;

assign p_shl_cast_fu_224_p1 = tmp_6_fu_216_p3;

assign r_1_fu_206_p2 = (r_reg_127 + ap_const_lv2_1);

assign r_2_fu_266_p2 = (r1_reg_149 + ap_const_lv2_1);

assign r_3_fu_326_p2 = (r3_reg_171 + ap_const_lv2_1);

assign tmp_10_fu_310_p2 = (tmp_1_reg_409 + tmp_7_cast_fu_306_p1);

assign tmp_11_fu_370_p2 = (tmp_7_reg_430 + tmp_cast_10_fu_366_p1);

assign tmp_12_cast_fu_255_p1 = $signed(tmp_3_fu_250_p2);

assign tmp_15_cast_fu_315_p1 = $signed(tmp_10_fu_310_p2);

assign tmp_16_cast_fu_375_p1 = $signed(tmp_11_fu_370_p2);

assign tmp_1_cast_fu_272_p1 = r1_reg_149;

assign tmp_1_fu_288_p2 = (p_shl1_cast_fu_284_p1 - tmp_1_cast_fu_272_p1);

assign tmp_3_cast_fu_246_p1 = c_reg_138;

assign tmp_3_fu_250_p2 = (tmp_9_reg_388 + tmp_3_cast_fu_246_p1);

assign tmp_5_cast_fu_332_p1 = r3_reg_171;

assign tmp_5_fu_336_p3 = {{r3_reg_171}, {ap_const_lv2_0}};

assign tmp_6_fu_216_p3 = {{r_reg_127}, {ap_const_lv2_0}};

assign tmp_7_cast_fu_306_p1 = c2_reg_160;

assign tmp_7_fu_348_p2 = (p_shl2_cast_fu_344_p1 - tmp_5_cast_fu_332_p1);

assign tmp_9_fu_228_p2 = (p_shl_cast_fu_224_p1 - tmp_cast_fu_212_p1);

assign tmp_cast_10_fu_366_p1 = c4_reg_182;

assign tmp_cast_fu_212_p1 = r_reg_127;

assign tmp_s_fu_276_p3 = {{r1_reg_149}, {ap_const_lv2_0}};


endmodule //matrix_multiply_top

