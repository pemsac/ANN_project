// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feedforward,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.621000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=42,HLS_SYN_FF=8905,HLS_SYN_LUT=12500}" *)

module feedforward (
        ap_clk,
        ap_rst_n,
        P_config_TDATA,
        P_config_TVALID,
        P_config_TREADY,
        P_WandB_TDATA,
        P_WandB_TVALID,
        P_WandB_TREADY,
        P_uOut_TDATA,
        P_uOut_TVALID,
        P_uOut_TREADY,
        P_netIn_TDATA,
        P_netIn_TVALID,
        P_netIn_TREADY,
        P_netOut_TDATA,
        P_netOut_TVALID,
        P_netOut_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 154'b1;
parameter    ap_ST_st2_fsm_1 = 154'b10;
parameter    ap_ST_st3_fsm_2 = 154'b100;
parameter    ap_ST_st4_fsm_3 = 154'b1000;
parameter    ap_ST_st5_fsm_4 = 154'b10000;
parameter    ap_ST_st6_fsm_5 = 154'b100000;
parameter    ap_ST_st7_fsm_6 = 154'b1000000;
parameter    ap_ST_st8_fsm_7 = 154'b10000000;
parameter    ap_ST_st9_fsm_8 = 154'b100000000;
parameter    ap_ST_st10_fsm_9 = 154'b1000000000;
parameter    ap_ST_st11_fsm_10 = 154'b10000000000;
parameter    ap_ST_st12_fsm_11 = 154'b100000000000;
parameter    ap_ST_st13_fsm_12 = 154'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 154'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 154'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 154'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 154'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 154'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 154'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 154'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 154'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 154'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 154'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 154'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 154'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 154'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 154'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 154'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 154'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 154'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 154'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 154'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 154'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 154'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 154'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 154'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 154'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 154'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 154'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 154'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 154'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 154'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 154'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 154'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 154'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 154'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 154'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 154'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 154'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 154'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 154'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 154'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 154'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 154'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 154'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 154'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 154'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 154'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 154'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 154'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 154'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 154'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 154'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 154'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 154'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 154'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 154'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 154'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 154'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_146 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_147 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_148 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_149 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_150 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_151 = 154'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_152 = 154'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_153 = 154'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_7C = 32'b1111100;
parameter    ap_const_lv32_8F = 32'b10001111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_75 = 32'b1110101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_8E = 32'b10001110;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv32_92 = 32'b10010010;
parameter    ap_const_lv32_94 = 32'b10010100;
parameter    ap_const_lv32_96 = 32'b10010110;
parameter    ap_const_lv32_97 = 32'b10010111;
parameter    ap_const_lv32_98 = 32'b10011000;
parameter    ap_const_lv32_99 = 32'b10011001;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv37_0 = 37'b0000000000000000000000000000000000000;
parameter    ap_const_lv32_93 = 32'b10010011;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_76 = 32'b1110110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv38_23 = 38'b100011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv39_23 = 39'b100011;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_const_lv9_23 = 9'b100011;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv37_23 = 37'b100011;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] P_config_TDATA;
input   P_config_TVALID;
output   P_config_TREADY;
input  [31:0] P_WandB_TDATA;
input   P_WandB_TVALID;
output   P_WandB_TREADY;
output  [31:0] P_uOut_TDATA;
output   P_uOut_TVALID;
input   P_uOut_TREADY;
input  [31:0] P_netIn_TDATA;
input   P_netIn_TVALID;
output   P_netIn_TREADY;
output  [31:0] P_netOut_TDATA;
output   P_netOut_TVALID;
input   P_netOut_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg P_config_TREADY;
reg P_WandB_TREADY;
reg P_uOut_TVALID;
reg P_netIn_TREADY;
reg P_netOut_TVALID;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [153:0] ap_CS_fsm = 154'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_172;
reg    ap_ready;
wire   [31:0] P_mode;
reg   [31:0] ST_numLayer = 32'b00000000000000000000000000000000;
reg   [31:0] ST_layerSize_0 = 32'b00000000000000000000000000000000;
reg   [31:0] ST_layerSize_1 = 32'b00000000000000000000000000000000;
reg   [31:0] ST_layerSize_2 = 32'b00000000000000000000000000000000;
reg   [31:0] ST_layerSize_3 = 32'b00000000000000000000000000000000;
reg   [12:0] ST_WandB_address0;
reg    ST_WandB_ce0;
reg    ST_WandB_we0;
wire   [31:0] ST_WandB_d0;
wire   [31:0] ST_WandB_q0;
wire    feedforward_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [31:0] p_uOut_q0;
reg   [31:0] reg_550;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_253;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_260;
reg    ap_sig_cseq_ST_st125_fsm_124;
reg    ap_sig_bdd_268;
reg    ap_sig_cseq_ST_st144_fsm_143;
reg    ap_sig_bdd_276;
reg   [31:0] reg_557;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_285;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_bdd_294;
wire   [31:0] grp_fu_498_p2;
reg   [31:0] reg_563;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_304;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_311;
wire   [31:0] grp_fu_491_p2;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_321;
reg    ap_sig_cseq_ST_st92_fsm_91;
reg    ap_sig_bdd_328;
reg   [31:0] reg_574;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_337;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_bdd_344;
wire   [63:0] grp_fu_512_p1;
reg   [63:0] reg_579;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_354;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_361;
wire   [63:0] grp_fu_529_p2;
reg   [63:0] reg_584;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_371;
reg    ap_sig_cseq_ST_st117_fsm_116;
reg    ap_sig_bdd_378;
wire   [31:0] grp_fu_509_p1;
reg   [31:0] reg_590;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_388;
reg    ap_sig_cseq_ST_st118_fsm_117;
reg    ap_sig_bdd_395;
reg   [31:0] P_mode_read_reg_1443;
wire   [0:0] tmp_fu_596_p2;
reg    ap_sig_bdd_408;
reg   [0:0] tmp_reg_1448;
reg   [31:0] ST_numLayer_load_reg_1452;
wire   [0:0] tmp_1_fu_606_p2;
reg   [0:0] tmp_1_reg_1461;
reg   [31:0] ST_layerSize_0_load_reg_1465;
reg   [31:0] P_config_read_reg_1470;
wire   [30:0] i_8_fu_627_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_432;
wire   [0:0] tmp_7_fu_622_p2;
reg    ap_sig_bdd_439;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_449;
wire   [0:0] tmp_9_fu_642_p2;
wire   [1:0] tmp_52_fu_672_p1;
reg   [1:0] tmp_52_reg_1496;
wire  signed [8:0] tmp_31_fu_682_p1;
reg  signed [8:0] tmp_31_reg_1501;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_467;
wire   [1:0] tmp_40_fu_686_p1;
reg   [1:0] tmp_40_reg_1506;
wire   [37:0] grp_fu_651_p2;
reg   [37:0] tmp_24_reg_1511;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_478;
wire   [1:0] tmp_27_fu_690_p1;
reg   [1:0] tmp_27_reg_1516;
wire   [8:0] tmp_33_fu_694_p2;
reg   [8:0] tmp_33_reg_1521;
wire   [31:0] j_5_fu_718_p2;
reg   [31:0] j_5_reg_1529;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_491;
wire   [31:0] tmp_26_fu_724_p6;
reg   [31:0] tmp_26_reg_1534;
wire   [0:0] tmp_18_fu_712_p2;
wire   [13:0] tmp_71_fu_775_p2;
reg   [13:0] tmp_71_reg_1540;
reg   [7:0] p_uOut_addr_2_reg_1546;
wire   [30:0] i_10_fu_781_p2;
wire   [30:0] k_3_fu_796_p2;
reg   [30:0] k_3_reg_1559;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_513;
wire   [0:0] tmp_28_fu_791_p2;
wire   [63:0] grp_fu_519_p2;
reg   [63:0] tmp_37_reg_1579;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_533;
wire   [63:0] grp_fu_524_p2;
reg   [63:0] tmp_38_reg_1584;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_542;
wire  signed [8:0] tmp_53_fu_863_p1;
reg  signed [8:0] tmp_53_reg_1589;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_551;
wire   [1:0] tmp_58_fu_867_p1;
reg   [1:0] tmp_58_reg_1594;
wire   [8:0] tmp_46_fu_871_p1;
reg   [8:0] tmp_46_reg_1599;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_562;
wire   [37:0] tmp_51_fu_875_p1;
reg   [37:0] tmp_51_reg_1606;
wire   [8:0] tmp_56_fu_879_p2;
reg   [8:0] tmp_56_reg_1611;
wire   [31:0] tmp_25_fu_884_p6;
reg   [31:0] tmp_25_reg_1616;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_575;
wire   [31:0] i_12_fu_903_p2;
reg   [31:0] i_12_reg_1625;
wire   [31:0] tmp_54_fu_909_p6;
reg   [31:0] tmp_54_reg_1630;
wire   [0:0] tmp_20_fu_897_p2;
wire   [13:0] tmp_75_fu_960_p2;
reg   [13:0] tmp_75_reg_1636;
reg   [7:0] p_uOut_addr_4_reg_1642;
wire   [30:0] j_6_fu_975_p2;
reg   [30:0] j_6_reg_1650;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_596;
wire   [0:0] tmp_29_fu_970_p2;
reg    ap_sig_cseq_ST_st123_fsm_122;
reg    ap_sig_bdd_615;
wire   [30:0] i_11_fu_1031_p2;
reg   [30:0] i_11_reg_1678;
reg    ap_sig_cseq_ST_st124_fsm_123;
reg    ap_sig_bdd_624;
reg   [7:0] p_uOut_addr_5_reg_1683;
wire   [0:0] tmp_30_fu_1026_p2;
wire   [0:0] tmp_48_fu_1051_p2;
reg   [0:0] tmp_48_reg_1688;
wire   [31:0] grp_fu_504_p2;
reg   [31:0] tmp_47_reg_1692;
reg    ap_sig_cseq_ST_st141_fsm_140;
reg    ap_sig_bdd_642;
wire   [31:0] p_netOut_2_cast_fu_1056_p1;
reg   [31:0] p_netOut_2_cast_reg_1697;
reg    ap_sig_cseq_ST_st143_fsm_142;
reg    ap_sig_bdd_651;
wire   [0:0] tmp_50_fu_1060_p2;
reg    ap_sig_ioackin_P_netOut_TREADY;
wire   [30:0] i_15_fu_1093_p2;
reg   [30:0] i_15_reg_1715;
wire   [8:0] tmp_90_fu_1099_p1;
reg   [8:0] tmp_90_reg_1720;
wire   [36:0] next_mul_fu_1103_p2;
reg   [36:0] next_mul_reg_1725;
wire   [30:0] i_14_fu_1118_p2;
reg   [30:0] i_14_reg_1733;
wire   [1:0] tmp_91_fu_1124_p1;
reg   [1:0] tmp_91_reg_1738;
wire   [0:0] tmp_49_fu_1113_p2;
wire   [31:0] p_uOut_q1;
reg   [31:0] p_uOut_load_4_reg_1743;
wire   [0:0] tmp_65_fu_1205_p2;
reg   [0:0] tmp_65_reg_1749;
reg    ap_sig_cseq_ST_st145_fsm_144;
reg    ap_sig_bdd_701;
wire   [31:0] p_netOut_1_fu_1211_p3;
reg    ap_sig_cseq_ST_st146_fsm_145;
reg    ap_sig_bdd_710;
wire   [31:0] j_7_fu_1236_p2;
reg   [31:0] j_7_reg_1762;
reg    ap_sig_cseq_ST_st147_fsm_146;
reg    ap_sig_bdd_719;
wire   [0:0] tmp_55_fu_1230_p2;
wire   [0:0] tmp_6_fu_1260_p2;
reg   [0:0] tmp_6_reg_1772;
reg    ap_sig_cseq_ST_st149_fsm_148;
reg    ap_sig_bdd_734;
wire   [37:0] grp_fu_1269_p2;
reg   [37:0] tmp_8_reg_1781;
reg    ap_sig_cseq_ST_st151_fsm_150;
reg    ap_sig_bdd_748;
wire   [1:0] tmp_10_fu_1275_p1;
reg   [1:0] tmp_10_reg_1786;
wire   [1:0] tmp_9_t_fu_1279_p2;
reg   [1:0] tmp_9_t_reg_1791;
wire   [31:0] j_4_fu_1304_p2;
reg   [31:0] j_4_reg_1799;
reg    ap_sig_cseq_ST_st152_fsm_151;
reg    ap_sig_bdd_761;
wire   [13:0] tmp_23_fu_1343_p2;
reg   [13:0] tmp_23_reg_1804;
wire   [0:0] tmp_s_fu_1298_p2;
wire   [30:0] i_9_fu_1349_p2;
wire   [31:0] k_2_fu_1380_p2;
reg    ap_sig_cseq_ST_st153_fsm_152;
reg    ap_sig_bdd_779;
wire   [0:0] tmp_17_fu_1374_p2;
reg    ap_sig_bdd_786;
wire   [0:0] tmp_2_fu_1404_p2;
reg   [0:0] tmp_2_reg_1822;
reg    ap_sig_cseq_ST_st154_fsm_153;
reg    ap_sig_bdd_796;
reg    ap_sig_bdd_801;
wire   [30:0] i_7_fu_1409_p2;
reg   [7:0] p_uOut_address0;
reg    p_uOut_ce0;
reg    p_uOut_we0;
reg   [31:0] p_uOut_d0;
reg   [7:0] p_uOut_address1;
reg    p_uOut_ce1;
reg   [30:0] i_2_reg_275;
reg   [30:0] i_3_reg_286;
reg   [31:0] j_1_reg_298;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_832;
reg   [31:0] sum_reg_309;
reg   [30:0] k_1_reg_321;
reg   [31:0] sumsoft_reg_332;
reg   [31:0] i_4_reg_344;
reg   [31:0] sum_1_reg_355;
reg   [30:0] j_2_reg_367;
reg   [30:0] i_5_reg_378;
reg    ap_sig_cseq_ST_st142_fsm_141;
reg    ap_sig_bdd_853;
reg   [31:0] p_netOut_reg_389;
reg   [30:0] p_netOut_2_reg_402;
reg   [30:0] i_6_reg_413;
reg   [36:0] phi_mul_reg_424;
reg   [31:0] j_3_reg_435;
reg    ap_sig_cseq_ST_st148_fsm_147;
reg    ap_sig_bdd_879;
reg    ap_sig_ioackin_P_uOut_TREADY;
reg   [30:0] i_1_reg_446;
reg   [31:0] j_reg_458;
reg   [31:0] k_reg_469;
reg   [30:0] i_reg_480;
wire   [63:0] tmp_3_fu_633_p1;
wire  signed [63:0] tmp_77_cast_fu_746_p1;
wire   [63:0] tmp_85_cast_fu_815_p1;
wire  signed [63:0] tmp_86_cast_fu_825_p1;
wire   [63:0] tmp_87_cast_fu_838_p1;
wire  signed [63:0] tmp_81_cast_fu_931_p1;
wire   [63:0] tmp_88_cast_fu_994_p1;
wire  signed [63:0] tmp_89_cast_fu_1004_p1;
wire   [63:0] tmp_90_cast_fu_1017_p1;
wire  signed [63:0] tmp_91_cast_fu_1046_p1;
wire  signed [63:0] tmp_93_cast_fu_1074_p1;
wire  signed [63:0] tmp_94_cast_fu_1088_p1;
wire   [63:0] tmp_95_cast_fu_1251_p1;
wire   [63:0] tmp_76_cast_fu_1395_p1;
wire   [1:0] tmp_4_fu_1415_p1;
reg    ap_reg_ioackin_P_netOut_TREADY = 1'b0;
reg    ap_reg_ioackin_P_uOut_TREADY = 1'b0;
reg    ap_sig_cseq_ST_st119_fsm_118;
reg    ap_sig_bdd_997;
reg   [31:0] grp_fu_491_p0;
reg   [31:0] grp_fu_491_p1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_1021;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_1028;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_bdd_1036;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_1043;
reg   [63:0] grp_fu_509_p0;
reg   [31:0] grp_fu_512_p0;
wire   [31:0] tmp_34_fu_853_p1;
wire   [31:0] i_2_cast_fu_618_p1;
wire   [31:0] i_3_cast_fu_638_p1;
wire   [6:0] grp_fu_651_p0;
wire   [30:0] grp_fu_651_p1;
wire  signed [31:0] tmp_13_fu_657_p2;
wire   [6:0] grp_fu_666_p0;
wire   [30:0] tmp_11_fu_676_p2;
wire   [31:0] tmp_22_fu_699_p6;
wire  signed [37:0] tmp_24_cast_fu_737_p1;
wire   [37:0] tmp_68_fu_741_p2;
wire   [8:0] tmp_69_fu_751_p1;
wire   [11:0] tmp_70_fu_763_p1;
wire   [13:0] p_shl2_cast_fu_755_p3;
wire   [13:0] p_shl3_cast_fu_767_p3;
wire   [31:0] k_1_cast_fu_787_p1;
wire   [13:0] tmp_79_fu_806_p1;
wire   [13:0] tmp_80_fu_810_p2;
wire   [8:0] tmp_78_fu_802_p1;
wire   [8:0] tmp_81_fu_820_p2;
wire   [13:0] tmp_82_fu_830_p1;
wire   [13:0] tmp_83_fu_833_p2;
wire   [31:0] tmp_34_to_int_fu_843_p1;
wire   [31:0] tmp_34_neg_fu_847_p2;
wire   [31:0] tmp_15_fu_858_p2;
wire   [38:0] grp_fu_666_p2;
wire  signed [37:0] tmp_27_cast_fu_922_p1;
wire   [37:0] tmp_72_fu_926_p2;
wire   [8:0] tmp_73_fu_936_p1;
wire   [11:0] tmp_74_fu_948_p1;
wire   [13:0] p_shl4_cast_fu_940_p3;
wire   [13:0] p_shl5_cast_fu_952_p3;
wire   [31:0] j_2_cast_fu_966_p1;
wire   [13:0] tmp_85_fu_985_p1;
wire   [13:0] tmp_86_fu_989_p2;
wire   [8:0] tmp_84_fu_981_p1;
wire   [8:0] tmp_87_fu_999_p2;
wire   [13:0] tmp_88_fu_1009_p1;
wire   [13:0] tmp_89_fu_1012_p2;
wire   [31:0] i_5_cast_fu_1022_p1;
wire   [8:0] tmp_76_fu_1037_p1;
wire   [8:0] tmp_77_fu_1041_p2;
wire   [8:0] tmp_92_fu_1065_p1;
wire   [8:0] tmp_93_fu_1069_p2;
wire   [8:0] tmp_96_fu_1079_p1;
wire   [8:0] tmp_94_fu_1083_p2;
wire   [31:0] i_6_cast_fu_1109_p1;
wire   [31:0] p_uOut_load_3_to_int_fu_1128_p1;
wire   [31:0] p_uOut_load_4_to_int_fu_1146_p1;
wire   [7:0] tmp_57_fu_1132_p4;
wire   [22:0] tmp_97_fu_1142_p1;
wire   [0:0] notrhs_fu_1169_p2;
wire   [0:0] notlhs_fu_1163_p2;
wire   [7:0] tmp_59_fu_1149_p4;
wire   [22:0] tmp_98_fu_1159_p1;
wire   [0:0] notrhs2_fu_1187_p2;
wire   [0:0] notlhs1_fu_1181_p2;
wire   [0:0] tmp_61_fu_1175_p2;
wire   [0:0] tmp_62_fu_1193_p2;
wire   [0:0] tmp_63_fu_1199_p2;
wire   [0:0] tmp_64_fu_515_p2;
wire   [31:0] tmp_66_fu_1217_p6;
wire   [8:0] tmp_99_fu_1242_p1;
wire   [8:0] tmp_95_fu_1246_p2;
wire   [31:0] i_1_cast_fu_1256_p1;
wire   [6:0] grp_fu_1269_p0;
wire   [30:0] grp_fu_1269_p1;
wire   [31:0] tmp_5_fu_1285_p6;
wire  signed [37:0] tmp_4_cast_fu_1310_p1;
wire   [37:0] tmp_12_fu_1314_p2;
wire   [8:0] tmp_14_fu_1319_p1;
wire   [11:0] tmp_19_fu_1331_p1;
wire   [13:0] p_shl_cast_fu_1323_p3;
wire   [13:0] p_shl1_cast_fu_1335_p3;
wire   [31:0] tmp_21_fu_1355_p6;
wire   [31:0] tmp_16_fu_1368_p2;
wire   [13:0] tmp_60_fu_1386_p1;
wire   [13:0] tmp_67_fu_1390_p2;
wire   [31:0] i_cast_fu_1400_p1;
wire    grp_fu_491_ce;
wire    grp_fu_498_ce;
wire    grp_fu_504_ce;
wire   [4:0] tmp_64_fu_515_opcode;
wire    grp_fu_519_ce;
wire    grp_fu_524_ce;
wire    grp_fu_529_ce;
wire    grp_fu_651_ce;
wire    grp_fu_666_ce;
wire    grp_fu_1269_ce;
reg   [153:0] ap_NS_fsm;
wire   [37:0] grp_fu_1269_p10;
wire   [37:0] grp_fu_651_p10;
reg    ap_sig_bdd_976;


feedforward_ST_WandB #(
    .DataWidth( 32 ),
    .AddressRange( 5040 ),
    .AddressWidth( 13 ))
ST_WandB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( ST_WandB_address0 ),
    .ce0( ST_WandB_ce0 ),
    .we0( ST_WandB_we0 ),
    .d0( ST_WandB_d0 ),
    .q0( ST_WandB_q0 )
);

feedforward_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
feedforward_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( feedforward_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .P_mode( P_mode )
);

feedforward_p_uOut #(
    .DataWidth( 32 ),
    .AddressRange( 140 ),
    .AddressWidth( 8 ))
p_uOut_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( p_uOut_address0 ),
    .ce0( p_uOut_ce0 ),
    .we0( p_uOut_we0 ),
    .d0( p_uOut_d0 ),
    .q0( p_uOut_q0 ),
    .address1( p_uOut_address1 ),
    .ce1( p_uOut_ce1 ),
    .q1( p_uOut_q1 )
);

feedforward_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_491_p0 ),
    .din1( grp_fu_491_p1 ),
    .ce( grp_fu_491_ce ),
    .dout( grp_fu_491_p2 )
);

feedforward_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( p_uOut_q0 ),
    .din1( ST_WandB_q0 ),
    .ce( grp_fu_498_ce ),
    .dout( grp_fu_498_p2 )
);

feedforward_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fdiv_32ns_32ns_32_16_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( reg_550 ),
    .din1( sumsoft_reg_332 ),
    .ce( grp_fu_504_ce ),
    .dout( grp_fu_504_p2 )
);

feedforward_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
feedforward_fptrunc_64ns_32_1_U3(
    .din0( grp_fu_509_p0 ),
    .dout( grp_fu_509_p1 )
);

feedforward_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
feedforward_fpext_32ns_64_1_U4(
    .din0( grp_fu_512_p0 ),
    .dout( grp_fu_512_p1 )
);

feedforward_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
feedforward_fcmp_32ns_32ns_1_1_U5(
    .din0( reg_550 ),
    .din1( p_uOut_load_4_reg_1743 ),
    .opcode( tmp_64_fu_515_opcode ),
    .dout( tmp_64_fu_515_p2 )
);

feedforward_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dadd_64ns_64ns_64_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( reg_584 ),
    .din1( ap_const_lv64_3FF0000000000000 ),
    .ce( grp_fu_519_ce ),
    .dout( grp_fu_519_p2 )
);

feedforward_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_ddiv_64ns_64ns_64_31_U7(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_3FF0000000000000 ),
    .din1( tmp_37_reg_1579 ),
    .ce( grp_fu_524_ce ),
    .dout( grp_fu_524_p2 )
);

feedforward_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dexp_64ns_64ns_64_18_full_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_0 ),
    .din1( reg_579 ),
    .ce( grp_fu_529_ce ),
    .dout( grp_fu_529_p2 )
);

feedforward_mul_7ns_31ns_38_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 38 ))
feedforward_mul_7ns_31ns_38_3_U9(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_651_p0 ),
    .din1( grp_fu_651_p1 ),
    .ce( grp_fu_651_ce ),
    .dout( grp_fu_651_p2 )
);

feedforward_mul_7ns_32s_39_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 39 ))
feedforward_mul_7ns_32s_39_3_U10(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_666_p0 ),
    .din1( tmp_13_fu_657_p2 ),
    .ce( grp_fu_666_ce ),
    .dout( grp_fu_666_p2 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U11(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_27_reg_1516 ),
    .dout( tmp_22_fu_699_p6 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U12(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_40_reg_1506 ),
    .dout( tmp_26_fu_724_p6 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U13(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_52_reg_1496 ),
    .dout( tmp_25_fu_884_p6 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U14(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_58_reg_1594 ),
    .dout( tmp_54_fu_909_p6 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U15(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_91_reg_1738 ),
    .dout( tmp_66_fu_1217_p6 )
);

feedforward_mul_7ns_31ns_38_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 38 ))
feedforward_mul_7ns_31ns_38_3_U16(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_1269_p0 ),
    .din1( grp_fu_1269_p1 ),
    .ce( grp_fu_1269_ce ),
    .dout( grp_fu_1269_p2 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U17(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_10_reg_1786 ),
    .dout( tmp_5_fu_1285_p6 )
);

feedforward_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
feedforward_mux_4to1_sel2_32_1_U18(
    .din1( ST_layerSize_0 ),
    .din2( ST_layerSize_1 ),
    .din3( ST_layerSize_2 ),
    .din4( ST_layerSize_3 ),
    .din5( tmp_9_t_reg_1791 ),
    .dout( tmp_21_fu_1355_p6 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_netOut_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_netOut_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_976) begin
            if (~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY))) begin
                ap_reg_ioackin_P_netOut_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_netOut_TREADY)) begin
                ap_reg_ioackin_P_netOut_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_uOut_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408 & ~(ap_const_lv1_0 == tmp_1_fu_606_p2))) begin
        i_1_reg_446 <= ap_const_lv31_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_151) & (ap_const_lv1_0 == tmp_s_fu_1298_p2))) begin
        i_1_reg_446 <= i_9_fu_1349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408 & (ap_const_lv1_0 == tmp_1_fu_606_p2))) begin
        i_2_reg_275 <= ap_const_lv31_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439)) begin
        i_2_reg_275 <= i_8_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439)) begin
        i_3_reg_286 <= ap_const_lv31_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == tmp_18_fu_712_p2))) begin
        i_3_reg_286 <= i_10_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        i_4_reg_344 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122)) begin
        i_4_reg_344 <= i_12_reg_1625;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & (ap_const_lv1_0 == tmp_20_fu_897_p2))) begin
        i_5_reg_378 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        i_5_reg_378 <= i_11_reg_1678;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146) & (ap_const_lv1_0 == tmp_55_fu_1230_p2))) begin
        i_6_reg_413 <= i_14_reg_1733;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & (ap_const_lv1_0 == tmp_30_fu_1026_p2) & ~(ap_const_lv1_0 == tmp_48_fu_1051_p2))) begin
        i_6_reg_413 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801)) begin
        i_reg_480 <= i_7_fu_1409_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408)) begin
        i_reg_480 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_reg_298 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        j_1_reg_298 <= j_5_reg_1529;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & ~(ap_const_lv1_0 == tmp_20_fu_897_p2))) begin
        j_2_reg_367 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) begin
        j_2_reg_367 <= j_6_reg_1650;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & ~(ap_const_lv1_0 == tmp_49_fu_1113_p2))) begin
        j_3_reg_435 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & ~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY))) begin
        j_3_reg_435 <= j_7_reg_1762;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152) & (ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
        j_reg_458 <= j_4_reg_1799;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st151_fsm_150)) begin
        j_reg_458 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_18_fu_712_p2))) begin
        k_1_reg_321 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        k_1_reg_321 <= k_3_reg_1559;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_151) & ~(ap_const_lv1_0 == tmp_s_fu_1298_p2))) begin
        k_reg_469 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152) & ~(ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
        k_reg_469 <= k_2_fu_1380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & (ap_const_lv1_0 == tmp_30_fu_1026_p2) & (ap_const_lv1_0 == tmp_48_fu_1051_p2))) begin
        p_netOut_2_reg_402 <= ap_const_lv31_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        p_netOut_2_reg_402 <= i_15_reg_1715;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & (ap_const_lv1_0 == tmp_30_fu_1026_p2) & (ap_const_lv1_0 == tmp_48_fu_1051_p2))) begin
        p_netOut_reg_389 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        p_netOut_reg_389 <= p_netOut_1_fu_1211_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146) & (ap_const_lv1_0 == tmp_55_fu_1230_p2))) begin
        phi_mul_reg_424 <= next_mul_reg_1725;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & (ap_const_lv1_0 == tmp_30_fu_1026_p2) & ~(ap_const_lv1_0 == tmp_48_fu_1051_p2))) begin
        phi_mul_reg_424 <= ap_const_lv37_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & ~(ap_const_lv1_0 == tmp_20_fu_897_p2))) begin
        sum_1_reg_355 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) begin
        sum_1_reg_355 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_18_fu_712_p2))) begin
        sum_reg_309 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        sum_reg_309 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        sumsoft_reg_332 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122)) begin
        sumsoft_reg_332 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408)) begin
        P_config_read_reg_1470 <= P_config_TDATA;
        ST_numLayer <= P_config_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_408)) begin
        P_mode_read_reg_1443 <= P_mode;
        ST_numLayer_load_reg_1452 <= ST_numLayer;
        tmp_reg_1448 <= tmp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801 & (tmp_4_fu_1415_p1 == ap_const_lv2_0))) begin
        ST_layerSize_0 <= P_config_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408 & (ap_const_lv1_0 == tmp_1_fu_606_p2))) begin
        ST_layerSize_0_load_reg_1465 <= ST_layerSize_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801 & (tmp_4_fu_1415_p1 == ap_const_lv2_1))) begin
        ST_layerSize_1 <= P_config_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801 & (tmp_4_fu_1415_p1 == ap_const_lv2_2))) begin
        ST_layerSize_2 <= P_config_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801 & ~(tmp_4_fu_1415_p1 == ap_const_lv2_2) & ~(tmp_4_fu_1415_p1 == ap_const_lv2_1) & ~(tmp_4_fu_1415_p1 == ap_const_lv2_0))) begin
        ST_layerSize_3 <= P_config_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        i_11_reg_1678 <= i_11_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        i_12_reg_1625 <= i_12_fu_903_p2;
        tmp_25_reg_1616 <= tmp_25_fu_884_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_48_reg_1688))) begin
        i_14_reg_1733 <= i_14_fu_1118_p2;
        next_mul_reg_1725 <= next_mul_fu_1103_p2;
        tmp_90_reg_1720 <= tmp_90_fu_1099_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_50_fu_1060_p2))) begin
        i_15_reg_1715 <= i_15_fu_1093_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_151)) begin
        j_4_reg_1799 <= j_4_fu_1304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_5_reg_1529 <= j_5_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        j_6_reg_1650 <= j_6_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146)) begin
        j_7_reg_1762 <= j_7_fu_1236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        k_3_reg_1559 <= k_3_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)))) begin
        p_netOut_2_cast_reg_1697[30 : 0] <= p_netOut_2_cast_fu_1056_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_18_fu_712_p2))) begin
        p_uOut_addr_2_reg_1546 <= tmp_77_cast_fu_746_p1;
        tmp_26_reg_1534 <= tmp_26_fu_724_p6;
        tmp_71_reg_1540[13 : 2] <= tmp_71_fu_775_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & ~(ap_const_lv1_0 == tmp_20_fu_897_p2))) begin
        p_uOut_addr_4_reg_1642 <= tmp_81_cast_fu_931_p1;
        tmp_54_reg_1630 <= tmp_54_fu_909_p6;
        tmp_75_reg_1636[13 : 2] <= tmp_75_fu_960_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & ~(ap_const_lv1_0 == tmp_30_fu_1026_p2))) begin
        p_uOut_addr_5_reg_1683 <= tmp_91_cast_fu_1046_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_143)) begin
        p_uOut_load_4_reg_1743 <= p_uOut_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st125_fsm_124) | (ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_143))) begin
        reg_550 <= p_uOut_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        reg_557 <= ST_WandB_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86))) begin
        reg_563 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97))) begin
        reg_574 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98))) begin
        reg_579 <= grp_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        reg_584 <= grp_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117))) begin
        reg_590 <= grp_fu_509_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st151_fsm_150)) begin
        tmp_10_reg_1786 <= tmp_10_fu_1275_p1;
        tmp_8_reg_1781 <= grp_fu_1269_p2;
        tmp_9_t_reg_1791 <= tmp_9_t_fu_1279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408)) begin
        tmp_1_reg_1461 <= tmp_1_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st152_fsm_151) & ~(ap_const_lv1_0 == tmp_s_fu_1298_p2))) begin
        tmp_23_reg_1804[13 : 2] <= tmp_23_fu_1343_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_24_reg_1511 <= grp_fu_651_p2;
        tmp_27_reg_1516 <= tmp_27_fu_690_p1;
        tmp_33_reg_1521 <= tmp_33_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~ap_sig_bdd_801)) begin
        tmp_2_reg_1822 <= tmp_2_fu_1404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_31_reg_1501 <= tmp_31_fu_682_p1;
        tmp_40_reg_1506 <= tmp_40_fu_686_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        tmp_37_reg_1579 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        tmp_38_reg_1584 <= grp_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        tmp_46_reg_1599 <= tmp_46_fu_871_p1;
        tmp_51_reg_1606 <= tmp_51_fu_875_p1;
        tmp_56_reg_1611 <= tmp_56_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        tmp_47_reg_1692 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) & (ap_const_lv1_0 == tmp_30_fu_1026_p2))) begin
        tmp_48_reg_1688 <= tmp_48_fu_1051_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_9_fu_642_p2))) begin
        tmp_52_reg_1496 <= tmp_52_fu_672_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        tmp_53_reg_1589 <= tmp_53_fu_863_p1;
        tmp_58_reg_1594 <= tmp_58_fu_867_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_144)) begin
        tmp_65_reg_1749 <= tmp_65_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148)) begin
        tmp_6_reg_1772 <= tmp_6_fu_1260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & ~(ap_const_lv1_0 == tmp_49_fu_1113_p2))) begin
        tmp_91_reg_1738 <= tmp_91_fu_1124_p1;
    end
end

always @ (ap_sig_cseq_ST_st153_fsm_152 or tmp_17_fu_1374_p2 or ap_sig_bdd_786) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152) & ~(ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
        P_WandB_TREADY = ap_const_logic_1;
    end else begin
        P_WandB_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_fu_596_p2 or ap_sig_bdd_408 or tmp_2_fu_1404_p2 or ap_sig_cseq_ST_st154_fsm_153 or ap_sig_bdd_801) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408) | ((ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801))) begin
        P_config_TREADY = ap_const_logic_1;
    end else begin
        P_config_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_7_fu_622_p2 or ap_sig_bdd_439) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439)) begin
        P_netIn_TREADY = ap_const_logic_1;
    end else begin
        P_netIn_TREADY = ap_const_logic_0;
    end
end

always @ (tmp_reg_1448 or tmp_1_reg_1461 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2 or ap_reg_ioackin_P_netOut_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_reg_ioackin_P_netOut_TREADY))) begin
        P_netOut_TVALID = ap_const_logic_1;
    end else begin
        P_netOut_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st148_fsm_147 or ap_reg_ioackin_P_uOut_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & (ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY))) begin
        P_uOut_TVALID = ap_const_logic_1;
    end else begin
        P_uOut_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_28_fu_791_p2 or ap_sig_cseq_ST_st83_fsm_82 or tmp_29_fu_970_p2 or ap_sig_cseq_ST_st153_fsm_152 or tmp_85_cast_fu_815_p1 or tmp_87_cast_fu_838_p1 or tmp_88_cast_fu_994_p1 or tmp_90_cast_fu_1017_p1 or tmp_76_cast_fu_1395_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152)) begin
        ST_WandB_address0 = tmp_76_cast_fu_1395_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) & (ap_const_lv1_0 == tmp_29_fu_970_p2))) begin
        ST_WandB_address0 = tmp_90_cast_fu_1017_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) & ~(ap_const_lv1_0 == tmp_29_fu_970_p2))) begin
        ST_WandB_address0 = tmp_88_cast_fu_994_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_28_fu_791_p2))) begin
        ST_WandB_address0 = tmp_87_cast_fu_838_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_28_fu_791_p2))) begin
        ST_WandB_address0 = tmp_85_cast_fu_815_p1;
    end else begin
        ST_WandB_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_28_fu_791_p2 or ap_sig_cseq_ST_st83_fsm_82 or tmp_29_fu_970_p2 or ap_sig_cseq_ST_st153_fsm_152 or ap_sig_bdd_786) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_28_fu_791_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_28_fu_791_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) & ~(ap_const_lv1_0 == tmp_29_fu_970_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) & (ap_const_lv1_0 == tmp_29_fu_970_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152) & ~ap_sig_bdd_786))) begin
        ST_WandB_ce0 = ap_const_logic_1;
    end else begin
        ST_WandB_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st153_fsm_152 or tmp_17_fu_1374_p2 or ap_sig_bdd_786) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st153_fsm_152) & ~(ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
        ST_WandB_we0 = ap_const_logic_1;
    end else begin
        ST_WandB_we0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1448 or tmp_1_reg_1461 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2 or ap_sig_ioackin_P_netOut_TREADY or tmp_49_fu_1113_p2 or tmp_6_reg_1772 or tmp_2_reg_1822) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2)) | (~(ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_2_reg_1822)) | ((ap_const_lv1_0 == tmp_reg_1448) & ~(ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_6_reg_1772)) | ((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_49_fu_1113_p2))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_reg_1448 or tmp_1_reg_1461 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2 or ap_sig_ioackin_P_netOut_TREADY or tmp_49_fu_1113_p2 or tmp_6_reg_1772 or tmp_2_reg_1822) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2)) | (~(ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_2_reg_1822)) | ((ap_const_lv1_0 == tmp_reg_1448) & ~(ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_6_reg_1772)) | ((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_49_fu_1113_p2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_378) begin
    if (ap_sig_bdd_378) begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_395) begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st118_fsm_117 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st118_fsm_117 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_997) begin
    if (ap_sig_bdd_997) begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_304) begin
    if (ap_sig_bdd_304) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_615) begin
    if (ap_sig_bdd_615) begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_624) begin
    if (ap_sig_bdd_624) begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_268) begin
    if (ap_sig_bdd_268) begin
        ap_sig_cseq_ST_st125_fsm_124 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st125_fsm_124 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1021) begin
    if (ap_sig_bdd_1021) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_642) begin
    if (ap_sig_bdd_642) begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_853) begin
    if (ap_sig_bdd_853) begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_651) begin
    if (ap_sig_bdd_651) begin
        ap_sig_cseq_ST_st143_fsm_142 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st143_fsm_142 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_276) begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_st144_fsm_143 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st144_fsm_143 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_701) begin
    if (ap_sig_bdd_701) begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_710) begin
    if (ap_sig_bdd_710) begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_719) begin
    if (ap_sig_bdd_719) begin
        ap_sig_cseq_ST_st147_fsm_146 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st147_fsm_146 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_879) begin
    if (ap_sig_bdd_879) begin
        ap_sig_cseq_ST_st148_fsm_147 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st148_fsm_147 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_734) begin
    if (ap_sig_bdd_734) begin
        ap_sig_cseq_ST_st149_fsm_148 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_148 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_748) begin
    if (ap_sig_bdd_748) begin
        ap_sig_cseq_ST_st151_fsm_150 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st151_fsm_150 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_761) begin
    if (ap_sig_bdd_761) begin
        ap_sig_cseq_ST_st152_fsm_151 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st152_fsm_151 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_779) begin
    if (ap_sig_bdd_779) begin
        ap_sig_cseq_ST_st153_fsm_152 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st153_fsm_152 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_796) begin
    if (ap_sig_bdd_796) begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_321) begin
    if (ap_sig_bdd_321) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_285) begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1028) begin
    if (ap_sig_bdd_1028) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_172) begin
    if (ap_sig_bdd_172) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_337) begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_354) begin
    if (ap_sig_bdd_354) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_432) begin
    if (ap_sig_bdd_432) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_449) begin
    if (ap_sig_bdd_449) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_371) begin
    if (ap_sig_bdd_371) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_533) begin
    if (ap_sig_bdd_533) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_467) begin
    if (ap_sig_bdd_467) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_478) begin
    if (ap_sig_bdd_478) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_491) begin
    if (ap_sig_bdd_491) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_542) begin
    if (ap_sig_bdd_542) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_388) begin
    if (ap_sig_bdd_388) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_832) begin
    if (ap_sig_bdd_832) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_513) begin
    if (ap_sig_bdd_513) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_551) begin
    if (ap_sig_bdd_551) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_562) begin
    if (ap_sig_bdd_562) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_575) begin
    if (ap_sig_bdd_575) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_596) begin
    if (ap_sig_bdd_596) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_260) begin
    if (ap_sig_bdd_260) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_311) begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1036) begin
    if (ap_sig_bdd_1036) begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_253) begin
    if (ap_sig_bdd_253) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_328) begin
    if (ap_sig_bdd_328) begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_294) begin
    if (ap_sig_bdd_294) begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1043) begin
    if (ap_sig_bdd_1043) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_344) begin
    if (ap_sig_bdd_344) begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_361) begin
    if (ap_sig_bdd_361) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

always @ (P_netOut_TREADY or ap_reg_ioackin_P_netOut_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_netOut_TREADY)) begin
        ap_sig_ioackin_P_netOut_TREADY = P_netOut_TREADY;
    end else begin
        ap_sig_ioackin_P_netOut_TREADY = ap_const_logic_1;
    end
end

always @ (P_uOut_TREADY or ap_reg_ioackin_P_uOut_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY)) begin
        ap_sig_ioackin_P_uOut_TREADY = P_uOut_TREADY;
    end else begin
        ap_sig_ioackin_P_uOut_TREADY = ap_const_logic_1;
    end
end

always @ (sum_reg_309 or sumsoft_reg_332 or sum_1_reg_355 or ap_sig_cseq_ST_st119_fsm_118 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st88_fsm_87 or ap_sig_cseq_ST_st94_fsm_93) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        grp_fu_491_p0 = sumsoft_reg_332;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        grp_fu_491_p0 = sum_1_reg_355;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        grp_fu_491_p0 = sum_reg_309;
    end else begin
        grp_fu_491_p0 = 'bx;
    end
end

always @ (reg_557 or reg_563 or reg_590 or ap_sig_cseq_ST_st119_fsm_118 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st88_fsm_87 or ap_sig_cseq_ST_st94_fsm_93) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        grp_fu_491_p1 = reg_590;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        grp_fu_491_p1 = reg_557;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87))) begin
        grp_fu_491_p1 = reg_563;
    end else begin
        grp_fu_491_p1 = 'bx;
    end
end

always @ (reg_584 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st118_fsm_117 or tmp_38_reg_1584) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st118_fsm_117)) begin
        grp_fu_509_p0 = reg_584;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        grp_fu_509_p0 = tmp_38_reg_1584;
    end else begin
        grp_fu_509_p0 = 'bx;
    end
end

always @ (reg_574 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st99_fsm_98 or tmp_34_fu_853_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        grp_fu_512_p0 = reg_574;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_512_p0 = tmp_34_fu_853_p1;
    end else begin
        grp_fu_512_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or p_uOut_addr_2_reg_1546 or ap_sig_cseq_ST_st7_fsm_6 or p_uOut_addr_4_reg_1642 or ap_sig_cseq_ST_st83_fsm_82 or ap_sig_cseq_ST_st124_fsm_123 or p_uOut_addr_5_reg_1683 or ap_sig_cseq_ST_st143_fsm_142 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st142_fsm_141 or tmp_3_fu_633_p1 or tmp_86_cast_fu_825_p1 or tmp_89_cast_fu_1004_p1 or tmp_91_cast_fu_1046_p1 or tmp_93_cast_fu_1074_p1 or ap_sig_cseq_ST_st119_fsm_118) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        p_uOut_address0 = p_uOut_addr_5_reg_1683;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        p_uOut_address0 = p_uOut_addr_4_reg_1642;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        p_uOut_address0 = p_uOut_addr_2_reg_1546;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_address0 = tmp_3_fu_633_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142)) begin
        p_uOut_address0 = tmp_93_cast_fu_1074_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        p_uOut_address0 = tmp_91_cast_fu_1046_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        p_uOut_address0 = tmp_89_cast_fu_1004_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_uOut_address0 = tmp_86_cast_fu_825_p1;
    end else begin
        p_uOut_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st143_fsm_142 or ap_sig_cseq_ST_st147_fsm_146 or tmp_94_cast_fu_1088_p1 or tmp_95_cast_fu_1251_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146)) begin
        p_uOut_address1 = tmp_95_cast_fu_1251_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142)) begin
        p_uOut_address1 = tmp_94_cast_fu_1088_p1;
    end else begin
        p_uOut_address1 = 'bx;
    end
end

always @ (tmp_reg_1448 or tmp_1_reg_1461 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_439 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st83_fsm_82 or ap_sig_cseq_ST_st124_fsm_123 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2 or ap_sig_ioackin_P_netOut_TREADY or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st142_fsm_141 or ap_sig_cseq_ST_st119_fsm_118) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_439) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) | ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141) | (ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118))) begin
        p_uOut_ce0 = ap_const_logic_1;
    end else begin
        p_uOut_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1448 or tmp_1_reg_1461 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2 or ap_sig_ioackin_P_netOut_TREADY or ap_sig_cseq_ST_st147_fsm_146) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146))) begin
        p_uOut_ce1 = ap_const_logic_1;
    end else begin
        p_uOut_ce1 = ap_const_logic_0;
    end
end

always @ (P_netIn_TDATA or reg_590 or ap_sig_cseq_ST_st2_fsm_1 or tmp_47_reg_1692 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st142_fsm_141 or ap_sig_cseq_ST_st119_fsm_118) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        p_uOut_d0 = tmp_47_reg_1692;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118))) begin
        p_uOut_d0 = reg_590;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_d0 = P_netIn_TDATA;
    end else begin
        p_uOut_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_7_fu_622_p2 or ap_sig_bdd_439 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st142_fsm_141 or ap_sig_cseq_ST_st119_fsm_118) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141) | (ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118))) begin
        p_uOut_we0 = ap_const_logic_1;
    end else begin
        p_uOut_we0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or tmp_fu_596_p2 or ap_sig_bdd_408 or tmp_reg_1448 or tmp_1_fu_606_p2 or tmp_1_reg_1461 or tmp_7_fu_622_p2 or ap_sig_bdd_439 or tmp_9_fu_642_p2 or tmp_18_fu_712_p2 or tmp_28_fu_791_p2 or tmp_20_fu_897_p2 or tmp_29_fu_970_p2 or tmp_30_fu_1026_p2 or tmp_48_reg_1688 or tmp_50_fu_1060_p2 or ap_sig_ioackin_P_netOut_TREADY or tmp_49_fu_1113_p2 or tmp_55_fu_1230_p2 or tmp_6_fu_1260_p2 or tmp_6_reg_1772 or tmp_s_fu_1298_p2 or tmp_17_fu_1374_p2 or ap_sig_bdd_786 or tmp_2_fu_1404_p2 or tmp_2_reg_1822 or ap_sig_bdd_801 or ap_sig_ioackin_P_uOut_TREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408)) begin
                ap_NS_fsm = ap_ST_st154_fsm_153;
            end else if (((tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408 & (ap_const_lv1_0 == tmp_1_fu_606_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((tmp_fu_596_p2 == ap_const_lv1_0) & ~ap_sig_bdd_408 & ~(ap_const_lv1_0 == tmp_1_fu_606_p2))) begin
                ap_NS_fsm = ap_ST_st149_fsm_148;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((ap_const_lv1_0 == tmp_7_fu_622_p2) & ~ap_sig_bdd_439)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == tmp_9_fu_642_p2)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == tmp_18_fu_712_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_28_fu_791_p2)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            if (~(ap_const_lv1_0 == tmp_20_fu_897_p2)) begin
                ap_NS_fsm = ap_ST_st83_fsm_82;
            end else begin
                ap_NS_fsm = ap_ST_st124_fsm_123;
            end
        end
        ap_ST_st83_fsm_82 : 
        begin
            if ((ap_const_lv1_0 == tmp_29_fu_970_p2)) begin
                ap_NS_fsm = ap_ST_st93_fsm_92;
            end else begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st122_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st124_fsm_123 : 
        begin
            if ((ap_const_lv1_0 == tmp_30_fu_1026_p2)) begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end else begin
                ap_NS_fsm = ap_ST_st125_fsm_124;
            end
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st140_fsm_139;
        end
        ap_ST_st140_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st142_fsm_141;
        end
        ap_ST_st142_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st143_fsm_142 : 
        begin
            if ((~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2)) | (~(ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_2_reg_1822)) | ((ap_const_lv1_0 == tmp_reg_1448) & ~(ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_6_reg_1772)) | ((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_49_fu_1113_p2))))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_48_reg_1688) & ~(ap_const_lv1_0 == tmp_49_fu_1113_p2))) begin
                ap_NS_fsm = ap_ST_st147_fsm_146;
            end else if (((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & ~((ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_TREADY)) & ~(ap_const_lv1_0 == tmp_50_fu_1060_p2))) begin
                ap_NS_fsm = ap_ST_st144_fsm_143;
            end else begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end
        end
        ap_ST_st144_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st145_fsm_144;
        end
        ap_ST_st145_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st146_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st143_fsm_142;
        end
        ap_ST_st147_fsm_146 : 
        begin
            if (~(ap_const_lv1_0 == tmp_55_fu_1230_p2)) begin
                ap_NS_fsm = ap_ST_st148_fsm_147;
            end else begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end
        end
        ap_ST_st148_fsm_147 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_NS_fsm = ap_ST_st147_fsm_146;
            end else begin
                ap_NS_fsm = ap_ST_st148_fsm_147;
            end
        end
        ap_ST_st149_fsm_148 : 
        begin
            if (~(ap_const_lv1_0 == tmp_6_fu_1260_p2)) begin
                ap_NS_fsm = ap_ST_st150_fsm_149;
            end else begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end
        end
        ap_ST_st150_fsm_149 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_150;
        end
        ap_ST_st151_fsm_150 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_151;
        end
        ap_ST_st152_fsm_151 : 
        begin
            if ((ap_const_lv1_0 == tmp_s_fu_1298_p2)) begin
                ap_NS_fsm = ap_ST_st149_fsm_148;
            end else begin
                ap_NS_fsm = ap_ST_st153_fsm_152;
            end
        end
        ap_ST_st153_fsm_152 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
                ap_NS_fsm = ap_ST_st153_fsm_152;
            end else if (((ap_const_lv1_0 == tmp_17_fu_1374_p2) & ~ap_sig_bdd_786)) begin
                ap_NS_fsm = ap_ST_st152_fsm_151;
            end else begin
                ap_NS_fsm = ap_ST_st153_fsm_152;
            end
        end
        ap_ST_st154_fsm_153 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801)) begin
                ap_NS_fsm = ap_ST_st154_fsm_153;
            end else if (((ap_const_lv1_0 == tmp_2_fu_1404_p2) & ~ap_sig_bdd_801)) begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end else begin
                ap_NS_fsm = ap_ST_st154_fsm_153;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign P_netOut_TDATA = p_netOut_reg_389;

assign P_uOut_TDATA = p_uOut_q1;

assign ST_WandB_d0 = P_WandB_TDATA;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1021 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1028 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1036 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1043 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_172 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_253 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_260 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_268 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_294 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_321 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_328 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_344 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_354 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_361 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_371 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_378 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_388 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_75]);
end


always @ (ap_start or P_config_TVALID or tmp_fu_596_p2) begin
    ap_sig_bdd_408 = (((P_config_TVALID == ap_const_logic_0) & ~(tmp_fu_596_p2 == ap_const_lv1_0)) | (ap_start == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_432 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (P_netIn_TVALID or tmp_7_fu_622_p2) begin
    ap_sig_bdd_439 = ((P_netIn_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_7_fu_622_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_449 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_467 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_478 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_491 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_513 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_533 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_551 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_562 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_575 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_596 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_615 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_624 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_642 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_651 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_701 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_90]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_710 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_719 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_92]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_734 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_94]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_748 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_96]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_761 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_97]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_779 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_98]);
end


always @ (P_WandB_TVALID or tmp_17_fu_1374_p2) begin
    ap_sig_bdd_786 = ((P_WandB_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_17_fu_1374_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_796 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_99]);
end


always @ (P_config_TVALID or tmp_2_fu_1404_p2) begin
    ap_sig_bdd_801 = ((P_config_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_2_fu_1404_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_832 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_853 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_879 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_93]);
end


always @ (tmp_reg_1448 or tmp_1_reg_1461 or tmp_48_reg_1688 or ap_sig_cseq_ST_st143_fsm_142 or tmp_50_fu_1060_p2) begin
    ap_sig_bdd_976 = ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_reg_1448) & (ap_const_lv1_0 == tmp_1_reg_1461) & (ap_const_lv1_0 == tmp_48_reg_1688) & (ap_const_lv1_0 == tmp_50_fu_1060_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_997 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_76]);
end

assign feedforward_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign grp_fu_1269_ce = ap_const_logic_1;

assign grp_fu_1269_p0 = ap_const_lv38_23;

assign grp_fu_1269_p1 = grp_fu_1269_p10;

assign grp_fu_1269_p10 = i_1_reg_446;

assign grp_fu_491_ce = ap_const_logic_1;

assign grp_fu_498_ce = ap_const_logic_1;

assign grp_fu_504_ce = ap_const_logic_1;

assign grp_fu_519_ce = ap_const_logic_1;

assign grp_fu_524_ce = ap_const_logic_1;

assign grp_fu_529_ce = ap_const_logic_1;

assign grp_fu_651_ce = ap_const_logic_1;

assign grp_fu_651_p0 = ap_const_lv38_23;

assign grp_fu_651_p1 = grp_fu_651_p10;

assign grp_fu_651_p10 = i_3_reg_286;

assign grp_fu_666_ce = ap_const_logic_1;

assign grp_fu_666_p0 = ap_const_lv39_23;

assign i_10_fu_781_p2 = (i_3_reg_286 + ap_const_lv31_1);

assign i_11_fu_1031_p2 = (i_5_reg_378 + ap_const_lv31_1);

assign i_12_fu_903_p2 = (i_4_reg_344 + ap_const_lv32_1);

assign i_14_fu_1118_p2 = (ap_const_lv31_1 + i_6_reg_413);

assign i_15_fu_1093_p2 = (ap_const_lv31_1 + p_netOut_2_reg_402);

assign i_1_cast_fu_1256_p1 = i_1_reg_446;

assign i_2_cast_fu_618_p1 = i_2_reg_275;

assign i_3_cast_fu_638_p1 = i_3_reg_286;

assign i_5_cast_fu_1022_p1 = i_5_reg_378;

assign i_6_cast_fu_1109_p1 = i_6_reg_413;

assign i_7_fu_1409_p2 = (i_reg_480 + ap_const_lv31_1);

assign i_8_fu_627_p2 = (i_2_reg_275 + ap_const_lv31_1);

assign i_9_fu_1349_p2 = (i_1_reg_446 + ap_const_lv31_1);

assign i_cast_fu_1400_p1 = i_reg_480;

assign j_2_cast_fu_966_p1 = j_2_reg_367;

assign j_4_fu_1304_p2 = (j_reg_458 + ap_const_lv32_1);

assign j_5_fu_718_p2 = (j_1_reg_298 + ap_const_lv32_1);

assign j_6_fu_975_p2 = (j_2_reg_367 + ap_const_lv31_1);

assign j_7_fu_1236_p2 = (j_3_reg_435 + ap_const_lv32_1);

assign k_1_cast_fu_787_p1 = k_1_reg_321;

assign k_2_fu_1380_p2 = (k_reg_469 + ap_const_lv32_1);

assign k_3_fu_796_p2 = (k_1_reg_321 + ap_const_lv31_1);

assign next_mul_fu_1103_p2 = (ap_const_lv37_23 + phi_mul_reg_424);

assign notlhs1_fu_1181_p2 = (tmp_59_fu_1149_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_1163_p2 = (tmp_57_fu_1132_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs2_fu_1187_p2 = (tmp_98_fu_1159_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_1169_p2 = (tmp_97_fu_1142_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign p_netOut_1_fu_1211_p3 = ((tmp_65_reg_1749[0:0] === 1'b1) ? p_netOut_2_cast_reg_1697 : p_netOut_reg_389);

assign p_netOut_2_cast_fu_1056_p1 = p_netOut_2_reg_402;

assign p_shl1_cast_fu_1335_p3 = {{tmp_19_fu_1331_p1}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_755_p3 = {{tmp_69_fu_751_p1}, {ap_const_lv5_0}};

assign p_shl3_cast_fu_767_p3 = {{tmp_70_fu_763_p1}, {ap_const_lv2_0}};

assign p_shl4_cast_fu_940_p3 = {{tmp_73_fu_936_p1}, {ap_const_lv5_0}};

assign p_shl5_cast_fu_952_p3 = {{tmp_74_fu_948_p1}, {ap_const_lv2_0}};

assign p_shl_cast_fu_1323_p3 = {{tmp_14_fu_1319_p1}, {ap_const_lv5_0}};

assign p_uOut_load_3_to_int_fu_1128_p1 = reg_550;

assign p_uOut_load_4_to_int_fu_1146_p1 = p_uOut_load_4_reg_1743;

assign tmp_10_fu_1275_p1 = i_1_reg_446[1:0];

assign tmp_11_fu_676_p2 = ($signed(ap_const_lv31_7FFFFFFF) + $signed(i_3_reg_286));

assign tmp_12_fu_1314_p2 = ($signed(tmp_4_cast_fu_1310_p1) + $signed(tmp_8_reg_1781));

assign tmp_13_fu_657_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(ST_numLayer_load_reg_1452));

assign tmp_14_fu_1319_p1 = tmp_12_fu_1314_p2[8:0];

assign tmp_15_fu_858_p2 = ($signed(ap_const_lv32_FFFFFFFE) + $signed(ST_numLayer_load_reg_1452));

assign tmp_16_fu_1368_p2 = (tmp_21_fu_1355_p6 + ap_const_lv32_1);

assign tmp_17_fu_1374_p2 = ($signed(k_reg_469) < $signed(tmp_16_fu_1368_p2)? 1'b1: 1'b0);

assign tmp_18_fu_712_p2 = ($signed(j_1_reg_298) < $signed(tmp_22_fu_699_p6)? 1'b1: 1'b0);

assign tmp_19_fu_1331_p1 = tmp_12_fu_1314_p2[11:0];

assign tmp_1_fu_606_p2 = (P_mode == ap_const_lv32_2? 1'b1: 1'b0);

assign tmp_20_fu_897_p2 = ($signed(i_4_reg_344) < $signed(tmp_25_fu_884_p6)? 1'b1: 1'b0);

assign tmp_23_fu_1343_p2 = (p_shl_cast_fu_1323_p3 + p_shl1_cast_fu_1335_p3);

assign tmp_24_cast_fu_737_p1 = $signed(j_1_reg_298);

assign tmp_27_cast_fu_922_p1 = $signed(i_4_reg_344);

assign tmp_27_fu_690_p1 = i_3_reg_286[1:0];

assign tmp_28_fu_791_p2 = ($signed(k_1_cast_fu_787_p1) < $signed(tmp_26_reg_1534)? 1'b1: 1'b0);

assign tmp_29_fu_970_p2 = ($signed(j_2_cast_fu_966_p1) < $signed(tmp_54_reg_1630)? 1'b1: 1'b0);

assign tmp_2_fu_1404_p2 = ($signed(i_cast_fu_1400_p1) < $signed(P_config_read_reg_1470)? 1'b1: 1'b0);

assign tmp_30_fu_1026_p2 = ($signed(i_5_cast_fu_1022_p1) < $signed(tmp_25_reg_1616)? 1'b1: 1'b0);

assign tmp_31_fu_682_p1 = tmp_11_fu_676_p2[8:0];

assign tmp_33_fu_694_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_31_reg_1501));

assign tmp_34_fu_853_p1 = tmp_34_neg_fu_847_p2;

assign tmp_34_neg_fu_847_p2 = (tmp_34_to_int_fu_843_p1 ^ ap_const_lv32_80000000);

assign tmp_34_to_int_fu_843_p1 = reg_574;

assign tmp_3_fu_633_p1 = i_2_reg_275;

assign tmp_40_fu_686_p1 = tmp_11_fu_676_p2[1:0];

assign tmp_46_fu_871_p1 = grp_fu_666_p2[8:0];

assign tmp_48_fu_1051_p2 = (P_mode_read_reg_1443 == ap_const_lv32_3? 1'b1: 1'b0);

assign tmp_49_fu_1113_p2 = ($signed(i_6_cast_fu_1109_p1) < $signed(ST_numLayer_load_reg_1452)? 1'b1: 1'b0);

assign tmp_4_cast_fu_1310_p1 = $signed(j_reg_458);

assign tmp_4_fu_1415_p1 = i_reg_480[1:0];

assign tmp_50_fu_1060_p2 = ($signed(p_netOut_2_cast_fu_1056_p1) < $signed(tmp_25_reg_1616)? 1'b1: 1'b0);

assign tmp_51_fu_875_p1 = grp_fu_666_p2[37:0];

assign tmp_52_fu_672_p1 = tmp_13_fu_657_p2[1:0];

assign tmp_53_fu_863_p1 = tmp_15_fu_858_p2[8:0];

assign tmp_55_fu_1230_p2 = ($signed(j_3_reg_435) < $signed(tmp_66_fu_1217_p6)? 1'b1: 1'b0);

assign tmp_56_fu_879_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_53_reg_1589));

assign tmp_57_fu_1132_p4 = {{p_uOut_load_3_to_int_fu_1128_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_58_fu_867_p1 = tmp_15_fu_858_p2[1:0];

assign tmp_59_fu_1149_p4 = {{p_uOut_load_4_to_int_fu_1146_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_60_fu_1386_p1 = k_reg_469[13:0];

assign tmp_61_fu_1175_p2 = (notrhs_fu_1169_p2 | notlhs_fu_1163_p2);

assign tmp_62_fu_1193_p2 = (notrhs2_fu_1187_p2 | notlhs1_fu_1181_p2);

assign tmp_63_fu_1199_p2 = (tmp_61_fu_1175_p2 & tmp_62_fu_1193_p2);

assign tmp_64_fu_515_opcode = ap_const_lv5_2;

assign tmp_65_fu_1205_p2 = (tmp_63_fu_1199_p2 & tmp_64_fu_515_p2);

assign tmp_67_fu_1390_p2 = (tmp_23_reg_1804 + tmp_60_fu_1386_p1);

assign tmp_68_fu_741_p2 = ($signed(tmp_24_cast_fu_737_p1) + $signed(tmp_24_reg_1511));

assign tmp_69_fu_751_p1 = tmp_68_fu_741_p2[8:0];

assign tmp_6_fu_1260_p2 = ($signed(i_1_cast_fu_1256_p1) < $signed(ST_numLayer_load_reg_1452)? 1'b1: 1'b0);

assign tmp_70_fu_763_p1 = tmp_68_fu_741_p2[11:0];

assign tmp_71_fu_775_p2 = (p_shl2_cast_fu_755_p3 + p_shl3_cast_fu_767_p3);

assign tmp_72_fu_926_p2 = ($signed(tmp_27_cast_fu_922_p1) + $signed(tmp_51_reg_1606));

assign tmp_73_fu_936_p1 = tmp_72_fu_926_p2[8:0];

assign tmp_74_fu_948_p1 = tmp_72_fu_926_p2[11:0];

assign tmp_75_fu_960_p2 = (p_shl4_cast_fu_940_p3 + p_shl5_cast_fu_952_p3);

assign tmp_76_cast_fu_1395_p1 = tmp_67_fu_1390_p2;

assign tmp_76_fu_1037_p1 = i_5_reg_378[8:0];

assign tmp_77_cast_fu_746_p1 = $signed(tmp_68_fu_741_p2);

assign tmp_77_fu_1041_p2 = (tmp_46_reg_1599 + tmp_76_fu_1037_p1);

assign tmp_78_fu_802_p1 = k_1_reg_321[8:0];

assign tmp_79_fu_806_p1 = k_1_reg_321[13:0];

assign tmp_7_fu_622_p2 = ($signed(i_2_cast_fu_618_p1) < $signed(ST_layerSize_0_load_reg_1465)? 1'b1: 1'b0);

assign tmp_80_fu_810_p2 = (tmp_71_reg_1540 + tmp_79_fu_806_p1);

assign tmp_81_cast_fu_931_p1 = $signed(tmp_72_fu_926_p2);

assign tmp_81_fu_820_p2 = (tmp_33_reg_1521 + tmp_78_fu_802_p1);

assign tmp_82_fu_830_p1 = tmp_26_reg_1534[13:0];

assign tmp_83_fu_833_p2 = (tmp_71_reg_1540 + tmp_82_fu_830_p1);

assign tmp_84_fu_981_p1 = j_2_reg_367[8:0];

assign tmp_85_cast_fu_815_p1 = tmp_80_fu_810_p2;

assign tmp_85_fu_985_p1 = j_2_reg_367[13:0];

assign tmp_86_cast_fu_825_p1 = $signed(tmp_81_fu_820_p2);

assign tmp_86_fu_989_p2 = (tmp_75_reg_1636 + tmp_85_fu_985_p1);

assign tmp_87_cast_fu_838_p1 = tmp_83_fu_833_p2;

assign tmp_87_fu_999_p2 = (tmp_56_reg_1611 + tmp_84_fu_981_p1);

assign tmp_88_cast_fu_994_p1 = tmp_86_fu_989_p2;

assign tmp_88_fu_1009_p1 = tmp_54_reg_1630[13:0];

assign tmp_89_cast_fu_1004_p1 = $signed(tmp_87_fu_999_p2);

assign tmp_89_fu_1012_p2 = (tmp_75_reg_1636 + tmp_88_fu_1009_p1);

assign tmp_90_cast_fu_1017_p1 = tmp_89_fu_1012_p2;

assign tmp_90_fu_1099_p1 = phi_mul_reg_424[8:0];

assign tmp_91_cast_fu_1046_p1 = $signed(tmp_77_fu_1041_p2);

assign tmp_91_fu_1124_p1 = i_6_reg_413[1:0];

assign tmp_92_fu_1065_p1 = p_netOut_2_reg_402[8:0];

assign tmp_93_cast_fu_1074_p1 = $signed(tmp_93_fu_1069_p2);

assign tmp_93_fu_1069_p2 = (tmp_92_fu_1065_p1 + tmp_46_reg_1599);

assign tmp_94_cast_fu_1088_p1 = $signed(tmp_94_fu_1083_p2);

assign tmp_94_fu_1083_p2 = (tmp_96_fu_1079_p1 + tmp_46_reg_1599);

assign tmp_95_cast_fu_1251_p1 = tmp_95_fu_1246_p2;

assign tmp_95_fu_1246_p2 = (tmp_90_reg_1720 + tmp_99_fu_1242_p1);

assign tmp_96_fu_1079_p1 = p_netOut_reg_389[8:0];

assign tmp_97_fu_1142_p1 = p_uOut_load_3_to_int_fu_1128_p1[22:0];

assign tmp_98_fu_1159_p1 = p_uOut_load_4_to_int_fu_1146_p1[22:0];

assign tmp_99_fu_1242_p1 = j_3_reg_435[8:0];

assign tmp_9_fu_642_p2 = ($signed(i_3_cast_fu_638_p1) < $signed(ST_numLayer_load_reg_1452)? 1'b1: 1'b0);

assign tmp_9_t_fu_1279_p2 = ($signed(ap_const_lv2_3) + $signed(tmp_10_fu_1275_p1));

assign tmp_fu_596_p2 = (P_mode == ap_const_lv32_1? 1'b1: 1'b0);

assign tmp_s_fu_1298_p2 = ($signed(j_reg_458) < $signed(tmp_5_fu_1285_p6)? 1'b1: 1'b0);
always @ (posedge ap_clk) begin
    tmp_71_reg_1540[1:0] <= 2'b00;
    tmp_75_reg_1636[1:0] <= 2'b00;
    p_netOut_2_cast_reg_1697[31] <= 1'b0;
    tmp_23_reg_1804[1:0] <= 2'b00;
end



endmodule //feedforward

