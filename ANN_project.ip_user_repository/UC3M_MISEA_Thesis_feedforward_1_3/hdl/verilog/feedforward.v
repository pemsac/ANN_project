// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feedforward,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.621000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=39,HLS_SYN_FF=8096,HLS_SYN_LUT=11564}" *)

module feedforward (
        ap_clk,
        ap_rst_n,
        P_config_V_TDATA,
        P_config_V_TVALID,
        P_config_V_TREADY,
        P_WandB_TDATA,
        P_WandB_TVALID,
        P_WandB_TREADY,
        P_uOut_TDATA,
        P_uOut_TVALID,
        P_uOut_TREADY,
        P_netIn_TDATA,
        P_netIn_TVALID,
        P_netIn_TREADY,
        P_netOut_V_TDATA,
        P_netOut_V_TVALID,
        P_netOut_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 149'b1;
parameter    ap_ST_st2_fsm_1 = 149'b10;
parameter    ap_ST_st3_fsm_2 = 149'b100;
parameter    ap_ST_st4_fsm_3 = 149'b1000;
parameter    ap_ST_st5_fsm_4 = 149'b10000;
parameter    ap_ST_st6_fsm_5 = 149'b100000;
parameter    ap_ST_st7_fsm_6 = 149'b1000000;
parameter    ap_ST_st8_fsm_7 = 149'b10000000;
parameter    ap_ST_st9_fsm_8 = 149'b100000000;
parameter    ap_ST_st10_fsm_9 = 149'b1000000000;
parameter    ap_ST_st11_fsm_10 = 149'b10000000000;
parameter    ap_ST_st12_fsm_11 = 149'b100000000000;
parameter    ap_ST_st13_fsm_12 = 149'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 149'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 149'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 149'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 149'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 149'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 149'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 149'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 149'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 149'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 149'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 149'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 149'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 149'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 149'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 149'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 149'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 149'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 149'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 149'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 149'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 149'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 149'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 149'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 149'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 149'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 149'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 149'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 149'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 149'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 149'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 149'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 149'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 149'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 149'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 149'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 149'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 149'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 149'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 149'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 149'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 149'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 149'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 149'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 149'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 149'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 149'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 149'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 149'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 149'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 149'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 149'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 149'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 149'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 149'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 149'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 149'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_146 = 149'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_147 = 149'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_148 = 149'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_70 = 32'b1110000;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_71 = 32'b1110001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_76 = 32'b1110110;
parameter    ap_const_lv32_77 = 32'b1110111;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_8E = 32'b10001110;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_92 = 32'b10010010;
parameter    ap_const_lv32_93 = 32'b10010011;
parameter    ap_const_lv32_94 = 32'b10010100;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_8F = 32'b10001111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_72 = 32'b1110010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv15_23 = 15'b100011;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_23 = 9'b100011;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv16_23 = 16'b100011;
parameter    ap_const_lv9_1FE = 9'b111111110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv8_3 = 8'b11;
parameter    ap_const_lv14_23 = 14'b100011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] P_config_V_TDATA;
input   P_config_V_TVALID;
output   P_config_V_TREADY;
input  [31:0] P_WandB_TDATA;
input   P_WandB_TVALID;
output   P_WandB_TREADY;
output  [31:0] P_uOut_TDATA;
output   P_uOut_TVALID;
input   P_uOut_TREADY;
input  [31:0] P_netIn_TDATA;
input   P_netIn_TVALID;
output   P_netIn_TREADY;
output  [7:0] P_netOut_V_TDATA;
output   P_netOut_V_TVALID;
input   P_netOut_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg P_config_V_TREADY;
reg P_WandB_TREADY;
reg P_uOut_TVALID;
reg P_netIn_TREADY;
reg P_netOut_V_TVALID;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [148:0] ap_CS_fsm = 149'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_167;
reg    ap_ready;
wire   [7:0] P_mode_V;
reg   [7:0] ST_numLayer_V = 8'b00000000;
reg   [7:0] ST_layerSize_V_0 = 8'b00000000;
reg   [7:0] ST_layerSize_V_1 = 8'b00000000;
reg   [7:0] ST_layerSize_V_2 = 8'b00000000;
reg   [7:0] ST_layerSize_V_3 = 8'b00000000;
reg   [12:0] ST_WandB_address0;
reg    ST_WandB_ce0;
reg    ST_WandB_we0;
wire   [31:0] ST_WandB_d0;
wire   [31:0] ST_WandB_q0;
wire    feedforward_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [31:0] p_uOut_q0;
reg   [31:0] reg_565;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_249;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_256;
reg    ap_sig_cseq_ST_st121_fsm_120;
reg    ap_sig_bdd_264;
reg    ap_sig_cseq_ST_st140_fsm_139;
reg    ap_sig_bdd_272;
reg   [31:0] reg_572;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_281;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_bdd_290;
wire   [31:0] grp_fu_513_p2;
reg   [31:0] reg_578;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_300;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_307;
wire   [31:0] grp_fu_506_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_317;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_bdd_324;
reg   [31:0] reg_589;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_333;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_340;
wire   [63:0] grp_fu_527_p1;
reg   [63:0] reg_594;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_350;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_357;
wire   [63:0] grp_fu_544_p2;
reg   [63:0] reg_599;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_367;
reg    ap_sig_cseq_ST_st113_fsm_112;
reg    ap_sig_bdd_374;
wire   [31:0] grp_fu_524_p1;
reg   [31:0] reg_605;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_384;
reg    ap_sig_cseq_ST_st114_fsm_113;
reg    ap_sig_bdd_391;
reg   [7:0] P_mode_V_read_reg_1437;
wire   [0:0] tmp_fu_611_p2;
reg    ap_sig_bdd_404;
reg   [0:0] tmp_reg_1442;
reg   [7:0] ST_numLayer_V_load_reg_1446;
wire   [0:0] tmp_1_fu_621_p2;
reg   [0:0] tmp_1_reg_1454;
reg   [7:0] ST_layerSize_V_0_load_reg_1458;
reg   [7:0] P_config_V_read_reg_1463;
wire   [7:0] i_8_fu_638_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_428;
wire   [0:0] exitcond1_fu_633_p2;
reg    ap_sig_bdd_434;
wire   [31:0] tmp_62_cast_fu_664_p1;
reg   [31:0] tmp_62_cast_reg_1479;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_444;
wire   [0:0] tmp_7_fu_649_p2;
wire   [1:0] tmp_6_fu_668_p1;
reg   [1:0] tmp_6_reg_1484;
wire   [8:0] tmp_16_fu_682_p2;
reg   [8:0] tmp_16_reg_1489;
wire   [1:0] tmp_20_fu_688_p1;
reg   [1:0] tmp_20_reg_1494;
wire   [8:0] tmp_24_fu_711_p1;
reg   [8:0] tmp_24_reg_1499;
wire  signed [32:0] tmp_64_cast_fu_715_p1;
reg  signed [32:0] tmp_64_cast_reg_1506;
wire   [1:0] tmp_26_fu_719_p1;
reg   [1:0] tmp_26_reg_1511;
wire   [8:0] tmp_33_fu_729_p2;
reg   [8:0] tmp_33_reg_1516;
wire   [1:0] tmp_35_fu_735_p1;
reg   [1:0] tmp_35_reg_1521;
wire   [31:0] j_5_fu_762_p2;
reg   [31:0] j_5_reg_1529;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_474;
wire   [7:0] tmp_19_fu_768_p6;
reg   [7:0] tmp_19_reg_1534;
wire   [0:0] tmp_14_fu_756_p2;
wire   [13:0] tmp_60_fu_815_p2;
reg   [13:0] tmp_60_reg_1540;
reg   [7:0] p_uOut_addr_1_reg_1546;
wire   [7:0] i_10_fu_821_p2;
wire   [7:0] k_3_fu_832_p2;
reg   [7:0] k_3_reg_1559;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_496;
wire   [0:0] exitcond2_fu_827_p2;
wire   [63:0] grp_fu_534_p2;
reg   [63:0] tmp_30_reg_1579;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_516;
wire   [63:0] grp_fu_539_p2;
reg   [63:0] tmp_31_reg_1584;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_525;
wire   [7:0] tmp_15_fu_894_p6;
reg   [7:0] tmp_15_reg_1589;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_534;
wire   [31:0] i_12_fu_917_p2;
reg   [31:0] i_12_reg_1598;
wire   [7:0] tmp_23_fu_923_p6;
reg   [7:0] tmp_23_reg_1603;
wire   [0:0] tmp_18_fu_911_p2;
wire   [13:0] tmp_64_fu_974_p2;
reg   [13:0] tmp_64_reg_1609;
reg   [7:0] p_uOut_addr_3_reg_1615;
wire   [7:0] j_6_fu_985_p2;
reg   [7:0] j_6_reg_1623;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_555;
wire   [0:0] exitcond3_fu_980_p2;
reg    ap_sig_cseq_ST_st119_fsm_118;
reg    ap_sig_bdd_574;
wire   [7:0] i_11_fu_1037_p2;
reg   [7:0] i_11_reg_1651;
reg    ap_sig_cseq_ST_st120_fsm_119;
reg    ap_sig_bdd_583;
reg   [7:0] p_uOut_addr_5_reg_1656;
wire   [0:0] exitcond4_fu_1032_p2;
wire   [0:0] tmp_41_fu_1057_p2;
reg   [0:0] tmp_41_reg_1661;
wire   [31:0] grp_fu_519_p2;
reg   [31:0] tmp_43_reg_1665;
reg    ap_sig_cseq_ST_st137_fsm_136;
reg    ap_sig_bdd_601;
reg    ap_sig_cseq_ST_st139_fsm_138;
reg    ap_sig_bdd_610;
wire   [0:0] tmp_44_fu_1062_p2;
reg    ap_sig_ioackin_P_netOut_V_TREADY;
wire   [8:0] tmp_74_fu_1095_p1;
reg   [8:0] tmp_74_reg_1683;
wire   [13:0] next_mul_fu_1099_p2;
reg   [13:0] next_mul_reg_1688;
wire   [7:0] i_14_fu_1110_p2;
reg   [7:0] i_14_reg_1696;
wire   [1:0] tmp_75_fu_1116_p1;
reg   [1:0] tmp_75_reg_1701;
wire   [0:0] exitcond_fu_1105_p2;
wire   [31:0] p_uOut_q1;
reg   [31:0] p_uOut_load_4_reg_1706;
wire   [0:0] tmp_56_fu_1197_p2;
reg   [0:0] tmp_56_reg_1712;
reg    ap_sig_cseq_ST_st141_fsm_140;
reg    ap_sig_bdd_654;
wire   [7:0] p_netOut_V_1_fu_1203_p3;
reg    ap_sig_cseq_ST_st142_fsm_141;
reg    ap_sig_bdd_663;
wire   [7:0] i_15_fu_1210_p2;
wire   [31:0] j_7_fu_1239_p2;
reg   [31:0] j_7_reg_1730;
reg    ap_sig_cseq_ST_st143_fsm_142;
reg    ap_sig_bdd_674;
wire   [0:0] tmp_59_fu_1233_p2;
wire   [0:0] tmp_9_fu_1259_p2;
reg   [0:0] tmp_9_reg_1740;
reg    ap_sig_cseq_ST_st145_fsm_144;
reg    ap_sig_bdd_689;
wire   [31:0] tmp_61_cast_fu_1274_p1;
reg   [31:0] tmp_61_cast_reg_1744;
wire   [1:0] tmp_4_fu_1278_p1;
reg   [1:0] tmp_4_reg_1749;
wire   [1:0] tmp_7_t_fu_1282_p2;
reg   [1:0] tmp_7_t_reg_1753;
wire   [31:0] j_4_fu_1288_p2;
reg   [31:0] j_4_reg_1758;
reg    ap_sig_cseq_ST_st146_fsm_145;
reg    ap_sig_bdd_707;
wire   [13:0] tmp_46_fu_1333_p2;
reg   [13:0] tmp_46_reg_1781;
reg    ap_sig_cseq_ST_st147_fsm_146;
reg    ap_sig_bdd_732;
wire   [0:0] tmp_11_fu_1298_p2;
wire   [7:0] i_9_fu_1339_p2;
wire   [31:0] k_2_fu_1392_p2;
reg    ap_sig_cseq_ST_st148_fsm_147;
reg    ap_sig_bdd_748;
wire   [0:0] tmp_22_fu_1386_p2;
reg    ap_sig_bdd_755;
wire   [0:0] exitcond5_fu_1398_p2;
reg   [0:0] exitcond5_reg_1799;
reg    ap_sig_cseq_ST_st149_fsm_148;
reg    ap_sig_bdd_765;
reg    ap_sig_bdd_769;
wire   [7:0] i_7_fu_1403_p2;
reg   [7:0] p_uOut_address0;
reg    p_uOut_ce0;
reg    p_uOut_we0;
reg   [31:0] p_uOut_d0;
reg   [7:0] p_uOut_address1;
reg    p_uOut_ce1;
reg   [7:0] i_2_reg_277;
reg   [7:0] i_3_reg_288;
reg   [31:0] j_1_reg_300;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_800;
reg   [31:0] sum_reg_311;
reg   [7:0] k_1_reg_323;
reg   [31:0] sumsoft_reg_334;
reg   [31:0] i_4_reg_346;
reg   [31:0] sum_1_reg_357;
reg   [7:0] j_2_reg_369;
reg   [7:0] i_5_reg_380;
reg    ap_sig_cseq_ST_st138_fsm_137;
reg    ap_sig_bdd_821;
reg   [7:0] p_s_reg_391;
reg   [7:0] p_netOut_V_reg_404;
reg   [7:0] i_6_reg_416;
reg   [13:0] phi_mul_reg_427;
reg   [31:0] j_3_reg_438;
reg    ap_sig_cseq_ST_st144_fsm_143;
reg    ap_sig_bdd_847;
reg    ap_sig_ioackin_P_uOut_TREADY;
reg   [7:0] i_1_reg_449;
reg   [31:0] j_reg_461;
reg   [7:0] ST_layerSize_V_load_1_phi_reg_473;
reg   [31:0] k_reg_484;
reg   [7:0] i_reg_495;
wire   [63:0] tmp_8_fu_644_p1;
wire  signed [63:0] tmp_70_cast_fu_786_p1;
wire   [63:0] tmp_80_cast_fu_851_p1;
wire  signed [63:0] tmp_81_cast_fu_861_p1;
wire   [63:0] tmp_79_cast_fu_874_p1;
wire  signed [63:0] tmp_74_cast_fu_945_p1;
wire   [63:0] tmp_83_cast_fu_1004_p1;
wire  signed [63:0] tmp_84_cast_fu_1014_p1;
wire   [63:0] tmp_82_cast_fu_1027_p1;
wire  signed [63:0] tmp_85_cast_fu_1052_p1;
wire  signed [63:0] tmp_87_cast_fu_1076_p1;
wire  signed [63:0] tmp_88_cast_fu_1090_p1;
wire   [63:0] tmp_89_cast_fu_1254_p1;
wire   [63:0] tmp_78_cast_fu_1354_p1;
wire   [1:0] tmp_2_fu_1409_p1;
reg    ap_reg_ioackin_P_netOut_V_TREADY = 1'b0;
reg    ap_reg_ioackin_P_uOut_TREADY = 1'b0;
reg    ap_sig_cseq_ST_st115_fsm_114;
reg    ap_sig_bdd_963;
reg   [31:0] grp_fu_506_p0;
reg   [31:0] grp_fu_506_p1;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_987;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_994;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_1002;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_1009;
reg   [63:0] grp_fu_524_p0;
reg   [31:0] grp_fu_527_p0;
wire   [31:0] tmp_27_fu_889_p1;
wire   [7:0] tmp_5_fu_658_p1;
wire   [14:0] tmp_5_fu_658_p2;
wire   [7:0] tmp_3_fu_672_p2;
wire   [7:0] tmp_16_fu_682_p1;
wire   [8:0] lhs_V_1_cast_fu_692_p1;
wire   [8:0] r_V_1_fu_695_p2;
wire  signed [8:0] tmp_21_fu_705_p1;
wire   [15:0] tmp_21_fu_705_p2;
wire  signed [8:0] r_V_2_fu_723_p2;
wire   [7:0] tmp_12_fu_739_p6;
wire   [31:0] tmp_13_fu_752_p1;
wire   [31:0] tmp_47_fu_781_p2;
wire   [8:0] tmp_49_fu_791_p1;
wire   [11:0] tmp_51_fu_803_p1;
wire   [13:0] p_shl2_cast_fu_795_p3;
wire   [13:0] p_shl3_cast_fu_807_p3;
wire   [13:0] tmp_33_cast_fu_842_p1;
wire   [13:0] tmp_69_fu_846_p2;
wire   [8:0] tmp_33_cast7_fu_838_p1;
wire   [8:0] tmp_70_fu_856_p2;
wire   [13:0] tmp_26_cast_fu_866_p1;
wire   [13:0] tmp_68_fu_869_p2;
wire   [31:0] tmp_35_to_int_fu_879_p1;
wire   [31:0] tmp_35_neg_fu_883_p2;
wire   [31:0] tmp_17_fu_907_p1;
wire  signed [32:0] tmp_24_cast_fu_936_p1;
wire   [32:0] tmp_61_fu_940_p2;
wire   [8:0] tmp_62_fu_950_p1;
wire   [11:0] tmp_63_fu_962_p1;
wire   [13:0] p_shl4_cast_fu_954_p3;
wire   [13:0] p_shl5_cast_fu_966_p3;
wire   [13:0] tmp_39_cast_fu_995_p1;
wire   [13:0] tmp_72_fu_999_p2;
wire   [8:0] tmp_39_cast6_fu_991_p1;
wire   [8:0] tmp_73_fu_1009_p2;
wire   [13:0] tmp_35_cast_fu_1019_p1;
wire   [13:0] tmp_71_fu_1022_p2;
wire   [8:0] tmp_42_cast_fu_1043_p1;
wire   [8:0] tmp_67_fu_1047_p2;
wire   [8:0] tmp_46_cast_fu_1067_p1;
wire   [8:0] tmp_76_fu_1071_p2;
wire   [8:0] tmp_47_cast_fu_1081_p1;
wire   [8:0] tmp_77_fu_1085_p2;
wire   [31:0] p_uOut_load_3_to_int_fu_1120_p1;
wire   [31:0] p_uOut_load_4_to_int_fu_1138_p1;
wire   [7:0] tmp_48_fu_1124_p4;
wire   [22:0] tmp_78_fu_1134_p1;
wire   [0:0] notrhs_fu_1161_p2;
wire   [0:0] notlhs_fu_1155_p2;
wire   [7:0] tmp_50_fu_1141_p4;
wire   [22:0] tmp_79_fu_1151_p1;
wire   [0:0] notrhs1_fu_1179_p2;
wire   [0:0] notlhs1_fu_1173_p2;
wire   [0:0] tmp_52_fu_1167_p2;
wire   [0:0] tmp_53_fu_1185_p2;
wire   [0:0] tmp_54_fu_1191_p2;
wire   [0:0] tmp_55_fu_530_p2;
wire   [7:0] tmp_57_fu_1216_p6;
wire   [31:0] tmp_58_fu_1229_p1;
wire   [8:0] tmp_80_fu_1245_p1;
wire   [8:0] tmp_81_fu_1249_p2;
wire   [7:0] tmp_s_fu_1268_p1;
wire   [14:0] tmp_s_fu_1268_p2;
wire   [31:0] tmp_10_fu_1294_p1;
wire   [31:0] tmp_39_fu_1304_p2;
wire   [8:0] tmp_42_fu_1309_p1;
wire   [11:0] tmp_45_fu_1321_p1;
wire   [13:0] p_shl_cast_fu_1313_p3;
wire   [13:0] p_shl1_cast_fu_1325_p3;
wire   [13:0] tmp_65_fu_1345_p1;
wire   [13:0] tmp_66_fu_1349_p2;
wire   [7:0] tmp_25_fu_1359_p6;
wire   [8:0] lhs_V_cast_fu_1372_p1;
wire   [8:0] r_V_fu_1376_p2;
wire   [31:0] tmp_21_cast_fu_1382_p1;
wire    grp_fu_506_ce;
wire    grp_fu_513_ce;
wire    grp_fu_519_ce;
wire   [4:0] tmp_55_fu_530_opcode;
wire    grp_fu_534_ce;
wire    grp_fu_539_ce;
wire    grp_fu_544_ce;
reg   [148:0] ap_NS_fsm;
wire   [8:0] tmp_16_fu_682_p10;
wire   [14:0] tmp_5_fu_658_p10;
wire   [14:0] tmp_s_fu_1268_p10;
reg    ap_sig_bdd_724;
reg    ap_sig_bdd_942;


feedforward_ST_WandB #(
    .DataWidth( 32 ),
    .AddressRange( 5040 ),
    .AddressWidth( 13 ))
ST_WandB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( ST_WandB_address0 ),
    .ce0( ST_WandB_ce0 ),
    .we0( ST_WandB_we0 ),
    .d0( ST_WandB_d0 ),
    .q0( ST_WandB_q0 )
);

feedforward_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
feedforward_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( feedforward_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .P_mode_V( P_mode_V )
);

feedforward_p_uOut #(
    .DataWidth( 32 ),
    .AddressRange( 140 ),
    .AddressWidth( 8 ))
p_uOut_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( p_uOut_address0 ),
    .ce0( p_uOut_ce0 ),
    .we0( p_uOut_we0 ),
    .d0( p_uOut_d0 ),
    .q0( p_uOut_q0 ),
    .address1( p_uOut_address1 ),
    .ce1( p_uOut_ce1 ),
    .q1( p_uOut_q1 )
);

feedforward_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_506_p0 ),
    .din1( grp_fu_506_p1 ),
    .ce( grp_fu_506_ce ),
    .dout( grp_fu_506_p2 )
);

feedforward_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( p_uOut_q0 ),
    .din1( ST_WandB_q0 ),
    .ce( grp_fu_513_ce ),
    .dout( grp_fu_513_p2 )
);

feedforward_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
feedforward_fdiv_32ns_32ns_32_16_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( reg_565 ),
    .din1( sumsoft_reg_334 ),
    .ce( grp_fu_519_ce ),
    .dout( grp_fu_519_p2 )
);

feedforward_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
feedforward_fptrunc_64ns_32_1_U3(
    .din0( grp_fu_524_p0 ),
    .dout( grp_fu_524_p1 )
);

feedforward_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
feedforward_fpext_32ns_64_1_U4(
    .din0( grp_fu_527_p0 ),
    .dout( grp_fu_527_p1 )
);

feedforward_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
feedforward_fcmp_32ns_32ns_1_1_U5(
    .din0( reg_565 ),
    .din1( p_uOut_load_4_reg_1706 ),
    .opcode( tmp_55_fu_530_opcode ),
    .dout( tmp_55_fu_530_p2 )
);

feedforward_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dadd_64ns_64ns_64_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( reg_599 ),
    .din1( ap_const_lv64_3FF0000000000000 ),
    .ce( grp_fu_534_ce ),
    .dout( grp_fu_534_p2 )
);

feedforward_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_ddiv_64ns_64ns_64_31_U7(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_3FF0000000000000 ),
    .din1( tmp_30_reg_1579 ),
    .ce( grp_fu_539_ce ),
    .dout( grp_fu_539_p2 )
);

feedforward_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dexp_64ns_64ns_64_18_full_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_0 ),
    .din1( reg_594 ),
    .ce( grp_fu_544_ce ),
    .dout( grp_fu_544_p2 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U9(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_6_reg_1484 ),
    .dout( tmp_12_fu_739_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U10(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_20_reg_1494 ),
    .dout( tmp_19_fu_768_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U11(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_26_reg_1511 ),
    .dout( tmp_15_fu_894_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U12(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_35_reg_1521 ),
    .dout( tmp_23_fu_923_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U13(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_75_reg_1701 ),
    .dout( tmp_57_fu_1216_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U14(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_7_t_reg_1753 ),
    .dout( tmp_25_fu_1359_p6 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_netOut_V_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_942) begin
            if (~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) begin
                ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_netOut_V_TREADY)) begin
                ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_uOut_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_143)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        if (ap_sig_bdd_724) begin
            ST_layerSize_V_load_1_phi_reg_473 <= ST_layerSize_V_3;
        end else if ((tmp_4_reg_1749 == ap_const_lv2_2)) begin
            ST_layerSize_V_load_1_phi_reg_473 <= ST_layerSize_V_2;
        end else if ((tmp_4_reg_1749 == ap_const_lv2_1)) begin
            ST_layerSize_V_load_1_phi_reg_473 <= ST_layerSize_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404 & ~(ap_const_lv1_0 == tmp_1_fu_621_p2))) begin
        i_1_reg_449 <= ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146) & (ap_const_lv1_0 == tmp_11_fu_1298_p2))) begin
        i_1_reg_449 <= i_9_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404 & (ap_const_lv1_0 == tmp_1_fu_621_p2))) begin
        i_2_reg_277 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_633_p2) & ~ap_sig_bdd_434)) begin
        i_2_reg_277 <= i_8_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_434 & ~(ap_const_lv1_0 == exitcond1_fu_633_p2))) begin
        i_3_reg_288 <= ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_14_fu_756_p2))) begin
        i_3_reg_288 <= i_10_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_649_p2))) begin
        i_4_reg_346 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        i_4_reg_346 <= i_12_reg_1598;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & (ap_const_lv1_0 == tmp_18_fu_911_p2))) begin
        i_5_reg_380 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        i_5_reg_380 <= i_11_reg_1651;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_59_fu_1233_p2))) begin
        i_6_reg_416 <= i_14_reg_1696;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond4_fu_1032_p2) & ~(ap_const_lv1_0 == tmp_41_fu_1057_p2))) begin
        i_6_reg_416 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769)) begin
        i_reg_495 <= i_7_fu_1403_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404)) begin
        i_reg_495 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_7_fu_649_p2))) begin
        j_1_reg_300 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        j_1_reg_300 <= j_5_reg_1529;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & ~(ap_const_lv1_0 == tmp_18_fu_911_p2))) begin
        j_2_reg_369 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87)) begin
        j_2_reg_369 <= j_6_reg_1623;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & (ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == exitcond_fu_1105_p2))) begin
        j_3_reg_438 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_143) & ~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY))) begin
        j_3_reg_438 <= j_7_reg_1730;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & (ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
        j_reg_461 <= j_4_reg_1758;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_144) & ~(ap_const_lv1_0 == tmp_9_fu_1259_p2))) begin
        j_reg_461 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_14_fu_756_p2))) begin
        k_1_reg_323 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        k_1_reg_323 <= k_3_reg_1559;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146) & ~(ap_const_lv1_0 == tmp_11_fu_1298_p2))) begin
        k_reg_484 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & ~(ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
        k_reg_484 <= k_2_fu_1392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond4_fu_1032_p2) & (ap_const_lv1_0 == tmp_41_fu_1057_p2))) begin
        p_netOut_V_reg_404 <= ap_const_lv8_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        p_netOut_V_reg_404 <= i_15_fu_1210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond4_fu_1032_p2) & (ap_const_lv1_0 == tmp_41_fu_1057_p2))) begin
        p_s_reg_391 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        p_s_reg_391 <= p_netOut_V_1_fu_1203_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142) & (ap_const_lv1_0 == tmp_59_fu_1233_p2))) begin
        phi_mul_reg_427 <= next_mul_reg_1688;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond4_fu_1032_p2) & ~(ap_const_lv1_0 == tmp_41_fu_1057_p2))) begin
        phi_mul_reg_427 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & ~(ap_const_lv1_0 == tmp_18_fu_911_p2))) begin
        sum_1_reg_357 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87)) begin
        sum_1_reg_357 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_14_fu_756_p2))) begin
        sum_reg_311 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        sum_reg_311 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_649_p2))) begin
        sumsoft_reg_334 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st119_fsm_118)) begin
        sumsoft_reg_334 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404)) begin
        P_config_V_read_reg_1463 <= P_config_V_TDATA;
        ST_numLayer_V <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_404)) begin
        P_mode_V_read_reg_1437 <= P_mode_V;
        ST_numLayer_V_load_reg_1446 <= ST_numLayer_V;
        tmp_reg_1442 <= tmp_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769 & (tmp_2_fu_1409_p1 == ap_const_lv2_0))) begin
        ST_layerSize_V_0 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404 & (ap_const_lv1_0 == tmp_1_fu_621_p2))) begin
        ST_layerSize_V_0_load_reg_1458 <= ST_layerSize_V_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769 & (ap_const_lv2_1 == tmp_2_fu_1409_p1))) begin
        ST_layerSize_V_1 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769 & (ap_const_lv2_2 == tmp_2_fu_1409_p1))) begin
        ST_layerSize_V_2 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769 & ~(ap_const_lv2_2 == tmp_2_fu_1409_p1) & ~(ap_const_lv2_1 == tmp_2_fu_1409_p1) & ~(tmp_2_fu_1409_p1 == ap_const_lv2_0))) begin
        ST_layerSize_V_3 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & ~ap_sig_bdd_769)) begin
        exitcond5_reg_1799 <= exitcond5_fu_1398_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119)) begin
        i_11_reg_1651 <= i_11_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        i_12_reg_1598 <= i_12_fu_917_p2;
        tmp_15_reg_1589 <= tmp_15_fu_894_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & (ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_41_reg_1661))) begin
        i_14_reg_1696 <= i_14_fu_1110_p2;
        next_mul_reg_1688 <= next_mul_fu_1099_p2;
        tmp_74_reg_1683 <= tmp_74_fu_1095_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        j_4_reg_1758 <= j_4_fu_1288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_5_reg_1529 <= j_5_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        j_6_reg_1623 <= j_6_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142)) begin
        j_7_reg_1730 <= j_7_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        k_3_reg_1559 <= k_3_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_14_fu_756_p2))) begin
        p_uOut_addr_1_reg_1546 <= tmp_70_cast_fu_786_p1;
        tmp_19_reg_1534 <= tmp_19_fu_768_p6;
        tmp_60_reg_1540[13 : 2] <= tmp_60_fu_815_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & ~(ap_const_lv1_0 == tmp_18_fu_911_p2))) begin
        p_uOut_addr_3_reg_1615 <= tmp_74_cast_fu_945_p1;
        tmp_23_reg_1603 <= tmp_23_fu_923_p6;
        tmp_64_reg_1609[13 : 2] <= tmp_64_fu_974_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & (ap_const_lv1_0 == exitcond4_fu_1032_p2))) begin
        p_uOut_addr_5_reg_1656 <= tmp_85_cast_fu_1052_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139)) begin
        p_uOut_load_4_reg_1706 <= p_uOut_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120) | (ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139))) begin
        reg_565 <= p_uOut_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        reg_572 <= ST_WandB_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82))) begin
        reg_578 <= grp_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        reg_589 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94))) begin
        reg_594 <= grp_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38) | (ap_const_logic_1 == ap_sig_cseq_ST_st113_fsm_112))) begin
        reg_599 <= grp_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st114_fsm_113))) begin
        reg_605 <= grp_fu_524_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_7_fu_649_p2))) begin
        tmp_16_reg_1489 <= tmp_16_fu_682_p2;
        tmp_20_reg_1494 <= tmp_20_fu_688_p1;
        tmp_62_cast_reg_1479[14 : 0] <= tmp_62_cast_fu_664_p1[14 : 0];
        tmp_6_reg_1484 <= tmp_6_fu_668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404)) begin
        tmp_1_reg_1454 <= tmp_1_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_649_p2))) begin
        tmp_24_reg_1499 <= tmp_24_fu_711_p1;
        tmp_26_reg_1511 <= tmp_26_fu_719_p1;
        tmp_33_reg_1516 <= tmp_33_fu_729_p2;
        tmp_35_reg_1521 <= tmp_35_fu_735_p1;
        tmp_64_cast_reg_1506 <= tmp_64_cast_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        tmp_30_reg_1579 <= grp_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        tmp_31_reg_1584 <= grp_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) & ~(ap_const_lv1_0 == exitcond4_fu_1032_p2))) begin
        tmp_41_reg_1661 <= tmp_41_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136)) begin
        tmp_43_reg_1665 <= grp_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st147_fsm_146) & ~(ap_const_lv1_0 == tmp_11_fu_1298_p2))) begin
        tmp_46_reg_1781[13 : 2] <= tmp_46_fu_1333_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_144) & ~(ap_const_lv1_0 == tmp_9_fu_1259_p2))) begin
        tmp_4_reg_1749 <= tmp_4_fu_1278_p1;
        tmp_61_cast_reg_1744[14 : 0] <= tmp_61_cast_fu_1274_p1[14 : 0];
        tmp_7_t_reg_1753 <= tmp_7_t_fu_1282_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        tmp_56_reg_1712 <= tmp_56_fu_1197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & (ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == exitcond_fu_1105_p2))) begin
        tmp_75_reg_1701 <= tmp_75_fu_1116_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_144)) begin
        tmp_9_reg_1740 <= tmp_9_fu_1259_p2;
    end
end

always @ (ap_sig_cseq_ST_st148_fsm_147 or tmp_22_fu_1386_p2 or ap_sig_bdd_755) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & ~(ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
        P_WandB_TREADY = ap_const_logic_1;
    end else begin
        P_WandB_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_fu_611_p2 or ap_sig_bdd_404 or exitcond5_fu_1398_p2 or ap_sig_cseq_ST_st149_fsm_148 or ap_sig_bdd_769) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404) | ((ap_const_logic_1 == ap_sig_cseq_ST_st149_fsm_148) & (ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769))) begin
        P_config_V_TREADY = ap_const_logic_1;
    end else begin
        P_config_V_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_633_p2 or ap_sig_bdd_434) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_633_p2) & ~ap_sig_bdd_434)) begin
        P_netIn_TREADY = ap_const_logic_1;
    end else begin
        P_netIn_TREADY = ap_const_logic_0;
    end
end

always @ (tmp_reg_1442 or tmp_1_reg_1454 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2 or ap_reg_ioackin_P_netOut_V_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & (ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_reg_ioackin_P_netOut_V_TREADY))) begin
        P_netOut_V_TVALID = ap_const_logic_1;
    end else begin
        P_netOut_V_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st144_fsm_143 or ap_reg_ioackin_P_uOut_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st144_fsm_143) & (ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY))) begin
        P_uOut_TVALID = ap_const_logic_1;
    end else begin
        P_uOut_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond2_fu_827_p2 or ap_sig_cseq_ST_st79_fsm_78 or exitcond3_fu_980_p2 or ap_sig_cseq_ST_st148_fsm_147 or tmp_80_cast_fu_851_p1 or tmp_79_cast_fu_874_p1 or tmp_83_cast_fu_1004_p1 or tmp_82_cast_fu_1027_p1 or tmp_78_cast_fu_1354_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147)) begin
        ST_WandB_address0 = tmp_78_cast_fu_1354_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & ~(ap_const_lv1_0 == exitcond3_fu_980_p2))) begin
        ST_WandB_address0 = tmp_82_cast_fu_1027_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & (ap_const_lv1_0 == exitcond3_fu_980_p2))) begin
        ST_WandB_address0 = tmp_83_cast_fu_1004_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond2_fu_827_p2))) begin
        ST_WandB_address0 = tmp_79_cast_fu_874_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_827_p2))) begin
        ST_WandB_address0 = tmp_80_cast_fu_851_p1;
    end else begin
        ST_WandB_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond2_fu_827_p2 or ap_sig_cseq_ST_st79_fsm_78 or exitcond3_fu_980_p2 or ap_sig_cseq_ST_st148_fsm_147 or ap_sig_bdd_755) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_827_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond2_fu_827_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & (ap_const_lv1_0 == exitcond3_fu_980_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & ~(ap_const_lv1_0 == exitcond3_fu_980_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & ~ap_sig_bdd_755))) begin
        ST_WandB_ce0 = ap_const_logic_1;
    end else begin
        ST_WandB_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st148_fsm_147 or tmp_22_fu_1386_p2 or ap_sig_bdd_755) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st148_fsm_147) & ~(ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
        ST_WandB_we0 = ap_const_logic_1;
    end else begin
        ST_WandB_we0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1442 or tmp_1_reg_1454 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond_fu_1105_p2 or tmp_9_reg_1740 or exitcond5_reg_1799) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2)) | (~(ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == exitcond5_reg_1799)) | ((ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_9_reg_1740)) | ((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & ~(ap_const_lv1_0 == exitcond_fu_1105_p2))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_reg_1442 or tmp_1_reg_1454 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond_fu_1105_p2 or tmp_9_reg_1740 or exitcond5_reg_1799) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2)) | (~(ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == exitcond5_reg_1799)) | ((ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_9_reg_1740)) | ((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & ~(ap_const_lv1_0 == exitcond_fu_1105_p2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_987) begin
    if (ap_sig_bdd_987) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_374) begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st113_fsm_112 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st113_fsm_112 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_391) begin
    if (ap_sig_bdd_391) begin
        ap_sig_cseq_ST_st114_fsm_113 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st114_fsm_113 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_963) begin
    if (ap_sig_bdd_963) begin
        ap_sig_cseq_ST_st115_fsm_114 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st115_fsm_114 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_574) begin
    if (ap_sig_bdd_574) begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st119_fsm_118 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_583) begin
    if (ap_sig_bdd_583) begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_264) begin
    if (ap_sig_bdd_264) begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_601) begin
    if (ap_sig_bdd_601) begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_821) begin
    if (ap_sig_bdd_821) begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_610) begin
    if (ap_sig_bdd_610) begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_272) begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st140_fsm_139 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st140_fsm_139 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_654) begin
    if (ap_sig_bdd_654) begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_663) begin
    if (ap_sig_bdd_663) begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_674) begin
    if (ap_sig_bdd_674) begin
        ap_sig_cseq_ST_st143_fsm_142 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st143_fsm_142 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_847) begin
    if (ap_sig_bdd_847) begin
        ap_sig_cseq_ST_st144_fsm_143 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st144_fsm_143 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_689) begin
    if (ap_sig_bdd_689) begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_707) begin
    if (ap_sig_bdd_707) begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_732) begin
    if (ap_sig_bdd_732) begin
        ap_sig_cseq_ST_st147_fsm_146 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st147_fsm_146 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_748) begin
    if (ap_sig_bdd_748) begin
        ap_sig_cseq_ST_st148_fsm_147 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st148_fsm_147 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_765) begin
    if (ap_sig_bdd_765) begin
        ap_sig_cseq_ST_st149_fsm_148 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st149_fsm_148 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_317) begin
    if (ap_sig_bdd_317) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_281) begin
    if (ap_sig_bdd_281) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_994) begin
    if (ap_sig_bdd_994) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_167) begin
    if (ap_sig_bdd_167) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_333) begin
    if (ap_sig_bdd_333) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_350) begin
    if (ap_sig_bdd_350) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_428) begin
    if (ap_sig_bdd_428) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_367) begin
    if (ap_sig_bdd_367) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_444) begin
    if (ap_sig_bdd_444) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_516) begin
    if (ap_sig_bdd_516) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_474) begin
    if (ap_sig_bdd_474) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_496) begin
    if (ap_sig_bdd_496) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_249) begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_525) begin
    if (ap_sig_bdd_525) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_384) begin
    if (ap_sig_bdd_384) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_800) begin
    if (ap_sig_bdd_800) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_534) begin
    if (ap_sig_bdd_534) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_555) begin
    if (ap_sig_bdd_555) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_256) begin
    if (ap_sig_bdd_256) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_307) begin
    if (ap_sig_bdd_307) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1002) begin
    if (ap_sig_bdd_1002) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_324) begin
    if (ap_sig_bdd_324) begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_290) begin
    if (ap_sig_bdd_290) begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1009) begin
    if (ap_sig_bdd_1009) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_340) begin
    if (ap_sig_bdd_340) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_357) begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_300) begin
    if (ap_sig_bdd_300) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (P_netOut_V_TREADY or ap_reg_ioackin_P_netOut_V_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_netOut_V_TREADY)) begin
        ap_sig_ioackin_P_netOut_V_TREADY = P_netOut_V_TREADY;
    end else begin
        ap_sig_ioackin_P_netOut_V_TREADY = ap_const_logic_1;
    end
end

always @ (P_uOut_TREADY or ap_reg_ioackin_P_uOut_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY)) begin
        ap_sig_ioackin_P_uOut_TREADY = P_uOut_TREADY;
    end else begin
        ap_sig_ioackin_P_uOut_TREADY = ap_const_logic_1;
    end
end

always @ (sum_reg_311 or sumsoft_reg_334 or sum_1_reg_357 or ap_sig_cseq_ST_st115_fsm_114 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st84_fsm_83 or ap_sig_cseq_ST_st90_fsm_89) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114)) begin
        grp_fu_506_p0 = sumsoft_reg_334;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89))) begin
        grp_fu_506_p0 = sum_1_reg_357;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        grp_fu_506_p0 = sum_reg_311;
    end else begin
        grp_fu_506_p0 = 'bx;
    end
end

always @ (reg_572 or reg_578 or reg_605 or ap_sig_cseq_ST_st115_fsm_114 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st84_fsm_83 or ap_sig_cseq_ST_st90_fsm_89) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114)) begin
        grp_fu_506_p1 = reg_605;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89))) begin
        grp_fu_506_p1 = reg_572;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83))) begin
        grp_fu_506_p1 = reg_578;
    end else begin
        grp_fu_506_p1 = 'bx;
    end
end

always @ (reg_599 or ap_sig_cseq_ST_st76_fsm_75 or ap_sig_cseq_ST_st114_fsm_113 or tmp_31_reg_1584) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        grp_fu_524_p0 = reg_599;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        grp_fu_524_p0 = tmp_31_reg_1584;
    end else begin
        grp_fu_524_p0 = 'bx;
    end
end

always @ (reg_589 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st95_fsm_94 or tmp_27_fu_889_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        grp_fu_527_p0 = reg_589;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_527_p0 = tmp_27_fu_889_p1;
    end else begin
        grp_fu_527_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or p_uOut_addr_1_reg_1546 or ap_sig_cseq_ST_st5_fsm_4 or p_uOut_addr_3_reg_1615 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st120_fsm_119 or p_uOut_addr_5_reg_1656 or ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st138_fsm_137 or tmp_8_fu_644_p1 or tmp_81_cast_fu_861_p1 or tmp_84_cast_fu_1014_p1 or tmp_85_cast_fu_1052_p1 or tmp_87_cast_fu_1076_p1 or ap_sig_cseq_ST_st115_fsm_114) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        p_uOut_address0 = p_uOut_addr_5_reg_1656;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114)) begin
        p_uOut_address0 = p_uOut_addr_3_reg_1615;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        p_uOut_address0 = p_uOut_addr_1_reg_1546;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_address0 = tmp_8_fu_644_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138)) begin
        p_uOut_address0 = tmp_87_cast_fu_1076_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119)) begin
        p_uOut_address0 = tmp_85_cast_fu_1052_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        p_uOut_address0 = tmp_84_cast_fu_1014_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        p_uOut_address0 = tmp_81_cast_fu_861_p1;
    end else begin
        p_uOut_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st139_fsm_138 or ap_sig_cseq_ST_st143_fsm_142 or tmp_88_cast_fu_1090_p1 or tmp_89_cast_fu_1254_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142)) begin
        p_uOut_address1 = tmp_89_cast_fu_1254_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138)) begin
        p_uOut_address1 = tmp_88_cast_fu_1090_p1;
    end else begin
        p_uOut_address1 = 'bx;
    end
end

always @ (tmp_reg_1442 or tmp_1_reg_1454 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_434 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st120_fsm_119 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2 or ap_sig_ioackin_P_netOut_V_TREADY or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st138_fsm_137 or ap_sig_cseq_ST_st115_fsm_114) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_434) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) | ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114))) begin
        p_uOut_ce0 = ap_const_logic_1;
    end else begin
        p_uOut_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1442 or tmp_1_reg_1454 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2 or ap_sig_ioackin_P_netOut_V_TREADY or ap_sig_cseq_ST_st143_fsm_142) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st143_fsm_142))) begin
        p_uOut_ce1 = ap_const_logic_1;
    end else begin
        p_uOut_ce1 = ap_const_logic_0;
    end
end

always @ (P_netIn_TDATA or reg_605 or ap_sig_cseq_ST_st2_fsm_1 or tmp_43_reg_1665 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st138_fsm_137 or ap_sig_cseq_ST_st115_fsm_114) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        p_uOut_d0 = tmp_43_reg_1665;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114))) begin
        p_uOut_d0 = reg_605;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_d0 = P_netIn_TDATA;
    end else begin
        p_uOut_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_633_p2 or ap_sig_bdd_434 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st138_fsm_137 or ap_sig_cseq_ST_st115_fsm_114) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_633_p2) & ~ap_sig_bdd_434) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114))) begin
        p_uOut_we0 = ap_const_logic_1;
    end else begin
        p_uOut_we0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or tmp_fu_611_p2 or ap_sig_bdd_404 or tmp_reg_1442 or tmp_1_fu_621_p2 or tmp_1_reg_1454 or exitcond1_fu_633_p2 or ap_sig_bdd_434 or tmp_7_fu_649_p2 or tmp_14_fu_756_p2 or exitcond2_fu_827_p2 or tmp_18_fu_911_p2 or exitcond3_fu_980_p2 or exitcond4_fu_1032_p2 or tmp_41_reg_1661 or tmp_44_fu_1062_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond_fu_1105_p2 or tmp_59_fu_1233_p2 or tmp_9_fu_1259_p2 or tmp_9_reg_1740 or tmp_11_fu_1298_p2 or tmp_22_fu_1386_p2 or ap_sig_bdd_755 or exitcond5_fu_1398_p2 or exitcond5_reg_1799 or ap_sig_bdd_769 or ap_sig_ioackin_P_uOut_TREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404)) begin
                ap_NS_fsm = ap_ST_st149_fsm_148;
            end else if (((tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404 & (ap_const_lv1_0 == tmp_1_fu_621_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((tmp_fu_611_p2 == ap_const_lv1_0) & ~ap_sig_bdd_404 & ~(ap_const_lv1_0 == tmp_1_fu_621_p2))) begin
                ap_NS_fsm = ap_ST_st145_fsm_144;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((ap_const_lv1_0 == exitcond1_fu_633_p2) & ~ap_sig_bdd_434)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~ap_sig_bdd_434 & ~(ap_const_lv1_0 == exitcond1_fu_633_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == tmp_7_fu_649_p2)) begin
                ap_NS_fsm = ap_ST_st78_fsm_77;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == tmp_14_fu_756_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_827_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st78_fsm_77 : 
        begin
            if (~(ap_const_lv1_0 == tmp_18_fu_911_p2)) begin
                ap_NS_fsm = ap_ST_st79_fsm_78;
            end else begin
                ap_NS_fsm = ap_ST_st120_fsm_119;
            end
        end
        ap_ST_st79_fsm_78 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_980_p2)) begin
                ap_NS_fsm = ap_ST_st89_fsm_88;
            end else begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st120_fsm_119 : 
        begin
            if (~(ap_const_lv1_0 == exitcond4_fu_1032_p2)) begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end else begin
                ap_NS_fsm = ap_ST_st121_fsm_120;
            end
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st122_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st139_fsm_138 : 
        begin
            if ((~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2)) | (~(ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == exitcond5_reg_1799)) | ((ap_const_lv1_0 == tmp_reg_1442) & ~(ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_9_reg_1740)) | ((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & ~(ap_const_lv1_0 == exitcond_fu_1105_p2))))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == exitcond_fu_1105_p2))) begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end else if (((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & ~((ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_44_fu_1062_p2))) begin
                ap_NS_fsm = ap_ST_st140_fsm_139;
            end else begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end
        end
        ap_ST_st140_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st142_fsm_141;
        end
        ap_ST_st142_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st143_fsm_142 : 
        begin
            if (~(ap_const_lv1_0 == tmp_59_fu_1233_p2)) begin
                ap_NS_fsm = ap_ST_st144_fsm_143;
            end else begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end
        end
        ap_ST_st144_fsm_143 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_NS_fsm = ap_ST_st143_fsm_142;
            end else begin
                ap_NS_fsm = ap_ST_st144_fsm_143;
            end
        end
        ap_ST_st145_fsm_144 : 
        begin
            if (~(ap_const_lv1_0 == tmp_9_fu_1259_p2)) begin
                ap_NS_fsm = ap_ST_st146_fsm_145;
            end else begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end
        end
        ap_ST_st146_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st147_fsm_146;
        end
        ap_ST_st147_fsm_146 : 
        begin
            if ((ap_const_lv1_0 == tmp_11_fu_1298_p2)) begin
                ap_NS_fsm = ap_ST_st145_fsm_144;
            end else begin
                ap_NS_fsm = ap_ST_st148_fsm_147;
            end
        end
        ap_ST_st148_fsm_147 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
                ap_NS_fsm = ap_ST_st148_fsm_147;
            end else if (((ap_const_lv1_0 == tmp_22_fu_1386_p2) & ~ap_sig_bdd_755)) begin
                ap_NS_fsm = ap_ST_st146_fsm_145;
            end else begin
                ap_NS_fsm = ap_ST_st148_fsm_147;
            end
        end
        ap_ST_st149_fsm_148 : 
        begin
            if (((ap_const_lv1_0 == exitcond5_fu_1398_p2) & ~ap_sig_bdd_769)) begin
                ap_NS_fsm = ap_ST_st149_fsm_148;
            end else if ((~ap_sig_bdd_769 & ~(ap_const_lv1_0 == exitcond5_fu_1398_p2))) begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end else begin
                ap_NS_fsm = ap_ST_st149_fsm_148;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign P_netOut_V_TDATA = p_s_reg_391;

assign P_uOut_TDATA = p_uOut_q1;

assign ST_WandB_d0 = P_WandB_TDATA;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1002 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1009 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_167 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_256 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_264 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_281 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_290 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_300 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_307 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_317 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_324 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_333 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_340 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_350 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_367 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_70]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_384 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_391 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_71]);
end


always @ (ap_start or P_config_V_TVALID or tmp_fu_611_p2) begin
    ap_sig_bdd_404 = (((P_config_V_TVALID == ap_const_logic_0) & ~(tmp_fu_611_p2 == ap_const_lv1_0)) | (ap_start == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_428 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (P_netIn_TVALID or exitcond1_fu_633_p2) begin
    ap_sig_bdd_434 = ((P_netIn_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_fu_633_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_444 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_474 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_496 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_516 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_534 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_555 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_574 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_76]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_583 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_77]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_601 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_610 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_654 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_663 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_674 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_689 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_90]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_707 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end


always @ (tmp_4_reg_1749) begin
    ap_sig_bdd_724 = (~(tmp_4_reg_1749 == ap_const_lv2_2) & ~(tmp_4_reg_1749 == ap_const_lv2_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_732 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_92]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_748 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_93]);
end


always @ (P_WandB_TVALID or tmp_22_fu_1386_p2) begin
    ap_sig_bdd_755 = ((P_WandB_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_22_fu_1386_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_765 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_94]);
end


always @ (P_config_V_TVALID or exitcond5_fu_1398_p2) begin
    ap_sig_bdd_769 = ((P_config_V_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond5_fu_1398_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_800 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_821 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_847 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8F]);
end


always @ (tmp_reg_1442 or tmp_1_reg_1454 or tmp_41_reg_1661 or ap_sig_cseq_ST_st139_fsm_138 or tmp_44_fu_1062_p2) begin
    ap_sig_bdd_942 = ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138) & (ap_const_lv1_0 == tmp_reg_1442) & (ap_const_lv1_0 == tmp_1_reg_1454) & (ap_const_lv1_0 == tmp_41_reg_1661) & (ap_const_lv1_0 == tmp_44_fu_1062_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_963 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_72]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_987 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_994 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

assign exitcond1_fu_633_p2 = (i_2_reg_277 == ST_layerSize_V_0_load_reg_1458? 1'b1: 1'b0);

assign exitcond2_fu_827_p2 = (k_1_reg_323 == tmp_19_reg_1534? 1'b1: 1'b0);

assign exitcond3_fu_980_p2 = (j_2_reg_369 == tmp_23_reg_1603? 1'b1: 1'b0);

assign exitcond4_fu_1032_p2 = (i_5_reg_380 == tmp_15_reg_1589? 1'b1: 1'b0);

assign exitcond5_fu_1398_p2 = (i_reg_495 == P_config_V_read_reg_1463? 1'b1: 1'b0);

assign exitcond_fu_1105_p2 = (i_6_reg_416 == ST_numLayer_V_load_reg_1446? 1'b1: 1'b0);

assign feedforward_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign grp_fu_506_ce = ap_const_logic_1;

assign grp_fu_513_ce = ap_const_logic_1;

assign grp_fu_519_ce = ap_const_logic_1;

assign grp_fu_534_ce = ap_const_logic_1;

assign grp_fu_539_ce = ap_const_logic_1;

assign grp_fu_544_ce = ap_const_logic_1;

assign i_10_fu_821_p2 = (i_3_reg_288 + ap_const_lv8_1);

assign i_11_fu_1037_p2 = (i_5_reg_380 + ap_const_lv8_1);

assign i_12_fu_917_p2 = (i_4_reg_346 + ap_const_lv32_1);

assign i_14_fu_1110_p2 = (ap_const_lv8_1 + i_6_reg_416);

assign i_15_fu_1210_p2 = (ap_const_lv8_1 + p_netOut_V_reg_404);

assign i_7_fu_1403_p2 = (i_reg_495 + ap_const_lv8_1);

assign i_8_fu_638_p2 = (i_2_reg_277 + ap_const_lv8_1);

assign i_9_fu_1339_p2 = (i_1_reg_449 + ap_const_lv8_1);

assign j_4_fu_1288_p2 = (j_reg_461 + ap_const_lv32_1);

assign j_5_fu_762_p2 = (j_1_reg_300 + ap_const_lv32_1);

assign j_6_fu_985_p2 = (j_2_reg_369 + ap_const_lv8_1);

assign j_7_fu_1239_p2 = (j_3_reg_438 + ap_const_lv32_1);

assign k_2_fu_1392_p2 = (ap_const_lv32_1 + k_reg_484);

assign k_3_fu_832_p2 = (k_1_reg_323 + ap_const_lv8_1);

assign lhs_V_1_cast_fu_692_p1 = ST_numLayer_V_load_reg_1446;

assign lhs_V_cast_fu_1372_p1 = tmp_25_fu_1359_p6;

assign next_mul_fu_1099_p2 = (ap_const_lv14_23 + phi_mul_reg_427);

assign notlhs1_fu_1173_p2 = (tmp_50_fu_1141_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_1155_p2 = (tmp_48_fu_1124_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs1_fu_1179_p2 = (tmp_79_fu_1151_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_1161_p2 = (tmp_78_fu_1134_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign p_netOut_V_1_fu_1203_p3 = ((tmp_56_reg_1712[0:0] === 1'b1) ? p_netOut_V_reg_404 : p_s_reg_391);

assign p_shl1_cast_fu_1325_p3 = {{tmp_45_fu_1321_p1}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_795_p3 = {{tmp_49_fu_791_p1}, {ap_const_lv5_0}};

assign p_shl3_cast_fu_807_p3 = {{tmp_51_fu_803_p1}, {ap_const_lv2_0}};

assign p_shl4_cast_fu_954_p3 = {{tmp_62_fu_950_p1}, {ap_const_lv5_0}};

assign p_shl5_cast_fu_966_p3 = {{tmp_63_fu_962_p1}, {ap_const_lv2_0}};

assign p_shl_cast_fu_1313_p3 = {{tmp_42_fu_1309_p1}, {ap_const_lv5_0}};

assign p_uOut_load_3_to_int_fu_1120_p1 = reg_565;

assign p_uOut_load_4_to_int_fu_1138_p1 = p_uOut_load_4_reg_1706;

assign r_V_1_fu_695_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_1_cast_fu_692_p1));

assign r_V_2_fu_723_p2 = ($signed(ap_const_lv9_1FE) + $signed(lhs_V_1_cast_fu_692_p1));

assign r_V_fu_1376_p2 = (ap_const_lv9_1 + lhs_V_cast_fu_1372_p1);

assign tmp_10_fu_1294_p1 = ST_layerSize_V_load_1_phi_reg_473;

assign tmp_11_fu_1298_p2 = ($signed(j_reg_461) < $signed(tmp_10_fu_1294_p1)? 1'b1: 1'b0);

assign tmp_13_fu_752_p1 = tmp_12_fu_739_p6;

assign tmp_14_fu_756_p2 = ($signed(j_1_reg_300) < $signed(tmp_13_fu_752_p1)? 1'b1: 1'b0);

assign tmp_16_fu_682_p1 = tmp_16_fu_682_p10;

assign tmp_16_fu_682_p10 = tmp_3_fu_672_p2;

assign tmp_16_fu_682_p2 = (ap_const_lv9_23 * tmp_16_fu_682_p1);

assign tmp_17_fu_907_p1 = tmp_15_fu_894_p6;

assign tmp_18_fu_911_p2 = ($signed(i_4_reg_346) < $signed(tmp_17_fu_907_p1)? 1'b1: 1'b0);

assign tmp_1_fu_621_p2 = (P_mode_V == ap_const_lv8_2? 1'b1: 1'b0);

assign tmp_20_fu_688_p1 = tmp_3_fu_672_p2[1:0];

assign tmp_21_cast_fu_1382_p1 = r_V_fu_1376_p2;

assign tmp_21_fu_705_p1 = r_V_1_fu_695_p2;

assign tmp_21_fu_705_p2 = ($signed({{1'b0}, {ap_const_lv16_23}}) * $signed(tmp_21_fu_705_p1));

assign tmp_22_fu_1386_p2 = ($signed(k_reg_484) < $signed(tmp_21_cast_fu_1382_p1)? 1'b1: 1'b0);

assign tmp_24_cast_fu_936_p1 = $signed(i_4_reg_346);

assign tmp_24_fu_711_p1 = tmp_21_fu_705_p2[8:0];

assign tmp_26_cast_fu_866_p1 = tmp_19_reg_1534;

assign tmp_26_fu_719_p1 = r_V_1_fu_695_p2[1:0];

assign tmp_27_fu_889_p1 = tmp_35_neg_fu_883_p2;

assign tmp_2_fu_1409_p1 = i_reg_495[1:0];

assign tmp_33_cast7_fu_838_p1 = k_1_reg_323;

assign tmp_33_cast_fu_842_p1 = k_1_reg_323;

assign tmp_33_fu_729_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(r_V_2_fu_723_p2));

assign tmp_35_cast_fu_1019_p1 = tmp_23_reg_1603;

assign tmp_35_fu_735_p1 = r_V_2_fu_723_p2[1:0];

assign tmp_35_neg_fu_883_p2 = (tmp_35_to_int_fu_879_p1 ^ ap_const_lv32_80000000);

assign tmp_35_to_int_fu_879_p1 = reg_589;

assign tmp_39_cast6_fu_991_p1 = j_2_reg_369;

assign tmp_39_cast_fu_995_p1 = j_2_reg_369;

assign tmp_39_fu_1304_p2 = (j_reg_461 + tmp_61_cast_reg_1744);

assign tmp_3_fu_672_p2 = ($signed(ap_const_lv8_FF) + $signed(i_3_reg_288));

assign tmp_41_fu_1057_p2 = (P_mode_V_read_reg_1437 == ap_const_lv8_3? 1'b1: 1'b0);

assign tmp_42_cast_fu_1043_p1 = i_5_reg_380;

assign tmp_42_fu_1309_p1 = tmp_39_fu_1304_p2[8:0];

assign tmp_44_fu_1062_p2 = (p_netOut_V_reg_404 < tmp_15_reg_1589? 1'b1: 1'b0);

assign tmp_45_fu_1321_p1 = tmp_39_fu_1304_p2[11:0];

assign tmp_46_cast_fu_1067_p1 = p_netOut_V_reg_404;

assign tmp_46_fu_1333_p2 = (p_shl_cast_fu_1313_p3 + p_shl1_cast_fu_1325_p3);

assign tmp_47_cast_fu_1081_p1 = p_s_reg_391;

assign tmp_47_fu_781_p2 = (j_1_reg_300 + tmp_62_cast_reg_1479);

assign tmp_48_fu_1124_p4 = {{p_uOut_load_3_to_int_fu_1120_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_49_fu_791_p1 = tmp_47_fu_781_p2[8:0];

assign tmp_4_fu_1278_p1 = i_1_reg_449[1:0];

assign tmp_50_fu_1141_p4 = {{p_uOut_load_4_to_int_fu_1138_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_51_fu_803_p1 = tmp_47_fu_781_p2[11:0];

assign tmp_52_fu_1167_p2 = (notrhs_fu_1161_p2 | notlhs_fu_1155_p2);

assign tmp_53_fu_1185_p2 = (notrhs1_fu_1179_p2 | notlhs1_fu_1173_p2);

assign tmp_54_fu_1191_p2 = (tmp_52_fu_1167_p2 & tmp_53_fu_1185_p2);

assign tmp_55_fu_530_opcode = ap_const_lv5_2;

assign tmp_56_fu_1197_p2 = (tmp_54_fu_1191_p2 & tmp_55_fu_530_p2);

assign tmp_58_fu_1229_p1 = tmp_57_fu_1216_p6;

assign tmp_59_fu_1233_p2 = ($signed(j_3_reg_438) < $signed(tmp_58_fu_1229_p1)? 1'b1: 1'b0);

assign tmp_5_fu_658_p1 = tmp_5_fu_658_p10;

assign tmp_5_fu_658_p10 = i_3_reg_288;

assign tmp_5_fu_658_p2 = (ap_const_lv15_23 * tmp_5_fu_658_p1);

assign tmp_60_fu_815_p2 = (p_shl2_cast_fu_795_p3 + p_shl3_cast_fu_807_p3);

assign tmp_61_cast_fu_1274_p1 = tmp_s_fu_1268_p2;

assign tmp_61_fu_940_p2 = ($signed(tmp_24_cast_fu_936_p1) + $signed(tmp_64_cast_reg_1506));

assign tmp_62_cast_fu_664_p1 = tmp_5_fu_658_p2;

assign tmp_62_fu_950_p1 = tmp_61_fu_940_p2[8:0];

assign tmp_63_fu_962_p1 = tmp_61_fu_940_p2[11:0];

assign tmp_64_cast_fu_715_p1 = $signed(tmp_21_fu_705_p2);

assign tmp_64_fu_974_p2 = (p_shl4_cast_fu_954_p3 + p_shl5_cast_fu_966_p3);

assign tmp_65_fu_1345_p1 = k_reg_484[13:0];

assign tmp_66_fu_1349_p2 = (tmp_46_reg_1781 + tmp_65_fu_1345_p1);

assign tmp_67_fu_1047_p2 = (tmp_24_reg_1499 + tmp_42_cast_fu_1043_p1);

assign tmp_68_fu_869_p2 = (tmp_60_reg_1540 + tmp_26_cast_fu_866_p1);

assign tmp_69_fu_846_p2 = (tmp_60_reg_1540 + tmp_33_cast_fu_842_p1);

assign tmp_6_fu_668_p1 = i_3_reg_288[1:0];

assign tmp_70_cast_fu_786_p1 = $signed(tmp_47_fu_781_p2);

assign tmp_70_fu_856_p2 = (tmp_16_reg_1489 + tmp_33_cast7_fu_838_p1);

assign tmp_71_fu_1022_p2 = (tmp_64_reg_1609 + tmp_35_cast_fu_1019_p1);

assign tmp_72_fu_999_p2 = (tmp_64_reg_1609 + tmp_39_cast_fu_995_p1);

assign tmp_73_fu_1009_p2 = (tmp_33_reg_1516 + tmp_39_cast6_fu_991_p1);

assign tmp_74_cast_fu_945_p1 = $signed(tmp_61_fu_940_p2);

assign tmp_74_fu_1095_p1 = phi_mul_reg_427[8:0];

assign tmp_75_fu_1116_p1 = i_6_reg_416[1:0];

assign tmp_76_fu_1071_p2 = (tmp_24_reg_1499 + tmp_46_cast_fu_1067_p1);

assign tmp_77_fu_1085_p2 = (tmp_24_reg_1499 + tmp_47_cast_fu_1081_p1);

assign tmp_78_cast_fu_1354_p1 = tmp_66_fu_1349_p2;

assign tmp_78_fu_1134_p1 = p_uOut_load_3_to_int_fu_1120_p1[22:0];

assign tmp_79_cast_fu_874_p1 = tmp_68_fu_869_p2;

assign tmp_79_fu_1151_p1 = p_uOut_load_4_to_int_fu_1138_p1[22:0];

assign tmp_7_fu_649_p2 = (i_3_reg_288 < ST_numLayer_V_load_reg_1446? 1'b1: 1'b0);

assign tmp_7_t_fu_1282_p2 = ($signed(ap_const_lv2_3) + $signed(tmp_4_fu_1278_p1));

assign tmp_80_cast_fu_851_p1 = tmp_69_fu_846_p2;

assign tmp_80_fu_1245_p1 = j_3_reg_438[8:0];

assign tmp_81_cast_fu_861_p1 = $signed(tmp_70_fu_856_p2);

assign tmp_81_fu_1249_p2 = (tmp_74_reg_1683 + tmp_80_fu_1245_p1);

assign tmp_82_cast_fu_1027_p1 = tmp_71_fu_1022_p2;

assign tmp_83_cast_fu_1004_p1 = tmp_72_fu_999_p2;

assign tmp_84_cast_fu_1014_p1 = $signed(tmp_73_fu_1009_p2);

assign tmp_85_cast_fu_1052_p1 = $signed(tmp_67_fu_1047_p2);

assign tmp_87_cast_fu_1076_p1 = $signed(tmp_76_fu_1071_p2);

assign tmp_88_cast_fu_1090_p1 = $signed(tmp_77_fu_1085_p2);

assign tmp_89_cast_fu_1254_p1 = tmp_81_fu_1249_p2;

assign tmp_8_fu_644_p1 = i_2_reg_277;

assign tmp_9_fu_1259_p2 = (i_1_reg_449 < ST_numLayer_V_load_reg_1446? 1'b1: 1'b0);

assign tmp_fu_611_p2 = (P_mode_V == ap_const_lv8_1? 1'b1: 1'b0);

assign tmp_s_fu_1268_p1 = tmp_s_fu_1268_p10;

assign tmp_s_fu_1268_p10 = i_1_reg_449;

assign tmp_s_fu_1268_p2 = (ap_const_lv15_23 * tmp_s_fu_1268_p1);
always @ (posedge ap_clk) begin
    tmp_62_cast_reg_1479[31:15] <= 17'b00000000000000000;
    tmp_60_reg_1540[1:0] <= 2'b00;
    tmp_64_reg_1609[1:0] <= 2'b00;
    tmp_61_cast_reg_1744[31:15] <= 17'b00000000000000000;
    tmp_46_reg_1781[1:0] <= 2'b00;
end



endmodule //feedforward

