// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feedforward,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.395400,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=36,HLS_SYN_DSP=45,HLS_SYN_FF=7111,HLS_SYN_LUT=10472}" *)

module feedforward (
        ap_clk,
        ap_rst_n,
        P_config_V_TDATA,
        P_config_V_TVALID,
        P_config_V_TREADY,
        P_WandB_TDATA,
        P_WandB_TVALID,
        P_WandB_TREADY,
        P_uOut_TDATA,
        P_uOut_TVALID,
        P_uOut_TREADY,
        P_netIn_TDATA,
        P_netIn_TVALID,
        P_netIn_TREADY,
        P_netOut_V_TDATA,
        P_netOut_V_TVALID,
        P_netOut_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 165'b1;
parameter    ap_ST_st2_fsm_1 = 165'b10;
parameter    ap_ST_st3_fsm_2 = 165'b100;
parameter    ap_ST_st4_fsm_3 = 165'b1000;
parameter    ap_ST_st5_fsm_4 = 165'b10000;
parameter    ap_ST_st6_fsm_5 = 165'b100000;
parameter    ap_ST_st7_fsm_6 = 165'b1000000;
parameter    ap_ST_st8_fsm_7 = 165'b10000000;
parameter    ap_ST_st9_fsm_8 = 165'b100000000;
parameter    ap_ST_st10_fsm_9 = 165'b1000000000;
parameter    ap_ST_st11_fsm_10 = 165'b10000000000;
parameter    ap_ST_st12_fsm_11 = 165'b100000000000;
parameter    ap_ST_st13_fsm_12 = 165'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 165'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 165'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 165'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 165'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 165'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 165'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 165'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 165'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 165'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 165'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 165'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 165'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 165'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 165'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 165'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 165'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 165'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 165'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 165'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 165'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 165'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 165'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 165'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 165'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 165'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 165'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 165'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 165'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 165'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 165'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 165'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 165'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 165'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 165'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 165'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 165'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 165'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 165'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 165'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 165'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 165'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 165'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 165'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 165'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 165'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 165'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 165'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 165'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 165'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 165'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 165'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 165'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 165'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 165'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 165'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 165'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_146 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_147 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_148 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_149 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_150 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_151 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_152 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_153 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_154 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_155 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st157_fsm_156 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st158_fsm_157 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st159_fsm_158 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st160_fsm_159 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st161_fsm_160 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st162_fsm_161 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st163_fsm_162 = 165'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st164_fsm_163 = 165'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st165_fsm_164 = 165'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_9C = 32'b10011100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_99 = 32'b10011001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_9B = 32'b10011011;
parameter    ap_const_lv32_9D = 32'b10011101;
parameter    ap_const_lv32_9E = 32'b10011110;
parameter    ap_const_lv32_9F = 32'b10011111;
parameter    ap_const_lv32_A1 = 32'b10100001;
parameter    ap_const_lv32_A2 = 32'b10100010;
parameter    ap_const_lv32_A3 = 32'b10100011;
parameter    ap_const_lv32_A4 = 32'b10100100;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9A = 32'b10011010;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_A0 = 32'b10100000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv15_23 = 15'b100011;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_23 = 9'b100011;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv16_23 = 16'b100011;
parameter    ap_const_lv9_1FE = 9'b111111110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_3 = 8'b11;
parameter    ap_const_lv14_23 = 14'b100011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv14_5 = 14'b101;
parameter    ap_const_lv14_2 = 14'b10;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] P_config_V_TDATA;
input   P_config_V_TVALID;
output   P_config_V_TREADY;
input  [63:0] P_WandB_TDATA;
input   P_WandB_TVALID;
output   P_WandB_TREADY;
output  [63:0] P_uOut_TDATA;
output   P_uOut_TVALID;
input   P_uOut_TREADY;
input  [63:0] P_netIn_TDATA;
input   P_netIn_TVALID;
output   P_netIn_TREADY;
output  [7:0] P_netOut_V_TDATA;
output   P_netOut_V_TVALID;
input   P_netOut_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg P_config_V_TREADY;
reg P_WandB_TREADY;
reg P_uOut_TVALID;
reg P_netIn_TREADY;
reg P_netOut_V_TVALID;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [164:0] ap_CS_fsm = 165'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_183;
reg    ap_ready;
wire   [7:0] P_mode_V;
reg   [7:0] ST_numLayer_V = 8'b00000000;
reg   [7:0] ST_layerSize_V_0 = 8'b00000000;
reg   [7:0] ST_layerSize_V_3 = 8'b00000000;
reg   [7:0] ST_layerSize_V_1 = 8'b00000000;
reg   [7:0] ST_layerSize_V_2 = 8'b00000000;
reg   [12:0] ST_WandB_address0;
reg    ST_WandB_ce0;
reg    ST_WandB_we0;
wire   [63:0] ST_WandB_d0;
wire   [63:0] ST_WandB_q0;
wire    feedforward_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [63:0] p_uOut_q0;
reg   [63:0] reg_547;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_265;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_272;
reg    ap_sig_cseq_ST_st123_fsm_122;
reg    ap_sig_bdd_280;
reg    ap_sig_cseq_ST_st157_fsm_156;
reg    ap_sig_bdd_288;
reg   [63:0] reg_554;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_297;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_bdd_306;
wire   [63:0] grp_fu_512_p2;
reg   [63:0] reg_560;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_316;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_323;
wire   [63:0] grp_fu_504_p2;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_333;
reg    ap_sig_cseq_ST_st92_fsm_91;
reg    ap_sig_bdd_340;
reg   [63:0] reg_571;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_349;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_356;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_bdd_364;
wire   [63:0] grp_fu_526_p2;
reg   [63:0] reg_577;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_374;
reg    ap_sig_cseq_ST_st116_fsm_115;
reg    ap_sig_bdd_381;
wire   [63:0] grp_fu_516_p2;
reg   [63:0] reg_584;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_391;
reg    ap_sig_cseq_ST_st154_fsm_153;
reg    ap_sig_bdd_398;
reg   [7:0] P_mode_V_read_reg_1418;
wire   [0:0] tmp_fu_589_p2;
reg    ap_sig_bdd_411;
reg   [0:0] tmp_reg_1423;
reg   [7:0] ST_numLayer_V_load_reg_1427;
wire   [0:0] tmp_1_fu_599_p2;
reg   [0:0] tmp_1_reg_1435;
reg   [7:0] ST_layerSize_V_0_load_reg_1439;
reg   [7:0] P_config_V_read_reg_1444;
wire   [7:0] i_8_fu_616_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_435;
wire   [0:0] exitcond1_fu_611_p2;
reg    ap_sig_bdd_441;
wire   [31:0] tmp_59_cast_fu_642_p1;
reg   [31:0] tmp_59_cast_reg_1460;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_451;
wire   [0:0] tmp_7_fu_627_p2;
wire   [1:0] tmp_24_fu_646_p1;
reg   [1:0] tmp_24_reg_1465;
wire   [8:0] tmp_29_fu_660_p2;
reg   [8:0] tmp_29_reg_1470;
wire   [1:0] tmp_31_fu_666_p1;
reg   [1:0] tmp_31_reg_1475;
wire   [8:0] tmp_36_fu_689_p1;
reg   [8:0] tmp_36_reg_1480;
wire  signed [32:0] tmp_61_cast_fu_693_p1;
reg  signed [32:0] tmp_61_cast_reg_1487;
wire   [1:0] tmp_39_fu_697_p1;
reg   [1:0] tmp_39_reg_1492;
wire   [8:0] tmp_41_fu_707_p2;
reg   [8:0] tmp_41_reg_1497;
wire   [1:0] tmp_42_fu_713_p1;
reg   [1:0] tmp_42_reg_1502;
wire   [31:0] j_5_fu_740_p2;
reg   [31:0] j_5_reg_1510;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_481;
wire   [7:0] tmp_20_fu_746_p6;
reg   [7:0] tmp_20_reg_1515;
wire   [0:0] tmp_16_fu_734_p2;
wire   [13:0] tmp_54_fu_793_p2;
reg   [13:0] tmp_54_reg_1521;
reg   [7:0] p_uOut_addr_1_reg_1527;
wire   [7:0] i_10_fu_799_p2;
wire   [7:0] k_3_fu_810_p2;
reg   [7:0] k_3_reg_1540;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_503;
wire   [0:0] exitcond3_fu_805_p2;
wire   [63:0] tmp_25_fu_867_p1;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_523;
wire   [7:0] tmp_17_fu_872_p6;
reg   [7:0] tmp_17_reg_1565;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_532;
wire   [31:0] i_12_fu_895_p2;
reg   [31:0] i_12_reg_1574;
wire   [7:0] tmp_22_fu_901_p6;
reg   [7:0] tmp_22_reg_1579;
wire   [0:0] tmp_19_fu_889_p2;
wire   [13:0] tmp_58_fu_952_p2;
reg   [13:0] tmp_58_reg_1585;
reg   [7:0] p_uOut_addr_3_reg_1591;
wire   [7:0] j_6_fu_963_p2;
reg   [7:0] j_6_reg_1599;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_553;
wire   [0:0] exitcond4_fu_958_p2;
reg    ap_sig_cseq_ST_st121_fsm_120;
reg    ap_sig_bdd_572;
wire   [7:0] i_11_fu_1015_p2;
reg   [7:0] i_11_reg_1627;
reg    ap_sig_cseq_ST_st122_fsm_121;
reg    ap_sig_bdd_581;
reg   [7:0] p_uOut_addr_5_reg_1632;
wire   [0:0] exitcond5_fu_1010_p2;
wire   [0:0] tmp_35_fu_1035_p2;
reg   [0:0] tmp_35_reg_1637;
reg    ap_sig_cseq_ST_st156_fsm_155;
reg    ap_sig_bdd_599;
wire   [0:0] tmp_38_fu_1040_p2;
reg    ap_sig_ioackin_P_netOut_V_TREADY;
wire   [8:0] tmp_66_fu_1073_p1;
reg   [8:0] tmp_66_reg_1654;
wire   [13:0] next_mul_fu_1077_p2;
reg   [13:0] next_mul_reg_1659;
wire   [7:0] i_14_fu_1088_p2;
reg   [7:0] i_14_reg_1667;
wire   [7:0] tmp_40_fu_1098_p6;
reg   [7:0] tmp_40_reg_1672;
wire   [0:0] exitcond6_fu_1083_p2;
wire   [63:0] p_uOut_q1;
reg   [63:0] p_uOut_load_4_reg_1677;
wire   [0:0] tmp_51_fu_1189_p2;
reg   [0:0] tmp_51_reg_1683;
reg    ap_sig_cseq_ST_st158_fsm_157;
reg    ap_sig_bdd_643;
wire   [7:0] p_netOut_V_1_fu_1195_p3;
reg    ap_sig_cseq_ST_st159_fsm_158;
reg    ap_sig_bdd_652;
wire   [7:0] i_15_fu_1202_p2;
wire   [7:0] j_7_fu_1213_p2;
reg   [7:0] j_7_reg_1701;
reg    ap_sig_cseq_ST_st160_fsm_159;
reg    ap_sig_bdd_663;
wire   [0:0] exitcond_fu_1208_p2;
wire   [0:0] tmp_8_fu_1233_p2;
reg   [0:0] tmp_8_reg_1711;
reg    ap_sig_cseq_ST_st162_fsm_161;
reg    ap_sig_bdd_677;
wire   [13:0] tmp_s_fu_1242_p2;
reg   [13:0] tmp_s_reg_1715;
wire   [7:0] ST_layerSize_V_load_1_phi_fu_1272_p3;
reg   [7:0] ST_layerSize_V_load_1_phi_reg_1720;
wire   [8:0] tmp_10_fu_1304_p2;
reg   [8:0] tmp_10_reg_1725;
wire   [7:0] j_4_fu_1315_p2;
reg   [7:0] j_4_reg_1733;
reg    ap_sig_cseq_ST_st163_fsm_162;
reg    ap_sig_bdd_695;
wire   [13:0] tmp_21_fu_1342_p2;
reg   [13:0] tmp_21_reg_1738;
wire   [0:0] exitcond2_fu_1310_p2;
wire   [7:0] i_9_fu_1348_p2;
wire   [8:0] k_2_fu_1373_p2;
reg    ap_sig_cseq_ST_st164_fsm_163;
reg    ap_sig_bdd_713;
wire   [0:0] exitcond8_fu_1368_p2;
reg    ap_sig_bdd_719;
wire   [0:0] exitcond7_fu_1379_p2;
reg   [0:0] exitcond7_reg_1756;
reg    ap_sig_cseq_ST_st165_fsm_164;
reg    ap_sig_bdd_729;
reg    ap_sig_bdd_733;
wire   [7:0] i_7_fu_1384_p2;
reg   [7:0] p_uOut_address0;
reg    p_uOut_ce0;
reg    p_uOut_we0;
reg   [63:0] p_uOut_d0;
reg   [7:0] p_uOut_address1;
reg    p_uOut_ce1;
reg   [7:0] i_2_reg_287;
reg   [7:0] i_3_reg_298;
reg   [31:0] j_1_reg_310;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_764;
reg   [63:0] sum_reg_321;
reg   [7:0] k_1_reg_333;
reg   [63:0] sumsoft_reg_344;
reg   [31:0] i_4_reg_356;
reg   [63:0] sum_1_reg_367;
reg   [7:0] j_2_reg_379;
reg   [7:0] i_5_reg_390;
reg    ap_sig_cseq_ST_st155_fsm_154;
reg    ap_sig_bdd_786;
reg   [7:0] p_s_reg_401;
reg   [7:0] p_netOut_V_reg_414;
reg   [7:0] i_6_reg_426;
reg   [13:0] phi_mul_reg_437;
reg   [7:0] j_3_reg_448;
reg    ap_sig_cseq_ST_st161_fsm_160;
reg    ap_sig_bdd_813;
reg    ap_sig_ioackin_P_uOut_TREADY;
reg   [7:0] i_1_reg_459;
reg   [7:0] j_reg_471;
reg   [8:0] k_reg_482;
reg   [7:0] i_reg_493;
wire   [63:0] tmp_6_fu_622_p1;
wire  signed [63:0] tmp_64_cast_fu_764_p1;
wire   [63:0] tmp_73_cast_fu_829_p1;
wire  signed [63:0] tmp_74_cast_fu_839_p1;
wire   [63:0] tmp_72_cast_fu_852_p1;
wire  signed [63:0] tmp_68_cast_fu_923_p1;
wire   [63:0] tmp_76_cast_fu_982_p1;
wire  signed [63:0] tmp_77_cast_fu_992_p1;
wire   [63:0] tmp_75_cast_fu_1005_p1;
wire  signed [63:0] tmp_78_cast_fu_1030_p1;
wire  signed [63:0] tmp_80_cast_fu_1054_p1;
wire  signed [63:0] tmp_81_cast_fu_1068_p1;
wire   [63:0] tmp_82_cast_fu_1228_p1;
wire   [63:0] tmp_63_cast_fu_1363_p1;
wire   [1:0] tmp_3_fu_1390_p1;
reg    ap_reg_ioackin_P_netOut_V_TREADY = 1'b0;
reg    ap_reg_ioackin_P_uOut_TREADY = 1'b0;
reg    ap_sig_cseq_ST_st117_fsm_116;
reg    ap_sig_bdd_927;
reg   [63:0] grp_fu_504_p0;
reg   [63:0] grp_fu_504_p1;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_952;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_959;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_967;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_bdd_974;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_981;
reg   [63:0] grp_fu_516_p0;
reg   [63:0] grp_fu_516_p1;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_1010;
reg    ap_sig_cseq_ST_st124_fsm_123;
reg    ap_sig_bdd_1017;
reg   [63:0] grp_fu_526_p1;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_1027;
wire   [7:0] tmp_23_fu_636_p1;
wire   [14:0] tmp_23_fu_636_p2;
wire   [7:0] tmp_4_fu_650_p2;
wire   [7:0] tmp_29_fu_660_p1;
wire   [8:0] lhs_V_1_cast_fu_670_p1;
wire   [8:0] r_V_fu_673_p2;
wire  signed [8:0] tmp_33_fu_683_p1;
wire   [15:0] tmp_33_fu_683_p2;
wire  signed [8:0] r_V_1_fu_701_p2;
wire   [7:0] tmp_14_fu_717_p6;
wire   [31:0] tmp_15_fu_730_p1;
wire   [31:0] tmp_46_fu_759_p2;
wire   [8:0] tmp_52_fu_769_p1;
wire   [11:0] tmp_53_fu_781_p1;
wire   [13:0] p_shl1_cast_fu_773_p3;
wire   [13:0] p_shl2_cast_fu_785_p3;
wire   [13:0] tmp_29_cast_fu_820_p1;
wire   [13:0] tmp_61_fu_824_p2;
wire   [8:0] tmp_29_cast1_fu_816_p1;
wire   [8:0] tmp_62_fu_834_p2;
wire   [13:0] tmp_24_cast_fu_844_p1;
wire   [13:0] tmp_60_fu_847_p2;
wire   [63:0] tmp_38_to_int_fu_857_p1;
wire   [63:0] tmp_38_neg_fu_861_p2;
wire   [31:0] tmp_18_fu_885_p1;
wire  signed [32:0] tmp_23_cast_fu_914_p1;
wire   [32:0] tmp_55_fu_918_p2;
wire   [8:0] tmp_56_fu_928_p1;
wire   [11:0] tmp_57_fu_940_p1;
wire   [13:0] p_shl3_cast_fu_932_p3;
wire   [13:0] p_shl4_cast_fu_944_p3;
wire   [13:0] tmp_33_cast_fu_973_p1;
wire   [13:0] tmp_64_fu_977_p2;
wire   [8:0] tmp_33_cast1_fu_969_p1;
wire   [8:0] tmp_65_fu_987_p2;
wire   [13:0] tmp_31_cast_fu_997_p1;
wire   [13:0] tmp_63_fu_1000_p2;
wire   [8:0] tmp_36_cast_fu_1021_p1;
wire   [8:0] tmp_59_fu_1025_p2;
wire   [8:0] tmp_41_cast_fu_1045_p1;
wire   [8:0] tmp_68_fu_1049_p2;
wire   [8:0] tmp_42_cast_fu_1059_p1;
wire   [8:0] tmp_69_fu_1063_p2;
wire   [1:0] tmp_40_fu_1098_p5;
wire   [63:0] p_uOut_load_3_to_int_fu_1112_p1;
wire   [63:0] p_uOut_load_4_to_int_fu_1130_p1;
wire   [10:0] tmp_43_fu_1116_p4;
wire   [51:0] tmp_70_fu_1126_p1;
wire   [0:0] notrhs_fu_1153_p2;
wire   [0:0] notlhs_fu_1147_p2;
wire   [10:0] tmp_45_fu_1133_p4;
wire   [51:0] tmp_71_fu_1143_p1;
wire   [0:0] notrhs1_fu_1171_p2;
wire   [0:0] notlhs1_fu_1165_p2;
wire   [0:0] tmp_47_fu_1159_p2;
wire   [0:0] tmp_48_fu_1177_p2;
wire   [0:0] tmp_49_fu_1183_p2;
wire   [0:0] tmp_50_fu_522_p2;
wire   [8:0] tmp_52_cast_fu_1219_p1;
wire   [8:0] tmp_72_fu_1223_p2;
wire   [7:0] tmp_s_fu_1242_p1;
wire   [1:0] tmp_5_fu_1248_p1;
wire   [0:0] sel_tmp_fu_1252_p2;
wire   [0:0] sel_tmp2_fu_1266_p2;
wire   [7:0] sel_tmp1_fu_1258_p3;
wire   [1:0] tmp_2_fu_1286_p5;
wire   [7:0] tmp_2_fu_1286_p6;
wire   [8:0] tmp_9_fu_1300_p1;
wire   [13:0] tmp_cast_fu_1321_p1;
wire   [13:0] tmp_11_fu_1325_p2;
wire   [13:0] tmp_12_fu_1330_p2;
wire   [13:0] tmp_13_fu_1336_p2;
wire   [13:0] tmp_12_cast_fu_1354_p1;
wire   [13:0] tmp_44_fu_1358_p2;
wire    grp_fu_504_ce;
wire    grp_fu_512_ce;
wire    grp_fu_516_ce;
wire   [4:0] tmp_50_fu_522_opcode;
wire    grp_fu_526_ce;
reg   [164:0] ap_NS_fsm;
wire   [14:0] tmp_23_fu_636_p10;
wire   [8:0] tmp_29_fu_660_p10;
wire   [13:0] tmp_s_fu_1242_p10;
reg    ap_sig_bdd_906;


feedforward_ST_WandB #(
    .DataWidth( 64 ),
    .AddressRange( 5040 ),
    .AddressWidth( 13 ))
ST_WandB_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( ST_WandB_address0 ),
    .ce0( ST_WandB_ce0 ),
    .we0( ST_WandB_we0 ),
    .d0( ST_WandB_d0 ),
    .q0( ST_WandB_q0 )
);

feedforward_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
feedforward_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( feedforward_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .P_mode_V( P_mode_V )
);

feedforward_p_uOut #(
    .DataWidth( 64 ),
    .AddressRange( 140 ),
    .AddressWidth( 8 ))
p_uOut_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( p_uOut_address0 ),
    .ce0( p_uOut_ce0 ),
    .we0( p_uOut_we0 ),
    .d0( p_uOut_d0 ),
    .q0( p_uOut_q0 ),
    .address1( p_uOut_address1 ),
    .ce1( p_uOut_ce1 ),
    .q1( p_uOut_q1 )
);

feedforward_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dadd_64ns_64ns_64_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_504_p0 ),
    .din1( grp_fu_504_p1 ),
    .ce( grp_fu_504_ce ),
    .dout( grp_fu_504_p2 )
);

feedforward_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dmul_64ns_64ns_64_6_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( reg_547 ),
    .din1( reg_554 ),
    .ce( grp_fu_512_ce ),
    .dout( grp_fu_512_p2 )
);

feedforward_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_ddiv_64ns_64ns_64_31_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_516_p0 ),
    .din1( grp_fu_516_p1 ),
    .ce( grp_fu_516_ce ),
    .dout( grp_fu_516_p2 )
);

feedforward_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
feedforward_dcmp_64ns_64ns_1_1_U3(
    .din0( reg_547 ),
    .din1( p_uOut_load_4_reg_1677 ),
    .opcode( tmp_50_fu_522_opcode ),
    .dout( tmp_50_fu_522_p2 )
);

feedforward_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
feedforward_dexp_64ns_64ns_64_18_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_0 ),
    .din1( grp_fu_526_p1 ),
    .ce( grp_fu_526_ce ),
    .dout( grp_fu_526_p2 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U5(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_24_reg_1465 ),
    .dout( tmp_14_fu_717_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U6(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_31_reg_1475 ),
    .dout( tmp_20_fu_746_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U7(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_39_reg_1492 ),
    .dout( tmp_17_fu_872_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U8(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_42_reg_1502 ),
    .dout( tmp_22_fu_901_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U9(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_40_fu_1098_p5 ),
    .dout( tmp_40_fu_1098_p6 )
);

feedforward_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
feedforward_mux_4to1_sel2_8_1_U10(
    .din1( ST_layerSize_V_0 ),
    .din2( ST_layerSize_V_1 ),
    .din3( ST_layerSize_V_2 ),
    .din4( ST_layerSize_V_3 ),
    .din5( tmp_2_fu_1286_p5 ),
    .dout( tmp_2_fu_1286_p6 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_netOut_V_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_906) begin
            if (~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) begin
                ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_netOut_V_TREADY)) begin
                ap_reg_ioackin_P_netOut_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_P_uOut_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st161_fsm_160)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == P_uOut_TREADY)) begin
                ap_reg_ioackin_P_uOut_TREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411 & ~(ap_const_lv1_0 == tmp_1_fu_599_p2))) begin
        i_1_reg_459 <= ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_162) & ~(ap_const_lv1_0 == exitcond2_fu_1310_p2))) begin
        i_1_reg_459 <= i_9_fu_1348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411 & (ap_const_lv1_0 == tmp_1_fu_599_p2))) begin
        i_2_reg_287 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_611_p2) & ~ap_sig_bdd_441)) begin
        i_2_reg_287 <= i_8_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_441 & ~(ap_const_lv1_0 == exitcond1_fu_611_p2))) begin
        i_3_reg_298 <= ap_const_lv8_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_16_fu_734_p2))) begin
        i_3_reg_298 <= i_10_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_627_p2))) begin
        i_4_reg_356 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        i_4_reg_356 <= i_12_reg_1574;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & (ap_const_lv1_0 == tmp_19_fu_889_p2))) begin
        i_5_reg_390 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154)) begin
        i_5_reg_390 <= i_11_reg_1627;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == exitcond_fu_1208_p2))) begin
        i_6_reg_426 <= i_14_reg_1667;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond5_fu_1010_p2) & ~(ap_const_lv1_0 == tmp_35_fu_1035_p2))) begin
        i_6_reg_426 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733)) begin
        i_reg_493 <= i_7_fu_1384_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411)) begin
        i_reg_493 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_7_fu_627_p2))) begin
        j_1_reg_310 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        j_1_reg_310 <= j_5_reg_1510;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & ~(ap_const_lv1_0 == tmp_19_fu_889_p2))) begin
        j_2_reg_379 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) begin
        j_2_reg_379 <= j_6_reg_1599;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & (ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == exitcond6_fu_1083_p2))) begin
        j_3_reg_448 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st161_fsm_160) & ~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY))) begin
        j_3_reg_448 <= j_7_reg_1701;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163) & ~ap_sig_bdd_719 & ~(ap_const_lv1_0 == exitcond8_fu_1368_p2))) begin
        j_reg_471 <= j_4_reg_1733;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st162_fsm_161) & ~(ap_const_lv1_0 == tmp_8_fu_1233_p2))) begin
        j_reg_471 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_16_fu_734_p2))) begin
        k_1_reg_333 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        k_1_reg_333 <= k_3_reg_1540;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_162) & (ap_const_lv1_0 == exitcond2_fu_1310_p2))) begin
        k_reg_482 <= ap_const_lv9_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163) & (ap_const_lv1_0 == exitcond8_fu_1368_p2) & ~ap_sig_bdd_719)) begin
        k_reg_482 <= k_2_fu_1373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond5_fu_1010_p2) & (ap_const_lv1_0 == tmp_35_fu_1035_p2))) begin
        p_netOut_V_reg_414 <= ap_const_lv8_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_158)) begin
        p_netOut_V_reg_414 <= i_15_fu_1202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond5_fu_1010_p2) & (ap_const_lv1_0 == tmp_35_fu_1035_p2))) begin
        p_s_reg_401 <= ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_158)) begin
        p_s_reg_401 <= p_netOut_V_1_fu_1195_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == exitcond_fu_1208_p2))) begin
        phi_mul_reg_437 <= next_mul_reg_1659;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond5_fu_1010_p2) & ~(ap_const_lv1_0 == tmp_35_fu_1035_p2))) begin
        phi_mul_reg_437 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & ~(ap_const_lv1_0 == tmp_19_fu_889_p2))) begin
        sum_1_reg_367 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) begin
        sum_1_reg_367 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_16_fu_734_p2))) begin
        sum_reg_321 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        sum_reg_321 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_627_p2))) begin
        sumsoft_reg_344 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        sumsoft_reg_344 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411)) begin
        P_config_V_read_reg_1444 <= P_config_V_TDATA;
        ST_numLayer_V <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_411)) begin
        P_mode_V_read_reg_1418 <= P_mode_V;
        ST_numLayer_V_load_reg_1427 <= ST_numLayer_V;
        tmp_reg_1423 <= tmp_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733 & (tmp_3_fu_1390_p1 == ap_const_lv2_0))) begin
        ST_layerSize_V_0 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411 & (ap_const_lv1_0 == tmp_1_fu_599_p2))) begin
        ST_layerSize_V_0_load_reg_1439 <= ST_layerSize_V_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733 & (tmp_3_fu_1390_p1 == ap_const_lv2_1))) begin
        ST_layerSize_V_1 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733 & (tmp_3_fu_1390_p1 == ap_const_lv2_2))) begin
        ST_layerSize_V_2 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733 & ~(tmp_3_fu_1390_p1 == ap_const_lv2_2) & ~(tmp_3_fu_1390_p1 == ap_const_lv2_1) & ~(tmp_3_fu_1390_p1 == ap_const_lv2_0))) begin
        ST_layerSize_V_3 <= P_config_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st162_fsm_161) & ~(ap_const_lv1_0 == tmp_8_fu_1233_p2))) begin
        ST_layerSize_V_load_1_phi_reg_1720 <= ST_layerSize_V_load_1_phi_fu_1272_p3;
        tmp_10_reg_1725 <= tmp_10_fu_1304_p2;
        tmp_s_reg_1715 <= tmp_s_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & ~ap_sig_bdd_733)) begin
        exitcond7_reg_1756 <= exitcond7_fu_1379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        i_11_reg_1627 <= i_11_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        i_12_reg_1574 <= i_12_fu_895_p2;
        tmp_17_reg_1565 <= tmp_17_fu_872_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & (ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_35_reg_1637))) begin
        i_14_reg_1667 <= i_14_fu_1088_p2;
        next_mul_reg_1659 <= next_mul_fu_1077_p2;
        tmp_66_reg_1654 <= tmp_66_fu_1073_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_162)) begin
        j_4_reg_1733 <= j_4_fu_1315_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_5_reg_1510 <= j_5_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        j_6_reg_1599 <= j_6_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159)) begin
        j_7_reg_1701 <= j_7_fu_1213_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        k_3_reg_1540 <= k_3_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_16_fu_734_p2))) begin
        p_uOut_addr_1_reg_1527 <= tmp_64_cast_fu_764_p1;
        tmp_20_reg_1515 <= tmp_20_fu_746_p6;
        tmp_54_reg_1521[13 : 2] <= tmp_54_fu_793_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & ~(ap_const_lv1_0 == tmp_19_fu_889_p2))) begin
        p_uOut_addr_3_reg_1591 <= tmp_68_cast_fu_923_p1;
        tmp_22_reg_1579 <= tmp_22_fu_901_p6;
        tmp_58_reg_1585[13 : 2] <= tmp_58_fu_952_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == exitcond5_fu_1010_p2))) begin
        p_uOut_addr_5_reg_1632 <= tmp_78_cast_fu_1030_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156)) begin
        p_uOut_load_4_reg_1677 <= p_uOut_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122) | (ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156))) begin
        reg_547 <= p_uOut_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        reg_554 <= ST_WandB_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86))) begin
        reg_560 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97))) begin
        reg_571 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115))) begin
        reg_577 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153))) begin
        reg_584 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & (tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411)) begin
        tmp_1_reg_1435 <= tmp_1_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st163_fsm_162) & (ap_const_lv1_0 == exitcond2_fu_1310_p2))) begin
        tmp_21_reg_1738[13 : 2] <= tmp_21_fu_1342_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_7_fu_627_p2))) begin
        tmp_24_reg_1465 <= tmp_24_fu_646_p1;
        tmp_29_reg_1470 <= tmp_29_fu_660_p2;
        tmp_31_reg_1475 <= tmp_31_fu_666_p1;
        tmp_59_cast_reg_1460[14 : 0] <= tmp_59_cast_fu_642_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == exitcond5_fu_1010_p2))) begin
        tmp_35_reg_1637 <= tmp_35_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_7_fu_627_p2))) begin
        tmp_36_reg_1480 <= tmp_36_fu_689_p1;
        tmp_39_reg_1492 <= tmp_39_fu_697_p1;
        tmp_41_reg_1497 <= tmp_41_fu_707_p2;
        tmp_42_reg_1502 <= tmp_42_fu_713_p1;
        tmp_61_cast_reg_1487 <= tmp_61_cast_fu_693_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & (ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == exitcond6_fu_1083_p2))) begin
        tmp_40_reg_1672 <= tmp_40_fu_1098_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_157)) begin
        tmp_51_reg_1683 <= tmp_51_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st162_fsm_161)) begin
        tmp_8_reg_1711 <= tmp_8_fu_1233_p2;
    end
end

always @ (ap_sig_cseq_ST_st164_fsm_163 or exitcond8_fu_1368_p2 or ap_sig_bdd_719) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163) & (ap_const_lv1_0 == exitcond8_fu_1368_p2) & ~ap_sig_bdd_719)) begin
        P_WandB_TREADY = ap_const_logic_1;
    end else begin
        P_WandB_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_fu_589_p2 or ap_sig_bdd_411 or exitcond7_fu_1379_p2 or ap_sig_cseq_ST_st165_fsm_164 or ap_sig_bdd_733) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411) | ((ap_const_logic_1 == ap_sig_cseq_ST_st165_fsm_164) & (ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733))) begin
        P_config_V_TREADY = ap_const_logic_1;
    end else begin
        P_config_V_TREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_611_p2 or ap_sig_bdd_441) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_611_p2) & ~ap_sig_bdd_441)) begin
        P_netIn_TREADY = ap_const_logic_1;
    end else begin
        P_netIn_TREADY = ap_const_logic_0;
    end
end

always @ (tmp_reg_1423 or tmp_1_reg_1435 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2 or ap_reg_ioackin_P_netOut_V_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & (ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_reg_ioackin_P_netOut_V_TREADY))) begin
        P_netOut_V_TVALID = ap_const_logic_1;
    end else begin
        P_netOut_V_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st161_fsm_160 or ap_reg_ioackin_P_uOut_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st161_fsm_160) & (ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY))) begin
        P_uOut_TVALID = ap_const_logic_1;
    end else begin
        P_uOut_TVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond3_fu_805_p2 or ap_sig_cseq_ST_st80_fsm_79 or exitcond4_fu_958_p2 or ap_sig_cseq_ST_st164_fsm_163 or tmp_73_cast_fu_829_p1 or tmp_72_cast_fu_852_p1 or tmp_76_cast_fu_982_p1 or tmp_75_cast_fu_1005_p1 or tmp_63_cast_fu_1363_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163)) begin
        ST_WandB_address0 = tmp_63_cast_fu_1363_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == exitcond4_fu_958_p2))) begin
        ST_WandB_address0 = tmp_75_cast_fu_1005_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == exitcond4_fu_958_p2))) begin
        ST_WandB_address0 = tmp_76_cast_fu_982_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond3_fu_805_p2))) begin
        ST_WandB_address0 = tmp_72_cast_fu_852_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_805_p2))) begin
        ST_WandB_address0 = tmp_73_cast_fu_829_p1;
    end else begin
        ST_WandB_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or exitcond3_fu_805_p2 or ap_sig_cseq_ST_st80_fsm_79 or exitcond4_fu_958_p2 or ap_sig_cseq_ST_st164_fsm_163 or ap_sig_bdd_719) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_805_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond3_fu_805_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == exitcond4_fu_958_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == exitcond4_fu_958_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163) & ~ap_sig_bdd_719))) begin
        ST_WandB_ce0 = ap_const_logic_1;
    end else begin
        ST_WandB_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st164_fsm_163 or exitcond8_fu_1368_p2 or ap_sig_bdd_719) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st164_fsm_163) & (ap_const_lv1_0 == exitcond8_fu_1368_p2) & ~ap_sig_bdd_719)) begin
        ST_WandB_we0 = ap_const_logic_1;
    end else begin
        ST_WandB_we0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1423 or tmp_1_reg_1435 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond6_fu_1083_p2 or tmp_8_reg_1711 or exitcond7_reg_1756) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2)) | (~(ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == exitcond7_reg_1756)) | ((ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_8_reg_1711)) | ((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & ~(ap_const_lv1_0 == exitcond6_fu_1083_p2))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_reg_1423 or tmp_1_reg_1435 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond6_fu_1083_p2 or tmp_8_reg_1711 or exitcond7_reg_1756) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2)) | (~(ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == exitcond7_reg_1756)) | ((ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_8_reg_1711)) | ((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & ~(ap_const_lv1_0 == exitcond6_fu_1083_p2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_381) begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_927) begin
    if (ap_sig_bdd_927) begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_572) begin
    if (ap_sig_bdd_572) begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_581) begin
    if (ap_sig_bdd_581) begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_280) begin
    if (ap_sig_bdd_280) begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1017) begin
    if (ap_sig_bdd_1017) begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_316) begin
    if (ap_sig_bdd_316) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_952) begin
    if (ap_sig_bdd_952) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_398) begin
    if (ap_sig_bdd_398) begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_786) begin
    if (ap_sig_bdd_786) begin
        ap_sig_cseq_ST_st155_fsm_154 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_154 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_599) begin
    if (ap_sig_bdd_599) begin
        ap_sig_cseq_ST_st156_fsm_155 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st156_fsm_155 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_288) begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st157_fsm_156 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st157_fsm_156 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_643) begin
    if (ap_sig_bdd_643) begin
        ap_sig_cseq_ST_st158_fsm_157 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st158_fsm_157 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_652) begin
    if (ap_sig_bdd_652) begin
        ap_sig_cseq_ST_st159_fsm_158 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st159_fsm_158 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_663) begin
    if (ap_sig_bdd_663) begin
        ap_sig_cseq_ST_st160_fsm_159 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st160_fsm_159 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_813) begin
    if (ap_sig_bdd_813) begin
        ap_sig_cseq_ST_st161_fsm_160 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st161_fsm_160 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_677) begin
    if (ap_sig_bdd_677) begin
        ap_sig_cseq_ST_st162_fsm_161 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st162_fsm_161 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_695) begin
    if (ap_sig_bdd_695) begin
        ap_sig_cseq_ST_st163_fsm_162 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st163_fsm_162 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_713) begin
    if (ap_sig_bdd_713) begin
        ap_sig_cseq_ST_st164_fsm_163 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st164_fsm_163 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_729) begin
    if (ap_sig_bdd_729) begin
        ap_sig_cseq_ST_st165_fsm_164 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st165_fsm_164 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_333) begin
    if (ap_sig_bdd_333) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_297) begin
    if (ap_sig_bdd_297) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_959) begin
    if (ap_sig_bdd_959) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_183) begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_349) begin
    if (ap_sig_bdd_349) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_523) begin
    if (ap_sig_bdd_523) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_435) begin
    if (ap_sig_bdd_435) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_451) begin
    if (ap_sig_bdd_451) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_374) begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_967) begin
    if (ap_sig_bdd_967) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_356) begin
    if (ap_sig_bdd_356) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1010) begin
    if (ap_sig_bdd_1010) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_481) begin
    if (ap_sig_bdd_481) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_503) begin
    if (ap_sig_bdd_503) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_265) begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_391) begin
    if (ap_sig_bdd_391) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_764) begin
    if (ap_sig_bdd_764) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_532) begin
    if (ap_sig_bdd_532) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_553) begin
    if (ap_sig_bdd_553) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_272) begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_323) begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_974) begin
    if (ap_sig_bdd_974) begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_340) begin
    if (ap_sig_bdd_340) begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_306) begin
    if (ap_sig_bdd_306) begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_981) begin
    if (ap_sig_bdd_981) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_364) begin
    if (ap_sig_bdd_364) begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1027) begin
    if (ap_sig_bdd_1027) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

always @ (P_netOut_V_TREADY or ap_reg_ioackin_P_netOut_V_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_netOut_V_TREADY)) begin
        ap_sig_ioackin_P_netOut_V_TREADY = P_netOut_V_TREADY;
    end else begin
        ap_sig_ioackin_P_netOut_V_TREADY = ap_const_logic_1;
    end
end

always @ (P_uOut_TREADY or ap_reg_ioackin_P_uOut_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_P_uOut_TREADY)) begin
        ap_sig_ioackin_P_uOut_TREADY = P_uOut_TREADY;
    end else begin
        ap_sig_ioackin_P_uOut_TREADY = ap_const_logic_1;
    end
end

always @ (reg_577 or sum_reg_321 or sumsoft_reg_344 or sum_1_reg_367 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st88_fsm_87 or ap_sig_cseq_ST_st94_fsm_93) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        grp_fu_504_p0 = sumsoft_reg_344;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        grp_fu_504_p0 = sum_1_reg_367;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_504_p0 = reg_577;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_504_p0 = sum_reg_321;
    end else begin
        grp_fu_504_p0 = 'bx;
    end
end

always @ (reg_554 or reg_560 or reg_577 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st88_fsm_87 or ap_sig_cseq_ST_st94_fsm_93) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        grp_fu_504_p1 = reg_577;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        grp_fu_504_p1 = ap_const_lv64_3FF0000000000000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93))) begin
        grp_fu_504_p1 = reg_554;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st88_fsm_87))) begin
        grp_fu_504_p1 = reg_560;
    end else begin
        grp_fu_504_p1 = 'bx;
    end
end

always @ (reg_547 or ap_sig_cseq_ST_st47_fsm_46 or ap_sig_cseq_ST_st124_fsm_123) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_516_p0 = reg_547;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        grp_fu_516_p0 = ap_const_lv64_3FF0000000000000;
    end else begin
        grp_fu_516_p0 = 'bx;
    end
end

always @ (reg_571 or sumsoft_reg_344 or ap_sig_cseq_ST_st47_fsm_46 or ap_sig_cseq_ST_st124_fsm_123) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_516_p1 = sumsoft_reg_344;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        grp_fu_516_p1 = reg_571;
    end else begin
        grp_fu_516_p1 = 'bx;
    end
end

always @ (reg_571 or tmp_25_fu_867_p1 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st99_fsm_98) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        grp_fu_526_p1 = reg_571;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_526_p1 = tmp_25_fu_867_p1;
    end else begin
        grp_fu_526_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or p_uOut_addr_1_reg_1527 or ap_sig_cseq_ST_st5_fsm_4 or p_uOut_addr_3_reg_1591 or ap_sig_cseq_ST_st80_fsm_79 or ap_sig_cseq_ST_st122_fsm_121 or p_uOut_addr_5_reg_1632 or ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st155_fsm_154 or tmp_6_fu_622_p1 or tmp_74_cast_fu_839_p1 or tmp_77_cast_fu_992_p1 or tmp_78_cast_fu_1030_p1 or tmp_80_cast_fu_1054_p1 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154)) begin
        p_uOut_address0 = p_uOut_addr_5_reg_1632;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        p_uOut_address0 = p_uOut_addr_3_reg_1591;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        p_uOut_address0 = p_uOut_addr_1_reg_1527;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_address0 = tmp_6_fu_622_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        p_uOut_address0 = tmp_80_cast_fu_1054_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        p_uOut_address0 = tmp_78_cast_fu_1030_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        p_uOut_address0 = tmp_77_cast_fu_992_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        p_uOut_address0 = tmp_74_cast_fu_839_p1;
    end else begin
        p_uOut_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st160_fsm_159 or tmp_81_cast_fu_1068_p1 or tmp_82_cast_fu_1228_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159)) begin
        p_uOut_address1 = tmp_82_cast_fu_1228_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        p_uOut_address1 = tmp_81_cast_fu_1068_p1;
    end else begin
        p_uOut_address1 = 'bx;
    end
end

always @ (tmp_reg_1423 or tmp_1_reg_1435 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_441 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st80_fsm_79 or ap_sig_cseq_ST_st122_fsm_121 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2 or ap_sig_ioackin_P_netOut_V_TREADY or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_441) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        p_uOut_ce0 = ap_const_logic_1;
    end else begin
        p_uOut_ce0 = ap_const_logic_0;
    end
end

always @ (tmp_reg_1423 or tmp_1_reg_1435 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2 or ap_sig_ioackin_P_netOut_V_TREADY or ap_sig_cseq_ST_st160_fsm_159) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY))) | (ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159))) begin
        p_uOut_ce1 = ap_const_logic_1;
    end else begin
        p_uOut_ce1 = ap_const_logic_0;
    end
end

always @ (P_netIn_TDATA or reg_577 or reg_584 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        p_uOut_d0 = reg_577;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154))) begin
        p_uOut_d0 = reg_584;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_uOut_d0 = P_netIn_TDATA;
    end else begin
        p_uOut_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_611_p2 or ap_sig_bdd_441 or ap_sig_cseq_ST_st78_fsm_77 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_611_p2) & ~ap_sig_bdd_441) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        p_uOut_we0 = ap_const_logic_1;
    end else begin
        p_uOut_we0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or tmp_fu_589_p2 or ap_sig_bdd_411 or tmp_reg_1423 or tmp_1_fu_599_p2 or tmp_1_reg_1435 or exitcond1_fu_611_p2 or ap_sig_bdd_441 or tmp_7_fu_627_p2 or tmp_16_fu_734_p2 or exitcond3_fu_805_p2 or tmp_19_fu_889_p2 or exitcond4_fu_958_p2 or exitcond5_fu_1010_p2 or tmp_35_reg_1637 or tmp_38_fu_1040_p2 or ap_sig_ioackin_P_netOut_V_TREADY or exitcond6_fu_1083_p2 or exitcond_fu_1208_p2 or tmp_8_fu_1233_p2 or tmp_8_reg_1711 or exitcond2_fu_1310_p2 or exitcond8_fu_1368_p2 or ap_sig_bdd_719 or exitcond7_fu_1379_p2 or exitcond7_reg_1756 or ap_sig_bdd_733 or ap_sig_ioackin_P_uOut_TREADY) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411)) begin
                ap_NS_fsm = ap_ST_st165_fsm_164;
            end else if (((tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411 & (ap_const_lv1_0 == tmp_1_fu_599_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((tmp_fu_589_p2 == ap_const_lv1_0) & ~ap_sig_bdd_411 & ~(ap_const_lv1_0 == tmp_1_fu_599_p2))) begin
                ap_NS_fsm = ap_ST_st162_fsm_161;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((ap_const_lv1_0 == exitcond1_fu_611_p2) & ~ap_sig_bdd_441)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~ap_sig_bdd_441 & ~(ap_const_lv1_0 == exitcond1_fu_611_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == tmp_7_fu_627_p2)) begin
                ap_NS_fsm = ap_ST_st79_fsm_78;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == tmp_16_fu_734_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_805_p2)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st79_fsm_78 : 
        begin
            if (~(ap_const_lv1_0 == tmp_19_fu_889_p2)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st122_fsm_121;
            end
        end
        ap_ST_st80_fsm_79 : 
        begin
            if (~(ap_const_lv1_0 == exitcond4_fu_958_p2)) begin
                ap_NS_fsm = ap_ST_st93_fsm_92;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_80;
            end
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st122_fsm_121 : 
        begin
            if (~(ap_const_lv1_0 == exitcond5_fu_1010_p2)) begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end else begin
                ap_NS_fsm = ap_ST_st123_fsm_122;
            end
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st140_fsm_139;
        end
        ap_ST_st140_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st142_fsm_141;
        end
        ap_ST_st142_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st143_fsm_142;
        end
        ap_ST_st143_fsm_142 : 
        begin
            ap_NS_fsm = ap_ST_st144_fsm_143;
        end
        ap_ST_st144_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st145_fsm_144;
        end
        ap_ST_st145_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st146_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st147_fsm_146;
        end
        ap_ST_st147_fsm_146 : 
        begin
            ap_NS_fsm = ap_ST_st148_fsm_147;
        end
        ap_ST_st148_fsm_147 : 
        begin
            ap_NS_fsm = ap_ST_st149_fsm_148;
        end
        ap_ST_st149_fsm_148 : 
        begin
            ap_NS_fsm = ap_ST_st150_fsm_149;
        end
        ap_ST_st150_fsm_149 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_150;
        end
        ap_ST_st151_fsm_150 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_151;
        end
        ap_ST_st152_fsm_151 : 
        begin
            ap_NS_fsm = ap_ST_st153_fsm_152;
        end
        ap_ST_st153_fsm_152 : 
        begin
            ap_NS_fsm = ap_ST_st154_fsm_153;
        end
        ap_ST_st154_fsm_153 : 
        begin
            ap_NS_fsm = ap_ST_st155_fsm_154;
        end
        ap_ST_st155_fsm_154 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st156_fsm_155 : 
        begin
            if ((~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & (((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2)) | (~(ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == exitcond7_reg_1756)) | ((ap_const_lv1_0 == tmp_reg_1423) & ~(ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_8_reg_1711)) | ((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & ~(ap_const_lv1_0 == exitcond6_fu_1083_p2))))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == exitcond6_fu_1083_p2))) begin
                ap_NS_fsm = ap_ST_st160_fsm_159;
            end else if (((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & ~((ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2) & (ap_const_logic_0 == ap_sig_ioackin_P_netOut_V_TREADY)) & ~(ap_const_lv1_0 == tmp_38_fu_1040_p2))) begin
                ap_NS_fsm = ap_ST_st157_fsm_156;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        ap_ST_st157_fsm_156 : 
        begin
            ap_NS_fsm = ap_ST_st158_fsm_157;
        end
        ap_ST_st158_fsm_157 : 
        begin
            ap_NS_fsm = ap_ST_st159_fsm_158;
        end
        ap_ST_st159_fsm_158 : 
        begin
            ap_NS_fsm = ap_ST_st156_fsm_155;
        end
        ap_ST_st160_fsm_159 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_1208_p2)) begin
                ap_NS_fsm = ap_ST_st161_fsm_160;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        ap_ST_st161_fsm_160 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_P_uOut_TREADY)) begin
                ap_NS_fsm = ap_ST_st160_fsm_159;
            end else begin
                ap_NS_fsm = ap_ST_st161_fsm_160;
            end
        end
        ap_ST_st162_fsm_161 : 
        begin
            if (~(ap_const_lv1_0 == tmp_8_fu_1233_p2)) begin
                ap_NS_fsm = ap_ST_st163_fsm_162;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        ap_ST_st163_fsm_162 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_1310_p2)) begin
                ap_NS_fsm = ap_ST_st162_fsm_161;
            end else begin
                ap_NS_fsm = ap_ST_st164_fsm_163;
            end
        end
        ap_ST_st164_fsm_163 : 
        begin
            if (((ap_const_lv1_0 == exitcond8_fu_1368_p2) & ~ap_sig_bdd_719)) begin
                ap_NS_fsm = ap_ST_st164_fsm_163;
            end else if ((~ap_sig_bdd_719 & ~(ap_const_lv1_0 == exitcond8_fu_1368_p2))) begin
                ap_NS_fsm = ap_ST_st163_fsm_162;
            end else begin
                ap_NS_fsm = ap_ST_st164_fsm_163;
            end
        end
        ap_ST_st165_fsm_164 : 
        begin
            if (((ap_const_lv1_0 == exitcond7_fu_1379_p2) & ~ap_sig_bdd_733)) begin
                ap_NS_fsm = ap_ST_st165_fsm_164;
            end else if ((~ap_sig_bdd_733 & ~(ap_const_lv1_0 == exitcond7_fu_1379_p2))) begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end else begin
                ap_NS_fsm = ap_ST_st165_fsm_164;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign P_netOut_V_TDATA = p_s_reg_401;

assign P_uOut_TDATA = p_uOut_q1;

assign ST_WandB_d0 = P_WandB_TDATA;

assign ST_layerSize_V_load_1_phi_fu_1272_p3 = ((sel_tmp2_fu_1266_p2[0:0] === 1'b1) ? ST_layerSize_V_2 : sel_tmp1_fu_1258_p3);


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1010 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1017 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1027 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_183 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_280 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_297 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_316 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_333 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_340 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_349 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_356 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_364 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_391 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_398 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_99]);
end


always @ (ap_start or P_config_V_TVALID or tmp_fu_589_p2) begin
    ap_sig_bdd_411 = (((P_config_V_TVALID == ap_const_logic_0) & ~(tmp_fu_589_p2 == ap_const_lv1_0)) | (ap_start == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_435 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (P_netIn_TVALID or exitcond1_fu_611_p2) begin
    ap_sig_bdd_441 = ((P_netIn_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_fu_611_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_451 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_481 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_503 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_523 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_532 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_553 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_572 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_581 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_599 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_643 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_652 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_663 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_677 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_695 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_713 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A3]);
end


always @ (P_WandB_TVALID or exitcond8_fu_1368_p2) begin
    ap_sig_bdd_719 = ((P_WandB_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond8_fu_1368_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_729 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A4]);
end


always @ (P_config_V_TVALID or exitcond7_fu_1379_p2) begin
    ap_sig_bdd_733 = ((P_config_V_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond7_fu_1379_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_764 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_786 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_813 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A0]);
end


always @ (tmp_reg_1423 or tmp_1_reg_1435 or tmp_35_reg_1637 or ap_sig_cseq_ST_st156_fsm_155 or tmp_38_fu_1040_p2) begin
    ap_sig_bdd_906 = ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & (ap_const_lv1_0 == tmp_reg_1423) & (ap_const_lv1_0 == tmp_1_reg_1435) & (ap_const_lv1_0 == tmp_35_reg_1637) & (ap_const_lv1_0 == tmp_38_fu_1040_p2));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_927 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_952 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_959 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_967 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_974 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_57]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_981 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

assign exitcond1_fu_611_p2 = (i_2_reg_287 == ST_layerSize_V_0_load_reg_1439? 1'b1: 1'b0);

assign exitcond2_fu_1310_p2 = (j_reg_471 == ST_layerSize_V_load_1_phi_reg_1720? 1'b1: 1'b0);

assign exitcond3_fu_805_p2 = (k_1_reg_333 == tmp_20_reg_1515? 1'b1: 1'b0);

assign exitcond4_fu_958_p2 = (j_2_reg_379 == tmp_22_reg_1579? 1'b1: 1'b0);

assign exitcond5_fu_1010_p2 = (i_5_reg_390 == tmp_17_reg_1565? 1'b1: 1'b0);

assign exitcond6_fu_1083_p2 = (i_6_reg_426 == ST_numLayer_V_load_reg_1427? 1'b1: 1'b0);

assign exitcond7_fu_1379_p2 = (i_reg_493 == P_config_V_read_reg_1444? 1'b1: 1'b0);

assign exitcond8_fu_1368_p2 = (k_reg_482 == tmp_10_reg_1725? 1'b1: 1'b0);

assign exitcond_fu_1208_p2 = (j_3_reg_448 == tmp_40_reg_1672? 1'b1: 1'b0);

assign feedforward_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign grp_fu_504_ce = ap_const_logic_1;

assign grp_fu_512_ce = ap_const_logic_1;

assign grp_fu_516_ce = ap_const_logic_1;

assign grp_fu_526_ce = ap_const_logic_1;

assign i_10_fu_799_p2 = (i_3_reg_298 + ap_const_lv8_1);

assign i_11_fu_1015_p2 = (i_5_reg_390 + ap_const_lv8_1);

assign i_12_fu_895_p2 = (i_4_reg_356 + ap_const_lv32_1);

assign i_14_fu_1088_p2 = (ap_const_lv8_1 + i_6_reg_426);

assign i_15_fu_1202_p2 = (ap_const_lv8_1 + p_netOut_V_reg_414);

assign i_7_fu_1384_p2 = (i_reg_493 + ap_const_lv8_1);

assign i_8_fu_616_p2 = (i_2_reg_287 + ap_const_lv8_1);

assign i_9_fu_1348_p2 = (i_1_reg_459 + ap_const_lv8_1);

assign j_4_fu_1315_p2 = (j_reg_471 + ap_const_lv8_1);

assign j_5_fu_740_p2 = (j_1_reg_310 + ap_const_lv32_1);

assign j_6_fu_963_p2 = (j_2_reg_379 + ap_const_lv8_1);

assign j_7_fu_1213_p2 = (j_3_reg_448 + ap_const_lv8_1);

assign k_2_fu_1373_p2 = (k_reg_482 + ap_const_lv9_1);

assign k_3_fu_810_p2 = (k_1_reg_333 + ap_const_lv8_1);

assign lhs_V_1_cast_fu_670_p1 = ST_numLayer_V_load_reg_1427;

assign next_mul_fu_1077_p2 = (ap_const_lv14_23 + phi_mul_reg_437);

assign notlhs1_fu_1165_p2 = (tmp_45_fu_1133_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notlhs_fu_1147_p2 = (tmp_43_fu_1116_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notrhs1_fu_1171_p2 = (tmp_71_fu_1143_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign notrhs_fu_1153_p2 = (tmp_70_fu_1126_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign p_netOut_V_1_fu_1195_p3 = ((tmp_51_reg_1683[0:0] === 1'b1) ? p_netOut_V_reg_414 : p_s_reg_401);

assign p_shl1_cast_fu_773_p3 = {{tmp_52_fu_769_p1}, {ap_const_lv5_0}};

assign p_shl2_cast_fu_785_p3 = {{tmp_53_fu_781_p1}, {ap_const_lv2_0}};

assign p_shl3_cast_fu_932_p3 = {{tmp_56_fu_928_p1}, {ap_const_lv5_0}};

assign p_shl4_cast_fu_944_p3 = {{tmp_57_fu_940_p1}, {ap_const_lv2_0}};

assign p_uOut_load_3_to_int_fu_1112_p1 = reg_547;

assign p_uOut_load_4_to_int_fu_1130_p1 = p_uOut_load_4_reg_1677;

assign r_V_1_fu_701_p2 = ($signed(ap_const_lv9_1FE) + $signed(lhs_V_1_cast_fu_670_p1));

assign r_V_fu_673_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_1_cast_fu_670_p1));

assign sel_tmp1_fu_1258_p3 = ((sel_tmp_fu_1252_p2[0:0] === 1'b1) ? ST_layerSize_V_1 : ST_layerSize_V_3);

assign sel_tmp2_fu_1266_p2 = (tmp_5_fu_1248_p1 == ap_const_lv2_2? 1'b1: 1'b0);

assign sel_tmp_fu_1252_p2 = (tmp_5_fu_1248_p1 == ap_const_lv2_1? 1'b1: 1'b0);

assign tmp_10_fu_1304_p2 = (ap_const_lv9_1 + tmp_9_fu_1300_p1);

assign tmp_11_fu_1325_p2 = (tmp_cast_fu_1321_p1 + tmp_s_reg_1715);

assign tmp_12_cast_fu_1354_p1 = k_reg_482;

assign tmp_12_fu_1330_p2 = tmp_11_fu_1325_p2 << ap_const_lv14_5;

assign tmp_13_fu_1336_p2 = tmp_11_fu_1325_p2 << ap_const_lv14_2;

assign tmp_15_fu_730_p1 = tmp_14_fu_717_p6;

assign tmp_16_fu_734_p2 = ($signed(j_1_reg_310) < $signed(tmp_15_fu_730_p1)? 1'b1: 1'b0);

assign tmp_18_fu_885_p1 = tmp_17_fu_872_p6;

assign tmp_19_fu_889_p2 = ($signed(i_4_reg_356) < $signed(tmp_18_fu_885_p1)? 1'b1: 1'b0);

assign tmp_1_fu_599_p2 = (P_mode_V == ap_const_lv8_2? 1'b1: 1'b0);

assign tmp_21_fu_1342_p2 = (tmp_12_fu_1330_p2 + tmp_13_fu_1336_p2);

assign tmp_23_cast_fu_914_p1 = $signed(i_4_reg_356);

assign tmp_23_fu_636_p1 = tmp_23_fu_636_p10;

assign tmp_23_fu_636_p10 = i_3_reg_298;

assign tmp_23_fu_636_p2 = (ap_const_lv15_23 * tmp_23_fu_636_p1);

assign tmp_24_cast_fu_844_p1 = tmp_20_reg_1515;

assign tmp_24_fu_646_p1 = i_3_reg_298[1:0];

assign tmp_25_fu_867_p1 = tmp_38_neg_fu_861_p2;

assign tmp_29_cast1_fu_816_p1 = k_1_reg_333;

assign tmp_29_cast_fu_820_p1 = k_1_reg_333;

assign tmp_29_fu_660_p1 = tmp_29_fu_660_p10;

assign tmp_29_fu_660_p10 = tmp_4_fu_650_p2;

assign tmp_29_fu_660_p2 = (ap_const_lv9_23 * tmp_29_fu_660_p1);

assign tmp_2_fu_1286_p5 = ($signed(ap_const_lv2_3) + $signed(tmp_5_fu_1248_p1));

assign tmp_31_cast_fu_997_p1 = tmp_22_reg_1579;

assign tmp_31_fu_666_p1 = tmp_4_fu_650_p2[1:0];

assign tmp_33_cast1_fu_969_p1 = j_2_reg_379;

assign tmp_33_cast_fu_973_p1 = j_2_reg_379;

assign tmp_33_fu_683_p1 = r_V_fu_673_p2;

assign tmp_33_fu_683_p2 = ($signed({{1'b0}, {ap_const_lv16_23}}) * $signed(tmp_33_fu_683_p1));

assign tmp_35_fu_1035_p2 = (P_mode_V_read_reg_1418 == ap_const_lv8_3? 1'b1: 1'b0);

assign tmp_36_cast_fu_1021_p1 = i_5_reg_390;

assign tmp_36_fu_689_p1 = tmp_33_fu_683_p2[8:0];

assign tmp_38_fu_1040_p2 = (p_netOut_V_reg_414 < tmp_17_reg_1565? 1'b1: 1'b0);

assign tmp_38_neg_fu_861_p2 = (tmp_38_to_int_fu_857_p1 ^ ap_const_lv64_8000000000000000);

assign tmp_38_to_int_fu_857_p1 = reg_571;

assign tmp_39_fu_697_p1 = r_V_fu_673_p2[1:0];

assign tmp_3_fu_1390_p1 = i_reg_493[1:0];

assign tmp_40_fu_1098_p5 = i_6_reg_426[1:0];

assign tmp_41_cast_fu_1045_p1 = p_netOut_V_reg_414;

assign tmp_41_fu_707_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(r_V_1_fu_701_p2));

assign tmp_42_cast_fu_1059_p1 = p_s_reg_401;

assign tmp_42_fu_713_p1 = r_V_1_fu_701_p2[1:0];

assign tmp_43_fu_1116_p4 = {{p_uOut_load_3_to_int_fu_1112_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_44_fu_1358_p2 = (tmp_21_reg_1738 + tmp_12_cast_fu_1354_p1);

assign tmp_45_fu_1133_p4 = {{p_uOut_load_4_to_int_fu_1130_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_46_fu_759_p2 = (j_1_reg_310 + tmp_59_cast_reg_1460);

assign tmp_47_fu_1159_p2 = (notrhs_fu_1153_p2 | notlhs_fu_1147_p2);

assign tmp_48_fu_1177_p2 = (notrhs1_fu_1171_p2 | notlhs1_fu_1165_p2);

assign tmp_49_fu_1183_p2 = (tmp_47_fu_1159_p2 & tmp_48_fu_1177_p2);

assign tmp_4_fu_650_p2 = ($signed(ap_const_lv8_FF) + $signed(i_3_reg_298));

assign tmp_50_fu_522_opcode = ap_const_lv5_2;

assign tmp_51_fu_1189_p2 = (tmp_49_fu_1183_p2 & tmp_50_fu_522_p2);

assign tmp_52_cast_fu_1219_p1 = j_3_reg_448;

assign tmp_52_fu_769_p1 = tmp_46_fu_759_p2[8:0];

assign tmp_53_fu_781_p1 = tmp_46_fu_759_p2[11:0];

assign tmp_54_fu_793_p2 = (p_shl1_cast_fu_773_p3 + p_shl2_cast_fu_785_p3);

assign tmp_55_fu_918_p2 = ($signed(tmp_23_cast_fu_914_p1) + $signed(tmp_61_cast_reg_1487));

assign tmp_56_fu_928_p1 = tmp_55_fu_918_p2[8:0];

assign tmp_57_fu_940_p1 = tmp_55_fu_918_p2[11:0];

assign tmp_58_fu_952_p2 = (p_shl3_cast_fu_932_p3 + p_shl4_cast_fu_944_p3);

assign tmp_59_cast_fu_642_p1 = tmp_23_fu_636_p2;

assign tmp_59_fu_1025_p2 = (tmp_36_reg_1480 + tmp_36_cast_fu_1021_p1);

assign tmp_5_fu_1248_p1 = i_1_reg_459[1:0];

assign tmp_60_fu_847_p2 = (tmp_54_reg_1521 + tmp_24_cast_fu_844_p1);

assign tmp_61_cast_fu_693_p1 = $signed(tmp_33_fu_683_p2);

assign tmp_61_fu_824_p2 = (tmp_54_reg_1521 + tmp_29_cast_fu_820_p1);

assign tmp_62_fu_834_p2 = (tmp_29_reg_1470 + tmp_29_cast1_fu_816_p1);

assign tmp_63_cast_fu_1363_p1 = tmp_44_fu_1358_p2;

assign tmp_63_fu_1000_p2 = (tmp_58_reg_1585 + tmp_31_cast_fu_997_p1);

assign tmp_64_cast_fu_764_p1 = $signed(tmp_46_fu_759_p2);

assign tmp_64_fu_977_p2 = (tmp_58_reg_1585 + tmp_33_cast_fu_973_p1);

assign tmp_65_fu_987_p2 = (tmp_41_reg_1497 + tmp_33_cast1_fu_969_p1);

assign tmp_66_fu_1073_p1 = phi_mul_reg_437[8:0];

assign tmp_68_cast_fu_923_p1 = $signed(tmp_55_fu_918_p2);

assign tmp_68_fu_1049_p2 = (tmp_36_reg_1480 + tmp_41_cast_fu_1045_p1);

assign tmp_69_fu_1063_p2 = (tmp_36_reg_1480 + tmp_42_cast_fu_1059_p1);

assign tmp_6_fu_622_p1 = i_2_reg_287;

assign tmp_70_fu_1126_p1 = p_uOut_load_3_to_int_fu_1112_p1[51:0];

assign tmp_71_fu_1143_p1 = p_uOut_load_4_to_int_fu_1130_p1[51:0];

assign tmp_72_cast_fu_852_p1 = tmp_60_fu_847_p2;

assign tmp_72_fu_1223_p2 = (tmp_66_reg_1654 + tmp_52_cast_fu_1219_p1);

assign tmp_73_cast_fu_829_p1 = tmp_61_fu_824_p2;

assign tmp_74_cast_fu_839_p1 = $signed(tmp_62_fu_834_p2);

assign tmp_75_cast_fu_1005_p1 = tmp_63_fu_1000_p2;

assign tmp_76_cast_fu_982_p1 = tmp_64_fu_977_p2;

assign tmp_77_cast_fu_992_p1 = $signed(tmp_65_fu_987_p2);

assign tmp_78_cast_fu_1030_p1 = $signed(tmp_59_fu_1025_p2);

assign tmp_7_fu_627_p2 = (i_3_reg_298 < ST_numLayer_V_load_reg_1427? 1'b1: 1'b0);

assign tmp_80_cast_fu_1054_p1 = $signed(tmp_68_fu_1049_p2);

assign tmp_81_cast_fu_1068_p1 = $signed(tmp_69_fu_1063_p2);

assign tmp_82_cast_fu_1228_p1 = tmp_72_fu_1223_p2;

assign tmp_8_fu_1233_p2 = (i_1_reg_459 < ST_numLayer_V_load_reg_1427? 1'b1: 1'b0);

assign tmp_9_fu_1300_p1 = tmp_2_fu_1286_p6;

assign tmp_cast_fu_1321_p1 = j_reg_471;

assign tmp_fu_589_p2 = (P_mode_V == ap_const_lv8_1? 1'b1: 1'b0);

assign tmp_s_fu_1242_p1 = tmp_s_fu_1242_p10;

assign tmp_s_fu_1242_p10 = i_1_reg_459;

assign tmp_s_fu_1242_p2 = (ap_const_lv14_23 * tmp_s_fu_1242_p1);
always @ (posedge ap_clk) begin
    tmp_59_cast_reg_1460[31:15] <= 17'b00000000000000000;
    tmp_54_reg_1521[1:0] <= 2'b00;
    tmp_58_reg_1585[1:0] <= 2'b00;
    tmp_21_reg_1738[1:0] <= 2'b00;
end



endmodule //feedforward

