// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "sigmoid.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sigmoid::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sigmoid::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> sigmoid::ap_ST_pp0_stg0_fsm_0 = "1";
const sc_lv<32> sigmoid::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> sigmoid::ap_const_lv1_1 = "1";
const int sigmoid::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<64> sigmoid::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<64> sigmoid::ap_const_lv64_8000000000000000 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> sigmoid::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

sigmoid::sigmoid(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sigmoid_AXILiteS_s_axi_U = new sigmoid_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("sigmoid_AXILiteS_s_axi_U");
    sigmoid_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    sigmoid_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    sigmoid_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    sigmoid_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    sigmoid_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    sigmoid_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    sigmoid_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    sigmoid_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    sigmoid_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    sigmoid_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    sigmoid_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    sigmoid_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    sigmoid_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    sigmoid_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    sigmoid_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    sigmoid_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    sigmoid_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    sigmoid_AXILiteS_s_axi_U->ACLK(ap_clk);
    sigmoid_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    sigmoid_AXILiteS_s_axi_U->ACLK_EN(sigmoid_AXILiteS_s_axi_U_ap_dummy_ce);
    sigmoid_AXILiteS_s_axi_U->in_r(in_r);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0 = new sigmoid_dadd_64ns_64ns_64_5_full_dsp<1,5,64,64,64>("sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0");
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->clk(ap_clk);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->reset(ap_rst_n_inv);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->din0(tmp_1_reg_75);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->din1(ap_const_lv64_3FF0000000000000);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->ce(grp_fu_36_ce);
    sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0->dout(grp_fu_36_p2);
    sigmoid_ddiv_64ns_64ns_64_31_U1 = new sigmoid_ddiv_64ns_64ns_64_31<1,31,64,64,64>("sigmoid_ddiv_64ns_64ns_64_31_U1");
    sigmoid_ddiv_64ns_64ns_64_31_U1->clk(ap_clk);
    sigmoid_ddiv_64ns_64ns_64_31_U1->reset(ap_rst_n_inv);
    sigmoid_ddiv_64ns_64ns_64_31_U1->din0(ap_const_lv64_3FF0000000000000);
    sigmoid_ddiv_64ns_64ns_64_31_U1->din1(tmp_2_reg_80);
    sigmoid_ddiv_64ns_64ns_64_31_U1->ce(grp_fu_41_ce);
    sigmoid_ddiv_64ns_64ns_64_31_U1->dout(grp_fu_41_p2);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2 = new sigmoid_dexp_64ns_64ns_64_18_full_dsp<1,18,64,64,64>("sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2");
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->clk(ap_clk);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->reset(ap_rst_n_inv);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->din0(ap_const_lv64_0);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->din1(grp_fu_46_p1);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->ce(grp_fu_46_ce);
    sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2->dout(grp_fu_46_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it54 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppiten_pp0_it7 );
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_reg_ppiten_pp0_it10 );
    sensitive << ( ap_reg_ppiten_pp0_it11 );
    sensitive << ( ap_reg_ppiten_pp0_it12 );
    sensitive << ( ap_reg_ppiten_pp0_it13 );
    sensitive << ( ap_reg_ppiten_pp0_it14 );
    sensitive << ( ap_reg_ppiten_pp0_it15 );
    sensitive << ( ap_reg_ppiten_pp0_it16 );
    sensitive << ( ap_reg_ppiten_pp0_it17 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_reg_ppiten_pp0_it19 );
    sensitive << ( ap_reg_ppiten_pp0_it20 );
    sensitive << ( ap_reg_ppiten_pp0_it21 );
    sensitive << ( ap_reg_ppiten_pp0_it22 );
    sensitive << ( ap_reg_ppiten_pp0_it23 );
    sensitive << ( ap_reg_ppiten_pp0_it24 );
    sensitive << ( ap_reg_ppiten_pp0_it25 );
    sensitive << ( ap_reg_ppiten_pp0_it26 );
    sensitive << ( ap_reg_ppiten_pp0_it27 );
    sensitive << ( ap_reg_ppiten_pp0_it28 );
    sensitive << ( ap_reg_ppiten_pp0_it29 );
    sensitive << ( ap_reg_ppiten_pp0_it30 );
    sensitive << ( ap_reg_ppiten_pp0_it31 );
    sensitive << ( ap_reg_ppiten_pp0_it32 );
    sensitive << ( ap_reg_ppiten_pp0_it33 );
    sensitive << ( ap_reg_ppiten_pp0_it34 );
    sensitive << ( ap_reg_ppiten_pp0_it35 );
    sensitive << ( ap_reg_ppiten_pp0_it36 );
    sensitive << ( ap_reg_ppiten_pp0_it37 );
    sensitive << ( ap_reg_ppiten_pp0_it38 );
    sensitive << ( ap_reg_ppiten_pp0_it39 );
    sensitive << ( ap_reg_ppiten_pp0_it40 );
    sensitive << ( ap_reg_ppiten_pp0_it41 );
    sensitive << ( ap_reg_ppiten_pp0_it42 );
    sensitive << ( ap_reg_ppiten_pp0_it43 );
    sensitive << ( ap_reg_ppiten_pp0_it44 );
    sensitive << ( ap_reg_ppiten_pp0_it45 );
    sensitive << ( ap_reg_ppiten_pp0_it46 );
    sensitive << ( ap_reg_ppiten_pp0_it47 );
    sensitive << ( ap_reg_ppiten_pp0_it48 );
    sensitive << ( ap_reg_ppiten_pp0_it49 );
    sensitive << ( ap_reg_ppiten_pp0_it50 );
    sensitive << ( ap_reg_ppiten_pp0_it51 );
    sensitive << ( ap_reg_ppiten_pp0_it52 );
    sensitive << ( ap_reg_ppiten_pp0_it53 );
    sensitive << ( ap_reg_ppiten_pp0_it54 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it54 );
    sensitive << ( grp_fu_41_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_0);
    sensitive << ( ap_sig_bdd_19 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_reg_ppiten_pp0_it7 );
    sensitive << ( ap_reg_ppiten_pp0_it8 );
    sensitive << ( ap_reg_ppiten_pp0_it9 );
    sensitive << ( ap_reg_ppiten_pp0_it10 );
    sensitive << ( ap_reg_ppiten_pp0_it11 );
    sensitive << ( ap_reg_ppiten_pp0_it12 );
    sensitive << ( ap_reg_ppiten_pp0_it13 );
    sensitive << ( ap_reg_ppiten_pp0_it14 );
    sensitive << ( ap_reg_ppiten_pp0_it15 );
    sensitive << ( ap_reg_ppiten_pp0_it16 );
    sensitive << ( ap_reg_ppiten_pp0_it17 );
    sensitive << ( ap_reg_ppiten_pp0_it18 );
    sensitive << ( ap_reg_ppiten_pp0_it19 );
    sensitive << ( ap_reg_ppiten_pp0_it20 );
    sensitive << ( ap_reg_ppiten_pp0_it21 );
    sensitive << ( ap_reg_ppiten_pp0_it22 );
    sensitive << ( ap_reg_ppiten_pp0_it23 );
    sensitive << ( ap_reg_ppiten_pp0_it24 );
    sensitive << ( ap_reg_ppiten_pp0_it25 );
    sensitive << ( ap_reg_ppiten_pp0_it26 );
    sensitive << ( ap_reg_ppiten_pp0_it27 );
    sensitive << ( ap_reg_ppiten_pp0_it28 );
    sensitive << ( ap_reg_ppiten_pp0_it29 );
    sensitive << ( ap_reg_ppiten_pp0_it30 );
    sensitive << ( ap_reg_ppiten_pp0_it31 );
    sensitive << ( ap_reg_ppiten_pp0_it32 );
    sensitive << ( ap_reg_ppiten_pp0_it33 );
    sensitive << ( ap_reg_ppiten_pp0_it34 );
    sensitive << ( ap_reg_ppiten_pp0_it35 );
    sensitive << ( ap_reg_ppiten_pp0_it36 );
    sensitive << ( ap_reg_ppiten_pp0_it37 );
    sensitive << ( ap_reg_ppiten_pp0_it38 );
    sensitive << ( ap_reg_ppiten_pp0_it39 );
    sensitive << ( ap_reg_ppiten_pp0_it40 );
    sensitive << ( ap_reg_ppiten_pp0_it41 );
    sensitive << ( ap_reg_ppiten_pp0_it42 );
    sensitive << ( ap_reg_ppiten_pp0_it43 );
    sensitive << ( ap_reg_ppiten_pp0_it44 );
    sensitive << ( ap_reg_ppiten_pp0_it45 );
    sensitive << ( ap_reg_ppiten_pp0_it46 );
    sensitive << ( ap_reg_ppiten_pp0_it47 );
    sensitive << ( ap_reg_ppiten_pp0_it48 );
    sensitive << ( ap_reg_ppiten_pp0_it49 );
    sensitive << ( ap_reg_ppiten_pp0_it50 );
    sensitive << ( ap_reg_ppiten_pp0_it51 );
    sensitive << ( ap_reg_ppiten_pp0_it52 );
    sensitive << ( ap_reg_ppiten_pp0_it53 );

    SC_METHOD(thread_grp_fu_36_ce);

    SC_METHOD(thread_grp_fu_41_ce);

    SC_METHOD(thread_grp_fu_46_ce);

    SC_METHOD(thread_grp_fu_46_p1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_neg_fu_54_p2 );

    SC_METHOD(thread_sigmoid_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_tmp_neg_fu_54_p2);
    sensitive << ( tmp_to_int_fu_51_p1 );

    SC_METHOD(thread_tmp_to_int_fu_51_p1);
    sensitive << ( in_read_reg_65 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_pprstidle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it7 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it8 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it9 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it10 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it11 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it12 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it13 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it14 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it15 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it16 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it17 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it18 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it19 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it20 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it21 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it22 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it23 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it24 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it25 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it26 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it27 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it28 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it29 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it30 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it31 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it32 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it33 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it34 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it35 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it36 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it37 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it38 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it39 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it40 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it41 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it42 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it43 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it44 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it45 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it46 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it47 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it48 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it49 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it50 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it51 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it52 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it53 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it54 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sigmoid_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_0, "ap_sig_cseq_ST_pp0_stg0_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_19, "ap_sig_bdd_19");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it7, "ap_reg_ppiten_pp0_it7");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it8, "ap_reg_ppiten_pp0_it8");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it9, "ap_reg_ppiten_pp0_it9");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it10, "ap_reg_ppiten_pp0_it10");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it11, "ap_reg_ppiten_pp0_it11");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it12, "ap_reg_ppiten_pp0_it12");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it13, "ap_reg_ppiten_pp0_it13");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it14, "ap_reg_ppiten_pp0_it14");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it15, "ap_reg_ppiten_pp0_it15");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it16, "ap_reg_ppiten_pp0_it16");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it17, "ap_reg_ppiten_pp0_it17");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it18, "ap_reg_ppiten_pp0_it18");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it19, "ap_reg_ppiten_pp0_it19");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it20, "ap_reg_ppiten_pp0_it20");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it21, "ap_reg_ppiten_pp0_it21");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it22, "ap_reg_ppiten_pp0_it22");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it23, "ap_reg_ppiten_pp0_it23");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it24, "ap_reg_ppiten_pp0_it24");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it25, "ap_reg_ppiten_pp0_it25");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it26, "ap_reg_ppiten_pp0_it26");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it27, "ap_reg_ppiten_pp0_it27");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it28, "ap_reg_ppiten_pp0_it28");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it29, "ap_reg_ppiten_pp0_it29");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it30, "ap_reg_ppiten_pp0_it30");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it31, "ap_reg_ppiten_pp0_it31");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it32, "ap_reg_ppiten_pp0_it32");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it33, "ap_reg_ppiten_pp0_it33");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it34, "ap_reg_ppiten_pp0_it34");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it35, "ap_reg_ppiten_pp0_it35");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it36, "ap_reg_ppiten_pp0_it36");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it37, "ap_reg_ppiten_pp0_it37");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it38, "ap_reg_ppiten_pp0_it38");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it39, "ap_reg_ppiten_pp0_it39");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it40, "ap_reg_ppiten_pp0_it40");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it41, "ap_reg_ppiten_pp0_it41");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it42, "ap_reg_ppiten_pp0_it42");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it43, "ap_reg_ppiten_pp0_it43");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it44, "ap_reg_ppiten_pp0_it44");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it45, "ap_reg_ppiten_pp0_it45");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it46, "ap_reg_ppiten_pp0_it46");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it47, "ap_reg_ppiten_pp0_it47");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it48, "ap_reg_ppiten_pp0_it48");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it49, "ap_reg_ppiten_pp0_it49");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it50, "ap_reg_ppiten_pp0_it50");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it51, "ap_reg_ppiten_pp0_it51");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it52, "ap_reg_ppiten_pp0_it52");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it53, "ap_reg_ppiten_pp0_it53");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it54, "ap_reg_ppiten_pp0_it54");
    sc_trace(mVcdFile, in_r, "in_r");
    sc_trace(mVcdFile, sigmoid_AXILiteS_s_axi_U_ap_dummy_ce, "sigmoid_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, in_read_reg_65, "in_read_reg_65");
    sc_trace(mVcdFile, grp_fu_46_p2, "grp_fu_46_p2");
    sc_trace(mVcdFile, tmp_1_reg_75, "tmp_1_reg_75");
    sc_trace(mVcdFile, grp_fu_36_p2, "grp_fu_36_p2");
    sc_trace(mVcdFile, tmp_2_reg_80, "tmp_2_reg_80");
    sc_trace(mVcdFile, grp_fu_46_p1, "grp_fu_46_p1");
    sc_trace(mVcdFile, tmp_to_int_fu_51_p1, "tmp_to_int_fu_51_p1");
    sc_trace(mVcdFile, tmp_neg_fu_54_p2, "tmp_neg_fu_54_p2");
    sc_trace(mVcdFile, grp_fu_36_ce, "grp_fu_36_ce");
    sc_trace(mVcdFile, grp_fu_41_p2, "grp_fu_41_p2");
    sc_trace(mVcdFile, grp_fu_41_ce, "grp_fu_41_ce");
    sc_trace(mVcdFile, grp_fu_46_ce, "grp_fu_46_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
#endif

    }
    mHdltvinHandle.open("sigmoid.hdltvin.dat");
    mHdltvoutHandle.open("sigmoid.hdltvout.dat");
}

sigmoid::~sigmoid() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sigmoid_AXILiteS_s_axi_U;
    delete sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0;
    delete sigmoid_ddiv_64ns_64ns_64_31_U1;
    delete sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2;
}

void sigmoid::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it10 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it10 = ap_reg_ppiten_pp0_it9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it11 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it11 = ap_reg_ppiten_pp0_it10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it12 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it12 = ap_reg_ppiten_pp0_it11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it13 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it13 = ap_reg_ppiten_pp0_it12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it14 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it14 = ap_reg_ppiten_pp0_it13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it15 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it15 = ap_reg_ppiten_pp0_it14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it16 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it16 = ap_reg_ppiten_pp0_it15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it17 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it17 = ap_reg_ppiten_pp0_it16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it18 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it18 = ap_reg_ppiten_pp0_it17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it19 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it19 = ap_reg_ppiten_pp0_it18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it20 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it20 = ap_reg_ppiten_pp0_it19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it21 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it21 = ap_reg_ppiten_pp0_it20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it22 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it22 = ap_reg_ppiten_pp0_it21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it23 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it23 = ap_reg_ppiten_pp0_it22.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it24 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it24 = ap_reg_ppiten_pp0_it23.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it25 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it25 = ap_reg_ppiten_pp0_it24.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it26 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it26 = ap_reg_ppiten_pp0_it25.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it27 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it27 = ap_reg_ppiten_pp0_it26.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it28 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it28 = ap_reg_ppiten_pp0_it27.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it29 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it29 = ap_reg_ppiten_pp0_it28.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it30 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it30 = ap_reg_ppiten_pp0_it29.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it31 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it31 = ap_reg_ppiten_pp0_it30.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it32 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it32 = ap_reg_ppiten_pp0_it31.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it33 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it33 = ap_reg_ppiten_pp0_it32.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it34 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it34 = ap_reg_ppiten_pp0_it33.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it35 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it35 = ap_reg_ppiten_pp0_it34.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it36 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it36 = ap_reg_ppiten_pp0_it35.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it37 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it37 = ap_reg_ppiten_pp0_it36.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it38 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it38 = ap_reg_ppiten_pp0_it37.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it39 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it39 = ap_reg_ppiten_pp0_it38.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it40 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it40 = ap_reg_ppiten_pp0_it39.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it41 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it41 = ap_reg_ppiten_pp0_it40.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it42 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it42 = ap_reg_ppiten_pp0_it41.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it43 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it43 = ap_reg_ppiten_pp0_it42.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it44 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it44 = ap_reg_ppiten_pp0_it43.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it45 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it45 = ap_reg_ppiten_pp0_it44.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it46 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it46 = ap_reg_ppiten_pp0_it45.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it47 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it47 = ap_reg_ppiten_pp0_it46.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it48 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it48 = ap_reg_ppiten_pp0_it47.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it49 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it49 = ap_reg_ppiten_pp0_it48.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it50 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it50 = ap_reg_ppiten_pp0_it49.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it51 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it51 = ap_reg_ppiten_pp0_it50.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it52 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it52 = ap_reg_ppiten_pp0_it51.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it53 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it53 = ap_reg_ppiten_pp0_it52.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it54 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it54 = ap_reg_ppiten_pp0_it53.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it7 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it7 = ap_reg_ppiten_pp0_it6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it8 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it8 = ap_reg_ppiten_pp0_it7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it9 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it9 = ap_reg_ppiten_pp0_it8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        in_read_reg_65 = in_r.read();
    }
    if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_1_reg_75 = grp_fu_46_p2.read();
        tmp_2_reg_80 = grp_fu_36_p2.read();
    }
}

void sigmoid::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it54.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sigmoid::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it36.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it38.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it39.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it40.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it41.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it42.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it44.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it46.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it47.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it48.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it49.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it50.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it51.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it52.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it53.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it54.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sigmoid::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sigmoid::thread_ap_reg_ppiten_pp0_it0() {
    ap_reg_ppiten_pp0_it0 = ap_start.read();
}

void sigmoid::thread_ap_return() {
    ap_return = grp_fu_41_p2.read();
}

void sigmoid::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sigmoid::thread_ap_sig_bdd_19() {
    ap_sig_bdd_19 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void sigmoid::thread_ap_sig_cseq_ST_pp0_stg0_fsm_0() {
    if (ap_sig_bdd_19.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    }
}

void sigmoid::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it36.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it38.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it39.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it40.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it41.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it42.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it44.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it46.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it47.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it48.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it49.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it50.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it51.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it52.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it53.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void sigmoid::thread_grp_fu_36_ce() {
    grp_fu_36_ce = ap_const_logic_1;
}

void sigmoid::thread_grp_fu_41_ce() {
    grp_fu_41_ce = ap_const_logic_1;
}

void sigmoid::thread_grp_fu_46_ce() {
    grp_fu_46_ce = ap_const_logic_1;
}

void sigmoid::thread_grp_fu_46_p1() {
    grp_fu_46_p1 = tmp_neg_fu_54_p2.read();
}

void sigmoid::thread_sigmoid_AXILiteS_s_axi_U_ap_dummy_ce() {
    sigmoid_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void sigmoid::thread_tmp_neg_fu_54_p2() {
    tmp_neg_fu_54_p2 = (tmp_to_int_fu_51_p1.read() ^ ap_const_lv64_8000000000000000);
}

void sigmoid::thread_tmp_to_int_fu_51_p1() {
    tmp_to_int_fu_51_p1 = in_read_reg_65.read();
}

void sigmoid::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void sigmoid::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

