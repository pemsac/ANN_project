// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sigmoid,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.693000,HLS_SYN_LAT=54,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=29,HLS_SYN_FF=5552,HLS_SYN_LUT=7663}" *)

module sigmoid (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] ap_return;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm = 1'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_19;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg    ap_reg_ppiten_pp0_it41 = 1'b0;
reg    ap_reg_ppiten_pp0_it42 = 1'b0;
reg    ap_reg_ppiten_pp0_it43 = 1'b0;
reg    ap_reg_ppiten_pp0_it44 = 1'b0;
reg    ap_reg_ppiten_pp0_it45 = 1'b0;
reg    ap_reg_ppiten_pp0_it46 = 1'b0;
reg    ap_reg_ppiten_pp0_it47 = 1'b0;
reg    ap_reg_ppiten_pp0_it48 = 1'b0;
reg    ap_reg_ppiten_pp0_it49 = 1'b0;
reg    ap_reg_ppiten_pp0_it50 = 1'b0;
reg    ap_reg_ppiten_pp0_it51 = 1'b0;
reg    ap_reg_ppiten_pp0_it52 = 1'b0;
reg    ap_reg_ppiten_pp0_it53 = 1'b0;
reg    ap_reg_ppiten_pp0_it54 = 1'b0;
wire   [63:0] in_r;
wire    sigmoid_AXILiteS_s_axi_U_ap_dummy_ce;
reg   [63:0] in_read_reg_65;
wire   [63:0] grp_fu_46_p2;
reg   [63:0] tmp_1_reg_75;
wire   [63:0] grp_fu_36_p2;
reg   [63:0] tmp_2_reg_80;
wire   [63:0] grp_fu_46_p1;
wire   [63:0] tmp_to_int_fu_51_p1;
wire   [63:0] tmp_neg_fu_54_p2;
wire    grp_fu_36_ce;
wire   [63:0] grp_fu_41_p2;
wire    grp_fu_41_ce;
wire    grp_fu_46_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;


sigmoid_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
sigmoid_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( sigmoid_AXILiteS_s_axi_U_ap_dummy_ce ),
    .in_r( in_r )
);

sigmoid_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sigmoid_dadd_64ns_64ns_64_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( tmp_1_reg_75 ),
    .din1( ap_const_lv64_3FF0000000000000 ),
    .ce( grp_fu_36_ce ),
    .dout( grp_fu_36_p2 )
);

sigmoid_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sigmoid_ddiv_64ns_64ns_64_31_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_3FF0000000000000 ),
    .din1( tmp_2_reg_80 ),
    .ce( grp_fu_41_ce ),
    .dout( grp_fu_41_p2 )
);

sigmoid_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sigmoid_dexp_64ns_64ns_64_18_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( ap_const_lv64_0 ),
    .din1( grp_fu_46_p1 ),
    .ce( grp_fu_46_ce ),
    .dout( grp_fu_46_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it41
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it42
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it43
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it44
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it45
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it46
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it47
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it48
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it49
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it50
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it51
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it52
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it53
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it54
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it54 <= ap_reg_ppiten_pp0_it53;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        in_read_reg_65 <= in_r;
    end
end

always @ (posedge ap_clk) begin
    if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) begin
        tmp_1_reg_75 <= grp_fu_46_p2;
        tmp_2_reg_80 <= grp_fu_36_p2;
    end
end

always @ (ap_start or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it54) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it54) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppiten_pp0_it4 or ap_reg_ppiten_pp0_it5 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or ap_reg_ppiten_pp0_it9 or ap_reg_ppiten_pp0_it10 or ap_reg_ppiten_pp0_it11 or ap_reg_ppiten_pp0_it12 or ap_reg_ppiten_pp0_it13 or ap_reg_ppiten_pp0_it14 or ap_reg_ppiten_pp0_it15 or ap_reg_ppiten_pp0_it16 or ap_reg_ppiten_pp0_it17 or ap_reg_ppiten_pp0_it18 or ap_reg_ppiten_pp0_it19 or ap_reg_ppiten_pp0_it20 or ap_reg_ppiten_pp0_it21 or ap_reg_ppiten_pp0_it22 or ap_reg_ppiten_pp0_it23 or ap_reg_ppiten_pp0_it24 or ap_reg_ppiten_pp0_it25 or ap_reg_ppiten_pp0_it26 or ap_reg_ppiten_pp0_it27 or ap_reg_ppiten_pp0_it28 or ap_reg_ppiten_pp0_it29 or ap_reg_ppiten_pp0_it30 or ap_reg_ppiten_pp0_it31 or ap_reg_ppiten_pp0_it32 or ap_reg_ppiten_pp0_it33 or ap_reg_ppiten_pp0_it34 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it36 or ap_reg_ppiten_pp0_it37 or ap_reg_ppiten_pp0_it38 or ap_reg_ppiten_pp0_it39 or ap_reg_ppiten_pp0_it40 or ap_reg_ppiten_pp0_it41 or ap_reg_ppiten_pp0_it42 or ap_reg_ppiten_pp0_it43 or ap_reg_ppiten_pp0_it44 or ap_reg_ppiten_pp0_it45 or ap_reg_ppiten_pp0_it46 or ap_reg_ppiten_pp0_it47 or ap_reg_ppiten_pp0_it48 or ap_reg_ppiten_pp0_it49 or ap_reg_ppiten_pp0_it50 or ap_reg_ppiten_pp0_it51 or ap_reg_ppiten_pp0_it52 or ap_reg_ppiten_pp0_it53 or ap_reg_ppiten_pp0_it54) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it3) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it4) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it5) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it6) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it7) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it8) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it9) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it10) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it11) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it12) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it13) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it14) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it15) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it16) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it17) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it18) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it19) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it20) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it21) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it22) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it23) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it24) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it25) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it26) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it27) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it28) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it29) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it30) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it31) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it32) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it33) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it34) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it35) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it36) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it37) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it38) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it39) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it40) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it41) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it42) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it43) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it44) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it45) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it46) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it47) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it48) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it49) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it50) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it51) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it52) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it53) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it54))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_19) begin
    if (ap_sig_bdd_19) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppiten_pp0_it4 or ap_reg_ppiten_pp0_it5 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or ap_reg_ppiten_pp0_it9 or ap_reg_ppiten_pp0_it10 or ap_reg_ppiten_pp0_it11 or ap_reg_ppiten_pp0_it12 or ap_reg_ppiten_pp0_it13 or ap_reg_ppiten_pp0_it14 or ap_reg_ppiten_pp0_it15 or ap_reg_ppiten_pp0_it16 or ap_reg_ppiten_pp0_it17 or ap_reg_ppiten_pp0_it18 or ap_reg_ppiten_pp0_it19 or ap_reg_ppiten_pp0_it20 or ap_reg_ppiten_pp0_it21 or ap_reg_ppiten_pp0_it22 or ap_reg_ppiten_pp0_it23 or ap_reg_ppiten_pp0_it24 or ap_reg_ppiten_pp0_it25 or ap_reg_ppiten_pp0_it26 or ap_reg_ppiten_pp0_it27 or ap_reg_ppiten_pp0_it28 or ap_reg_ppiten_pp0_it29 or ap_reg_ppiten_pp0_it30 or ap_reg_ppiten_pp0_it31 or ap_reg_ppiten_pp0_it32 or ap_reg_ppiten_pp0_it33 or ap_reg_ppiten_pp0_it34 or ap_reg_ppiten_pp0_it35 or ap_reg_ppiten_pp0_it36 or ap_reg_ppiten_pp0_it37 or ap_reg_ppiten_pp0_it38 or ap_reg_ppiten_pp0_it39 or ap_reg_ppiten_pp0_it40 or ap_reg_ppiten_pp0_it41 or ap_reg_ppiten_pp0_it42 or ap_reg_ppiten_pp0_it43 or ap_reg_ppiten_pp0_it44 or ap_reg_ppiten_pp0_it45 or ap_reg_ppiten_pp0_it46 or ap_reg_ppiten_pp0_it47 or ap_reg_ppiten_pp0_it48 or ap_reg_ppiten_pp0_it49 or ap_reg_ppiten_pp0_it50 or ap_reg_ppiten_pp0_it51 or ap_reg_ppiten_pp0_it52 or ap_reg_ppiten_pp0_it53) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it3) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it4) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it5) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it6) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it7) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it8) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it9) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it10) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it11) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it12) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it13) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it14) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it15) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it16) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it17) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it18) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it19) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it20) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it21) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it22) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it23) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it24) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it25) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it26) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it27) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it28) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it29) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it30) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it31) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it32) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it33) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it34) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it35) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it36) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it37) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it38) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it39) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it40) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it41) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it42) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it43) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it44) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it45) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it46) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it47) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it48) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it49) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it50) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it51) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it52) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it53) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_reg_ppiten_pp0_it0 = ap_start;

assign ap_return = grp_fu_41_p2;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_19 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

assign grp_fu_36_ce = ap_const_logic_1;

assign grp_fu_41_ce = ap_const_logic_1;

assign grp_fu_46_ce = ap_const_logic_1;

assign grp_fu_46_p1 = tmp_neg_fu_54_p2;

assign sigmoid_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign tmp_neg_fu_54_p2 = (tmp_to_int_fu_51_p1 ^ ap_const_lv64_8000000000000000);

assign tmp_to_int_fu_51_p1 = in_read_reg_65;


endmodule //sigmoid

