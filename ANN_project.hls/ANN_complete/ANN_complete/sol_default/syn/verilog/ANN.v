// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ANN,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.395400,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=44,HLS_SYN_FF=7263,HLS_SYN_LUT=10798}" *)

module ANN (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        config_r_address0,
        config_r_ce0,
        config_r_q0,
        WandB_address0,
        WandB_ce0,
        WandB_we0,
        WandB_d0,
        WandB_q0,
        WandB_address1,
        WandB_ce1,
        WandB_we1,
        WandB_d1,
        WandB_q1,
        uOut_address0,
        uOut_ce0,
        uOut_we0,
        uOut_d0,
        netIn_address0,
        netIn_ce0,
        netIn_q0,
        netOut_address0,
        netOut_ce0,
        netOut_we0,
        netOut_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 160'b1;
parameter    ap_ST_st2_fsm_1 = 160'b10;
parameter    ap_ST_st3_fsm_2 = 160'b100;
parameter    ap_ST_st4_fsm_3 = 160'b1000;
parameter    ap_ST_st5_fsm_4 = 160'b10000;
parameter    ap_ST_st6_fsm_5 = 160'b100000;
parameter    ap_ST_st7_fsm_6 = 160'b1000000;
parameter    ap_ST_st8_fsm_7 = 160'b10000000;
parameter    ap_ST_st9_fsm_8 = 160'b100000000;
parameter    ap_ST_st10_fsm_9 = 160'b1000000000;
parameter    ap_ST_st11_fsm_10 = 160'b10000000000;
parameter    ap_ST_st12_fsm_11 = 160'b100000000000;
parameter    ap_ST_st13_fsm_12 = 160'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 160'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 160'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 160'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 160'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 160'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 160'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 160'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 160'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 160'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 160'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 160'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 160'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 160'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 160'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 160'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 160'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 160'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 160'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 160'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 160'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 160'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 160'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 160'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 160'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 160'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 160'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 160'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 160'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 160'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 160'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 160'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 160'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 160'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 160'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 160'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 160'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 160'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 160'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 160'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 160'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 160'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 160'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 160'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 160'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 160'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 160'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 160'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 160'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 160'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 160'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 160'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 160'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 160'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 160'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 160'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 160'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st147_fsm_146 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st148_fsm_147 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st149_fsm_148 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st150_fsm_149 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st151_fsm_150 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st152_fsm_151 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st153_fsm_152 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st154_fsm_153 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st155_fsm_154 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st156_fsm_155 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st157_fsm_156 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st158_fsm_157 = 160'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st159_fsm_158 = 160'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st160_fsm_159 = 160'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_9E = 32'b10011110;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_99 = 32'b10011001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_9B = 32'b10011011;
parameter    ap_const_lv32_9C = 32'b10011100;
parameter    ap_const_lv32_9F = 32'b10011111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9A = 32'b10011010;
parameter    ap_const_lv37_0 = 37'b0000000000000000000000000000000000000;
parameter    ap_const_lv32_9D = 32'b10011101;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv9_23 = 9'b100011;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv37_23 = 37'b100011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] config_r_address0;
output   config_r_ce0;
input  [31:0] config_r_q0;
output  [12:0] WandB_address0;
output   WandB_ce0;
output   WandB_we0;
output  [63:0] WandB_d0;
input  [63:0] WandB_q0;
output  [12:0] WandB_address1;
output   WandB_ce1;
output   WandB_we1;
output  [63:0] WandB_d1;
input  [63:0] WandB_q1;
output  [7:0] uOut_address0;
output   uOut_ce0;
output   uOut_we0;
output  [63:0] uOut_d0;
output  [5:0] netIn_address0;
output   netIn_ce0;
input  [63:0] netIn_q0;
output  [5:0] netOut_address0;
output   netOut_ce0;
output   netOut_we0;
output  [31:0] netOut_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg config_r_ce0;
reg uOut_ce0;
reg uOut_we0;
reg netIn_ce0;
reg[5:0] netOut_address0;
reg netOut_ce0;
reg netOut_we0;
reg[31:0] netOut_d0;
(* fsm_encoding = "none" *) reg   [159:0] ap_CS_fsm = 160'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_176;
reg   [31:0] p_numLayer = 32'b00000000000000000000000000000000;
reg   [31:0] p_layerSize_0 = 32'b00000000000000000000000000000000;
reg   [7:0] p_uOut_address0;
reg    p_uOut_ce0;
reg    p_uOut_we0;
reg   [63:0] p_uOut_d0;
wire   [63:0] p_uOut_q0;
reg   [7:0] p_uOut_address1;
reg    p_uOut_ce1;
wire   [63:0] p_uOut_q1;
reg   [31:0] p_layerSize_1 = 32'b00000000000000000000000000000000;
reg   [31:0] p_layerSize_2 = 32'b00000000000000000000000000000000;
reg   [31:0] p_layerSize_3 = 32'b00000000000000000000000000000000;
reg   [63:0] reg_448;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_246;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_253;
reg    ap_sig_cseq_ST_st123_fsm_122;
reg    ap_sig_bdd_261;
reg    ap_sig_cseq_ST_st159_fsm_158;
reg    ap_sig_bdd_269;
wire   [63:0] grp_fu_396_p2;
reg   [63:0] reg_455;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_279;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_bdd_286;
wire   [63:0] grp_fu_385_p2;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_296;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_bdd_303;
reg   [63:0] reg_466;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_312;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_319;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_bdd_327;
wire   [63:0] grp_fu_411_p2;
reg   [63:0] reg_472;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_337;
reg    ap_sig_cseq_ST_st116_fsm_115;
reg    ap_sig_bdd_344;
wire   [63:0] grp_fu_401_p2;
reg   [63:0] reg_479;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_354;
reg    ap_sig_cseq_ST_st154_fsm_153;
reg    ap_sig_bdd_361;
wire   [0:0] tmp_fu_484_p2;
reg   [0:0] tmp_reg_1029;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_376;
wire   [0:0] tmp_9_fu_506_p2;
reg   [0:0] tmp_9_reg_1041;
wire   [30:0] i_4_fu_521_p2;
reg   [30:0] i_4_reg_1053;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_395;
wire   [63:0] tmp_5_fu_527_p1;
reg   [63:0] tmp_5_reg_1058;
wire   [0:0] tmp_3_fu_516_p2;
wire  signed [8:0] tmp_21_fu_547_p1;
reg  signed [8:0] tmp_21_reg_1071;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_412;
wire   [0:0] tmp_8_fu_536_p2;
wire   [1:0] tmp_22_fu_551_p1;
reg   [1:0] tmp_22_reg_1076;
wire  signed [8:0] tmp_23_fu_560_p1;
reg  signed [8:0] tmp_23_reg_1081;
wire   [1:0] tmp_25_fu_564_p1;
reg   [1:0] tmp_25_reg_1086;
wire  signed [8:0] tmp_27_fu_573_p1;
reg  signed [8:0] tmp_27_reg_1091;
wire   [1:0] tmp_30_fu_577_p1;
reg   [1:0] tmp_30_reg_1096;
wire   [8:0] tmp_1_fu_585_p2;
reg   [8:0] tmp_1_reg_1101;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_436;
wire   [1:0] tmp_19_fu_591_p1;
reg   [1:0] tmp_19_reg_1106;
wire   [8:0] tmp_4_fu_595_p2;
reg   [8:0] tmp_4_reg_1111;
wire   [31:0] j_3_fu_619_p2;
reg   [31:0] j_3_reg_1119;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_449;
wire   [31:0] tmp_18_fu_625_p6;
reg   [31:0] tmp_18_reg_1124;
wire   [0:0] tmp_15_fu_613_p2;
reg   [7:0] p_uOut_addr_2_reg_1129;
wire   [30:0] i_6_fu_652_p2;
wire   [30:0] k_1_fu_667_p2;
reg   [30:0] k_1_reg_1142;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_469;
wire   [0:0] tmp_29_fu_662_p2;
wire   [63:0] tmp_40_fu_697_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_484;
wire   [8:0] tmp_10_fu_702_p2;
reg   [8:0] tmp_10_reg_1157;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_493;
wire   [8:0] tmp_13_fu_707_p2;
reg   [8:0] tmp_13_reg_1165;
wire   [31:0] grp_fu_432_p6;
reg   [31:0] tmp_16_reg_1170;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_504;
wire   [31:0] i_7_fu_718_p2;
reg   [31:0] i_7_reg_1178;
wire   [31:0] tmp_24_fu_724_p6;
reg   [31:0] tmp_24_reg_1183;
wire   [0:0] tmp_17_fu_712_p2;
reg   [7:0] p_uOut_addr_4_reg_1188;
wire   [30:0] j_4_fu_760_p2;
reg   [30:0] j_4_reg_1196;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_523;
wire   [0:0] tmp_32_fu_755_p2;
reg    ap_sig_cseq_ST_st121_fsm_120;
reg    ap_sig_bdd_537;
wire   [30:0] i_8_fu_789_p2;
reg   [30:0] i_8_reg_1214;
reg    ap_sig_cseq_ST_st122_fsm_121;
reg    ap_sig_bdd_546;
reg   [7:0] p_uOut_addr_5_reg_1219;
wire   [0:0] tmp_28_fu_784_p2;
wire   [8:0] tmp_48_fu_814_p1;
reg   [8:0] tmp_48_reg_1231;
reg    ap_sig_cseq_ST_st156_fsm_155;
reg    ap_sig_bdd_561;
wire   [36:0] next_mul_fu_818_p2;
reg   [36:0] next_mul_reg_1236;
wire   [30:0] i_10_fu_833_p2;
reg   [30:0] i_10_reg_1244;
wire   [1:0] tmp_52_fu_839_p1;
reg   [1:0] tmp_52_reg_1249;
wire   [0:0] tmp_49_fu_828_p2;
wire   [0:0] tmp_51_fu_843_p2;
wire   [31:0] j_5_fu_901_p2;
reg   [31:0] j_5_reg_1275;
reg    ap_sig_cseq_ST_st157_fsm_156;
reg    ap_sig_bdd_599;
wire   [63:0] tmp_75_cast_fu_916_p1;
reg   [63:0] tmp_75_cast_reg_1280;
wire   [0:0] tmp_63_fu_895_p2;
reg   [63:0] p_uOut_load_4_reg_1290;
wire   [31:0] i_9_fu_1018_p2;
reg    ap_sig_cseq_ST_st160_fsm_159;
reg    ap_sig_bdd_617;
reg   [30:0] i_reg_226;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_626;
reg   [30:0] i_1_reg_237;
reg   [31:0] j_reg_249;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_640;
reg   [30:0] k_reg_260;
wire   [63:0] sum_phi_fu_275_p4;
reg   [63:0] sum_reg_271;
reg   [31:0] i_2_reg_283;
reg   [63:0] sumsoft_reg_294;
reg   [30:0] j_1_reg_306;
wire   [63:0] sum_1_phi_fu_321_p4;
reg   [63:0] sum_1_reg_317;
reg   [30:0] i_3_reg_329;
reg    ap_sig_cseq_ST_st155_fsm_154;
reg    ap_sig_bdd_662;
reg   [30:0] i_5_reg_340;
reg   [36:0] phi_mul_reg_351;
reg   [31:0] max_1_reg_362;
reg   [31:0] j_2_reg_374;
reg    ap_sig_cseq_ST_st158_fsm_157;
reg    ap_sig_bdd_684;
wire  signed [63:0] tmp_20_cast_fu_647_p1;
wire  signed [63:0] tmp_35_cast_fu_682_p1;
wire  signed [63:0] tmp_26_cast_fu_746_p1;
wire  signed [63:0] tmp_49_cast_fu_775_p1;
wire  signed [63:0] tmp_54_cast_fu_804_p1;
wire  signed [63:0] tmp_57_cast_fu_858_p1;
wire  signed [63:0] tmp_59_cast_fu_872_p1;
wire  signed [63:0] tmp_60_fu_877_p1;
wire  signed [63:0] tmp_53_fu_921_p1;
wire   [0:0] tmp_69_fu_1007_p2;
wire  signed [63:0] tmp_56_fu_926_p1;
reg   [31:0] max_fu_76;
reg    ap_sig_cseq_ST_st117_fsm_116;
reg    ap_sig_bdd_748;
reg   [63:0] grp_fu_385_p0;
reg   [63:0] grp_fu_385_p1;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_775;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_782;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_789;
reg   [63:0] grp_fu_401_p0;
reg   [63:0] grp_fu_401_p1;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_816;
reg    ap_sig_cseq_ST_st124_fsm_123;
reg    ap_sig_bdd_823;
reg   [63:0] grp_fu_411_p1;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_833;
wire   [0:0] tmp_6_fu_500_p2;
wire   [0:0] tmp_2_fu_494_p2;
wire   [31:0] i_cast_fu_512_p1;
wire   [31:0] i_1_cast_fu_532_p1;
wire   [30:0] tmp_s_fu_541_p2;
wire   [31:0] tmp_7_fu_555_p2;
wire   [31:0] tmp_11_fu_568_p2;
wire  signed [8:0] tmp_12_fu_581_p1;
wire   [31:0] tmp_14_fu_600_p6;
wire   [8:0] tmp_31_fu_638_p1;
wire   [8:0] tmp_20_fu_642_p2;
wire   [31:0] k_cast_fu_658_p1;
wire   [8:0] tmp_39_fu_673_p1;
wire   [8:0] tmp_35_fu_677_p2;
wire   [63:0] tmp_41_to_int_fu_687_p1;
wire   [63:0] tmp_41_neg_fu_691_p2;
wire   [8:0] tmp_33_fu_737_p1;
wire   [8:0] tmp_26_fu_741_p2;
wire   [31:0] j_1_cast_fu_751_p1;
wire   [8:0] tmp_44_fu_766_p1;
wire   [8:0] tmp_46_fu_770_p2;
wire   [31:0] i_3_cast_fu_780_p1;
wire   [8:0] tmp_34_fu_795_p1;
wire   [8:0] tmp_36_fu_799_p2;
wire   [31:0] i_5_cast_fu_824_p1;
wire   [8:0] tmp_54_fu_849_p1;
wire   [8:0] tmp_55_fu_853_p2;
wire   [8:0] tmp_57_fu_863_p1;
wire   [8:0] tmp_58_fu_867_p2;
wire   [31:0] tmp_70_fu_882_p6;
wire   [8:0] tmp_71_fu_907_p1;
wire   [8:0] tmp_72_fu_911_p2;
wire   [63:0] p_uOut_load_3_to_int_fu_930_p1;
wire   [63:0] p_uOut_load_4_to_int_fu_948_p1;
wire   [10:0] tmp_59_fu_934_p4;
wire   [51:0] tmp_61_fu_944_p1;
wire   [0:0] notrhs_fu_971_p2;
wire   [0:0] notlhs_fu_965_p2;
wire   [10:0] tmp_62_fu_951_p4;
wire   [51:0] tmp_64_fu_961_p1;
wire   [0:0] notrhs2_fu_989_p2;
wire   [0:0] notlhs1_fu_983_p2;
wire   [0:0] tmp_65_fu_977_p2;
wire   [0:0] tmp_66_fu_995_p2;
wire   [0:0] tmp_67_fu_1001_p2;
wire   [0:0] tmp_68_fu_407_p2;
wire    grp_fu_385_ce;
wire    grp_fu_396_ce;
wire    grp_fu_401_ce;
wire   [4:0] tmp_68_fu_407_opcode;
wire    grp_fu_411_ce;
reg   [159:0] ap_NS_fsm;


ANN_p_uOut #(
    .DataWidth( 64 ),
    .AddressRange( 140 ),
    .AddressWidth( 8 ))
p_uOut_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_uOut_address0 ),
    .ce0( p_uOut_ce0 ),
    .we0( p_uOut_we0 ),
    .d0( p_uOut_d0 ),
    .q0( p_uOut_q0 ),
    .address1( p_uOut_address1 ),
    .ce1( p_uOut_ce1 ),
    .q1( p_uOut_q1 )
);

ANN_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ANN_dadd_64ns_64ns_64_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_385_p0 ),
    .din1( grp_fu_385_p1 ),
    .ce( grp_fu_385_ce ),
    .dout( grp_fu_385_p2 )
);

ANN_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ANN_dmul_64ns_64ns_64_6_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_448 ),
    .din1( ap_const_lv64_0 ),
    .ce( grp_fu_396_ce ),
    .dout( grp_fu_396_p2 )
);

ANN_ddiv_64ns_64ns_64_31 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ANN_ddiv_64ns_64ns_64_31_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_401_p0 ),
    .din1( grp_fu_401_p1 ),
    .ce( grp_fu_401_ce ),
    .dout( grp_fu_401_p2 )
);

ANN_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
ANN_dcmp_64ns_64ns_1_1_U3(
    .din0( reg_448 ),
    .din1( p_uOut_load_4_reg_1290 ),
    .opcode( tmp_68_fu_407_opcode ),
    .dout( tmp_68_fu_407_p2 )
);

ANN_dexp_64ns_64ns_64_18_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ANN_dexp_64ns_64ns_64_18_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( ap_const_lv64_0 ),
    .din1( grp_fu_411_p1 ),
    .ce( grp_fu_411_ce ),
    .dout( grp_fu_411_p2 )
);

ANN_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ANN_mux_4to1_sel2_32_1_U5(
    .din1( p_layerSize_0 ),
    .din2( p_layerSize_1 ),
    .din3( p_layerSize_2 ),
    .din4( p_layerSize_3 ),
    .din5( tmp_25_reg_1086 ),
    .dout( grp_fu_432_p6 )
);

ANN_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ANN_mux_4to1_sel2_32_1_U6(
    .din1( p_layerSize_0 ),
    .din2( p_layerSize_1 ),
    .din3( p_layerSize_2 ),
    .din4( p_layerSize_3 ),
    .din5( tmp_19_reg_1106 ),
    .dout( tmp_14_fu_600_p6 )
);

ANN_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ANN_mux_4to1_sel2_32_1_U7(
    .din1( p_layerSize_0 ),
    .din2( p_layerSize_1 ),
    .din3( p_layerSize_2 ),
    .din4( p_layerSize_3 ),
    .din5( tmp_22_reg_1076 ),
    .dout( tmp_18_fu_625_p6 )
);

ANN_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ANN_mux_4to1_sel2_32_1_U8(
    .din1( p_layerSize_0 ),
    .din2( p_layerSize_1 ),
    .din3( p_layerSize_2 ),
    .din4( p_layerSize_3 ),
    .din5( tmp_30_reg_1096 ),
    .dout( tmp_24_fu_724_p6 )
);

ANN_mux_4to1_sel2_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ANN_mux_4to1_sel2_32_1_U9(
    .din1( p_layerSize_0 ),
    .din2( p_layerSize_1 ),
    .din3( p_layerSize_2 ),
    .din4( p_layerSize_3 ),
    .din5( tmp_52_reg_1249 ),
    .dout( tmp_70_fu_882_p6 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_3_fu_516_p2))) begin
        i_1_reg_237 <= ap_const_lv31_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_15_fu_613_p2))) begin
        i_1_reg_237 <= i_6_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        i_2_reg_283 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        i_2_reg_283 <= i_7_reg_1178;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & (ap_const_lv1_0 == tmp_17_fu_712_p2))) begin
        i_3_reg_329 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154)) begin
        i_3_reg_329 <= i_8_reg_1214;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156) & (ap_const_lv1_0 == tmp_63_fu_895_p2))) begin
        i_5_reg_340 <= i_10_reg_1244;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == tmp_28_fu_784_p2) & (tmp_reg_1029 == ap_const_lv1_0))) begin
        i_5_reg_340 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_9_fu_506_p2 == ap_const_lv1_0))) begin
        i_reg_226 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_reg_226 <= i_4_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~(ap_const_lv1_0 == tmp_17_fu_712_p2))) begin
        j_1_reg_306 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93)) begin
        j_1_reg_306 <= j_4_reg_1196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~(tmp_9_reg_1041 == ap_const_lv1_0) & (tmp_reg_1029 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_49_fu_828_p2))) begin
        j_2_reg_374 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_157)) begin
        j_2_reg_374 <= j_5_reg_1275;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        j_reg_249 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        j_reg_249 <= j_3_reg_1119;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_15_fu_613_p2))) begin
        k_reg_260 <= ap_const_lv31_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        k_reg_260 <= k_1_reg_1142;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == tmp_28_fu_784_p2) & ~(tmp_reg_1029 == ap_const_lv1_0))) begin
        max_1_reg_362 <= ap_const_lv32_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159)) begin
        max_1_reg_362 <= i_9_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == tmp_69_fu_1007_p2))) begin
        max_fu_76 <= max_1_reg_362;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == tmp_28_fu_784_p2) & ~(tmp_reg_1029 == ap_const_lv1_0))) begin
        max_fu_76 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156) & (ap_const_lv1_0 == tmp_63_fu_895_p2))) begin
        phi_mul_reg_351 <= next_mul_reg_1236;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & (ap_const_lv1_0 == tmp_28_fu_784_p2) & (tmp_reg_1029 == ap_const_lv1_0))) begin
        phi_mul_reg_351 <= ap_const_lv37_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~(ap_const_lv1_0 == tmp_17_fu_712_p2))) begin
        sum_1_reg_317 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st94_fsm_93)) begin
        sum_1_reg_317 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_15_fu_613_p2))) begin
        sum_reg_271 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        sum_reg_271 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        sumsoft_reg_294 <= ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120)) begin
        sumsoft_reg_294 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~(tmp_9_reg_1041 == ap_const_lv1_0) & (tmp_reg_1029 == ap_const_lv1_0))) begin
        i_10_reg_1244 <= i_10_fu_833_p2;
        next_mul_reg_1236 <= next_mul_fu_818_p2;
        tmp_48_reg_1231 <= tmp_48_fu_814_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_4_reg_1053 <= i_4_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        i_7_reg_1178 <= i_7_fu_718_p2;
        tmp_16_reg_1170 <= grp_fu_432_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        i_8_reg_1214 <= i_8_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        j_3_reg_1119 <= j_3_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        j_4_reg_1196 <= j_4_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156)) begin
        j_5_reg_1275 <= j_5_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        k_1_reg_1142 <= k_1_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_15_fu_613_p2))) begin
        p_uOut_addr_2_reg_1129 <= tmp_20_cast_fu_647_p1;
        tmp_18_reg_1124 <= tmp_18_fu_625_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~(ap_const_lv1_0 == tmp_17_fu_712_p2))) begin
        p_uOut_addr_4_reg_1188 <= tmp_26_cast_fu_746_p1;
        tmp_24_reg_1183 <= tmp_24_fu_724_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) & ~(ap_const_lv1_0 == tmp_28_fu_784_p2))) begin
        p_uOut_addr_5_reg_1219 <= tmp_54_cast_fu_804_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_158)) begin
        p_uOut_load_4_reg_1290 <= p_uOut_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) | (ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122) | (ap_const_logic_1 == ap_sig_cseq_ST_st159_fsm_158))) begin
        reg_448 <= p_uOut_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        reg_455 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97))) begin
        reg_466 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115))) begin
        reg_472 <= grp_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st154_fsm_153))) begin
        reg_479 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_19_reg_1106 <= tmp_19_fu_591_p1;
        tmp_1_reg_1101 <= tmp_1_fu_585_p2;
        tmp_4_reg_1111 <= tmp_4_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == tmp_8_fu_536_p2))) begin
        tmp_21_reg_1071 <= tmp_21_fu_547_p1;
        tmp_22_reg_1076 <= tmp_22_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~(tmp_9_reg_1041 == ap_const_lv1_0) & (tmp_reg_1029 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_49_fu_828_p2))) begin
        tmp_52_reg_1249 <= tmp_52_fu_839_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_3_fu_516_p2))) begin
        tmp_5_reg_1058[30 : 0] <= tmp_5_fu_527_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156) & ~(ap_const_lv1_0 == tmp_63_fu_895_p2))) begin
        tmp_75_cast_reg_1280[8 : 0] <= tmp_75_cast_fu_916_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_9_reg_1041 <= tmp_9_fu_506_p2;
        tmp_reg_1029 <= tmp_fu_484_p2;
    end
end

always @ (tmp_reg_1029 or tmp_9_reg_1041 or ap_sig_cseq_ST_st156_fsm_155 or tmp_49_fu_828_p2 or tmp_51_fu_843_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ((tmp_9_reg_1041 == ap_const_lv1_0) | ((tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_49_fu_828_p2)) | (~(tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_51_fu_843_p2))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_reg_1029 or tmp_9_reg_1041 or ap_sig_cseq_ST_st156_fsm_155 or tmp_49_fu_828_p2 or tmp_51_fu_843_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ((tmp_9_reg_1041 == ap_const_lv1_0) | ((tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_49_fu_828_p2)) | (~(tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_51_fu_843_p2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_344) begin
    if (ap_sig_bdd_344) begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_748) begin
    if (ap_sig_bdd_748) begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_116 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_537) begin
    if (ap_sig_bdd_537) begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_546) begin
    if (ap_sig_bdd_546) begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_261) begin
    if (ap_sig_bdd_261) begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_823) begin
    if (ap_sig_bdd_823) begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_361) begin
    if (ap_sig_bdd_361) begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st154_fsm_153 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_662) begin
    if (ap_sig_bdd_662) begin
        ap_sig_cseq_ST_st155_fsm_154 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st155_fsm_154 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_561) begin
    if (ap_sig_bdd_561) begin
        ap_sig_cseq_ST_st156_fsm_155 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st156_fsm_155 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_599) begin
    if (ap_sig_bdd_599) begin
        ap_sig_cseq_ST_st157_fsm_156 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st157_fsm_156 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_684) begin
    if (ap_sig_bdd_684) begin
        ap_sig_cseq_ST_st158_fsm_157 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st158_fsm_157 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_269) begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st159_fsm_158 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st159_fsm_158 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_279) begin
    if (ap_sig_bdd_279) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_617) begin
    if (ap_sig_bdd_617) begin
        ap_sig_cseq_ST_st160_fsm_159 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st160_fsm_159 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_775) begin
    if (ap_sig_bdd_775) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_176) begin
    if (ap_sig_bdd_176) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_296) begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_312) begin
    if (ap_sig_bdd_312) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_484) begin
    if (ap_sig_bdd_484) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_376) begin
    if (ap_sig_bdd_376) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_395) begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_337) begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_782) begin
    if (ap_sig_bdd_782) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_319) begin
    if (ap_sig_bdd_319) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_816) begin
    if (ap_sig_bdd_816) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_626) begin
    if (ap_sig_bdd_626) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_412) begin
    if (ap_sig_bdd_412) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_436) begin
    if (ap_sig_bdd_436) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_354) begin
    if (ap_sig_bdd_354) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_640) begin
    if (ap_sig_bdd_640) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_449) begin
    if (ap_sig_bdd_449) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_493) begin
    if (ap_sig_bdd_493) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_504) begin
    if (ap_sig_bdd_504) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_523) begin
    if (ap_sig_bdd_523) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_253) begin
    if (ap_sig_bdd_253) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_286) begin
    if (ap_sig_bdd_286) begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_469) begin
    if (ap_sig_bdd_469) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_789) begin
    if (ap_sig_bdd_789) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_303) begin
    if (ap_sig_bdd_303) begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_327) begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_833) begin
    if (ap_sig_bdd_833) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_246) begin
    if (ap_sig_bdd_246) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        config_r_ce0 = ap_const_logic_1;
    end else begin
        config_r_ce0 = ap_const_logic_0;
    end
end

always @ (reg_472 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st82_fsm_81 or sum_phi_fu_275_p4 or sum_reg_271 or sumsoft_reg_294 or sum_1_phi_fu_321_p4 or sum_1_reg_317 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st90_fsm_89) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        grp_fu_385_p0 = sumsoft_reg_294;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89)) begin
        grp_fu_385_p0 = sum_1_reg_317;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        grp_fu_385_p0 = sum_1_phi_fu_321_p4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_385_p0 = reg_472;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_385_p0 = sum_reg_271;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_385_p0 = sum_phi_fu_275_p4;
    end else begin
        grp_fu_385_p0 = 'bx;
    end
end

always @ (reg_455 or reg_472 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st117_fsm_116 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st90_fsm_89) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        grp_fu_385_p1 = reg_472;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_385_p1 = ap_const_lv64_3FF0000000000000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89))) begin
        grp_fu_385_p1 = reg_455;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81))) begin
        grp_fu_385_p1 = ap_const_lv64_0;
    end else begin
        grp_fu_385_p1 = 'bx;
    end
end

always @ (reg_448 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st124_fsm_123) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_401_p0 = reg_448;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_401_p0 = ap_const_lv64_3FF0000000000000;
    end else begin
        grp_fu_401_p0 = 'bx;
    end
end

always @ (reg_466 or sumsoft_reg_294 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st124_fsm_123) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123)) begin
        grp_fu_401_p1 = sumsoft_reg_294;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_401_p1 = reg_466;
    end else begin
        grp_fu_401_p1 = 'bx;
    end
end

always @ (reg_466 or tmp_40_fu_697_p1 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st99_fsm_98) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        grp_fu_411_p1 = reg_466;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_411_p1 = tmp_40_fu_697_p1;
    end else begin
        grp_fu_411_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        netIn_ce0 = ap_const_logic_1;
    end else begin
        netIn_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st160_fsm_159 or tmp_60_fu_877_p1 or tmp_53_fu_921_p1 or tmp_69_fu_1007_p2 or tmp_56_fu_926_p1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == tmp_69_fu_1007_p2))) begin
        netOut_address0 = tmp_56_fu_926_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & (ap_const_lv1_0 == tmp_69_fu_1007_p2))) begin
        netOut_address0 = tmp_53_fu_921_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        netOut_address0 = tmp_60_fu_877_p1;
    end else begin
        netOut_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st160_fsm_159 or tmp_69_fu_1007_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) | ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & (ap_const_lv1_0 == tmp_69_fu_1007_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == tmp_69_fu_1007_p2)))) begin
        netOut_ce0 = ap_const_logic_1;
    end else begin
        netOut_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st160_fsm_159 or tmp_69_fu_1007_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & (ap_const_lv1_0 == tmp_69_fu_1007_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == tmp_69_fu_1007_p2)))) begin
        netOut_d0 = ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        netOut_d0 = ap_const_lv32_1;
    end else begin
        netOut_d0 = 'bx;
    end
end

always @ (tmp_reg_1029 or tmp_9_reg_1041 or ap_sig_cseq_ST_st156_fsm_155 or tmp_51_fu_843_p2 or ap_sig_cseq_ST_st160_fsm_159 or tmp_69_fu_1007_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) & ~(tmp_9_reg_1041 == ap_const_lv1_0) & ~(tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_51_fu_843_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & (ap_const_lv1_0 == tmp_69_fu_1007_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st160_fsm_159) & ~(ap_const_lv1_0 == tmp_69_fu_1007_p2)))) begin
        netOut_we0 = ap_const_logic_1;
    end else begin
        netOut_we0 = ap_const_logic_0;
    end
end

always @ (tmp_5_reg_1058 or p_uOut_addr_2_reg_1129 or ap_sig_cseq_ST_st8_fsm_7 or p_uOut_addr_4_reg_1188 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st122_fsm_121 or p_uOut_addr_5_reg_1219 or ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st155_fsm_154 or tmp_35_cast_fu_682_p1 or tmp_49_cast_fu_775_p1 or tmp_54_cast_fu_804_p1 or tmp_57_cast_fu_858_p1 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154)) begin
        p_uOut_address0 = p_uOut_addr_5_reg_1219;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        p_uOut_address0 = p_uOut_addr_4_reg_1188;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        p_uOut_address0 = p_uOut_addr_2_reg_1129;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_uOut_address0 = tmp_5_reg_1058;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        p_uOut_address0 = tmp_57_cast_fu_858_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121)) begin
        p_uOut_address0 = tmp_54_cast_fu_804_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        p_uOut_address0 = tmp_49_cast_fu_775_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_uOut_address0 = tmp_35_cast_fu_682_p1;
    end else begin
        p_uOut_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st157_fsm_156 or tmp_75_cast_fu_916_p1 or tmp_59_cast_fu_872_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156)) begin
        p_uOut_address1 = tmp_75_cast_fu_916_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155)) begin
        p_uOut_address1 = tmp_59_cast_fu_872_p1;
    end else begin
        p_uOut_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        p_uOut_ce0 = ap_const_logic_1;
    end else begin
        p_uOut_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st156_fsm_155 or ap_sig_cseq_ST_st157_fsm_156) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st156_fsm_155) | (ap_const_logic_1 == ap_sig_cseq_ST_st157_fsm_156))) begin
        p_uOut_ce1 = ap_const_logic_1;
    end else begin
        p_uOut_ce1 = ap_const_logic_0;
    end
end

always @ (netIn_q0 or reg_472 or reg_479 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        p_uOut_d0 = reg_472;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154))) begin
        p_uOut_d0 = reg_479;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_uOut_d0 = netIn_q0;
    end else begin
        p_uOut_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st155_fsm_154 or ap_sig_cseq_ST_st117_fsm_116) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st155_fsm_154) | (ap_const_logic_1 == ap_sig_cseq_ST_st117_fsm_116))) begin
        p_uOut_we0 = ap_const_logic_1;
    end else begin
        p_uOut_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st158_fsm_157) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_157)) begin
        uOut_ce0 = ap_const_logic_1;
    end else begin
        uOut_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st158_fsm_157) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st158_fsm_157)) begin
        uOut_we0 = ap_const_logic_1;
    end else begin
        uOut_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_reg_1029 or tmp_9_fu_506_p2 or tmp_9_reg_1041 or tmp_3_fu_516_p2 or tmp_8_fu_536_p2 or tmp_15_fu_613_p2 or tmp_29_fu_662_p2 or tmp_17_fu_712_p2 or tmp_32_fu_755_p2 or tmp_28_fu_784_p2 or tmp_49_fu_828_p2 or tmp_51_fu_843_p2 or tmp_63_fu_895_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(tmp_9_fu_506_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == tmp_3_fu_516_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == tmp_8_fu_536_p2)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_15_fu_613_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            if ((ap_const_lv1_0 == tmp_29_fu_662_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            if (~(ap_const_lv1_0 == tmp_17_fu_712_p2)) begin
                ap_NS_fsm = ap_ST_st82_fsm_81;
            end else begin
                ap_NS_fsm = ap_ST_st122_fsm_121;
            end
        end
        ap_ST_st82_fsm_81 : 
        begin
            if ((ap_const_lv1_0 == tmp_32_fu_755_p2)) begin
                ap_NS_fsm = ap_ST_st95_fsm_94;
            end else begin
                ap_NS_fsm = ap_ST_st83_fsm_82;
            end
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st122_fsm_121 : 
        begin
            if ((ap_const_lv1_0 == tmp_28_fu_784_p2)) begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end else begin
                ap_NS_fsm = ap_ST_st123_fsm_122;
            end
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            ap_NS_fsm = ap_ST_st130_fsm_129;
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st140_fsm_139;
        end
        ap_ST_st140_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : 
        begin
            ap_NS_fsm = ap_ST_st142_fsm_141;
        end
        ap_ST_st142_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st143_fsm_142;
        end
        ap_ST_st143_fsm_142 : 
        begin
            ap_NS_fsm = ap_ST_st144_fsm_143;
        end
        ap_ST_st144_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st145_fsm_144;
        end
        ap_ST_st145_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st146_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st147_fsm_146;
        end
        ap_ST_st147_fsm_146 : 
        begin
            ap_NS_fsm = ap_ST_st148_fsm_147;
        end
        ap_ST_st148_fsm_147 : 
        begin
            ap_NS_fsm = ap_ST_st149_fsm_148;
        end
        ap_ST_st149_fsm_148 : 
        begin
            ap_NS_fsm = ap_ST_st150_fsm_149;
        end
        ap_ST_st150_fsm_149 : 
        begin
            ap_NS_fsm = ap_ST_st151_fsm_150;
        end
        ap_ST_st151_fsm_150 : 
        begin
            ap_NS_fsm = ap_ST_st152_fsm_151;
        end
        ap_ST_st152_fsm_151 : 
        begin
            ap_NS_fsm = ap_ST_st153_fsm_152;
        end
        ap_ST_st153_fsm_152 : 
        begin
            ap_NS_fsm = ap_ST_st154_fsm_153;
        end
        ap_ST_st154_fsm_153 : 
        begin
            ap_NS_fsm = ap_ST_st155_fsm_154;
        end
        ap_ST_st155_fsm_154 : 
        begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st156_fsm_155 : 
        begin
            if (((tmp_9_reg_1041 == ap_const_lv1_0) | ((tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_49_fu_828_p2)) | (~(tmp_reg_1029 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_51_fu_843_p2)))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(tmp_9_reg_1041 == ap_const_lv1_0) & ~(tmp_reg_1029 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_51_fu_843_p2))) begin
                ap_NS_fsm = ap_ST_st159_fsm_158;
            end else begin
                ap_NS_fsm = ap_ST_st157_fsm_156;
            end
        end
        ap_ST_st157_fsm_156 : 
        begin
            if (~(ap_const_lv1_0 == tmp_63_fu_895_p2)) begin
                ap_NS_fsm = ap_ST_st158_fsm_157;
            end else begin
                ap_NS_fsm = ap_ST_st156_fsm_155;
            end
        end
        ap_ST_st158_fsm_157 : 
        begin
            ap_NS_fsm = ap_ST_st157_fsm_156;
        end
        ap_ST_st159_fsm_158 : 
        begin
            ap_NS_fsm = ap_ST_st160_fsm_159;
        end
        ap_ST_st160_fsm_159 : 
        begin
            ap_NS_fsm = ap_ST_st156_fsm_155;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign WandB_address0 = ap_const_lv13_0;

assign WandB_address1 = ap_const_lv13_0;

assign WandB_ce0 = ap_const_logic_0;

assign WandB_ce1 = ap_const_logic_0;

assign WandB_d0 = ap_const_lv64_0;

assign WandB_d1 = ap_const_lv64_0;

assign WandB_we0 = ap_const_logic_0;

assign WandB_we1 = ap_const_logic_0;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_176 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_246 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_253 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_261 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_279 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_286 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_303 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_312 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_319 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_344 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_354 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_361 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_99]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_376 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_412 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_436 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_449 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_469 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_484 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_493 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_504 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_523 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_537 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_546 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_561 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_599 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_617 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_626 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_640 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_662 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_684 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_748 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_74]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_775 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_782 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_789 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_816 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_823 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_833 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end

assign config_r_address0 = ap_const_lv64_0;

assign grp_fu_385_ce = ap_const_logic_1;

assign grp_fu_396_ce = ap_const_logic_1;

assign grp_fu_401_ce = ap_const_logic_1;

assign grp_fu_411_ce = ap_const_logic_1;

assign i_10_fu_833_p2 = (ap_const_lv31_1 + i_5_reg_340);

assign i_1_cast_fu_532_p1 = i_1_reg_237;

assign i_3_cast_fu_780_p1 = i_3_reg_329;

assign i_4_fu_521_p2 = (i_reg_226 + ap_const_lv31_1);

assign i_5_cast_fu_824_p1 = i_5_reg_340;

assign i_6_fu_652_p2 = (i_1_reg_237 + ap_const_lv31_1);

assign i_7_fu_718_p2 = (i_2_reg_283 + ap_const_lv32_1);

assign i_8_fu_789_p2 = (i_3_reg_329 + ap_const_lv31_1);

assign i_9_fu_1018_p2 = (max_1_reg_362 + ap_const_lv32_1);

assign i_cast_fu_512_p1 = i_reg_226;

assign j_1_cast_fu_751_p1 = j_1_reg_306;

assign j_3_fu_619_p2 = (j_reg_249 + ap_const_lv32_1);

assign j_4_fu_760_p2 = (j_1_reg_306 + ap_const_lv31_1);

assign j_5_fu_901_p2 = (j_2_reg_374 + ap_const_lv32_1);

assign k_1_fu_667_p2 = (k_reg_260 + ap_const_lv31_1);

assign k_cast_fu_658_p1 = k_reg_260;

assign netIn_address0 = tmp_5_fu_527_p1;

assign next_mul_fu_818_p2 = (ap_const_lv37_23 + phi_mul_reg_351);

assign notlhs1_fu_983_p2 = (tmp_62_fu_951_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notlhs_fu_965_p2 = (tmp_59_fu_934_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notrhs2_fu_989_p2 = (tmp_64_fu_961_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign notrhs_fu_971_p2 = (tmp_61_fu_944_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign p_uOut_load_3_to_int_fu_930_p1 = reg_448;

assign p_uOut_load_4_to_int_fu_948_p1 = p_uOut_load_4_reg_1290;

assign sum_1_phi_fu_321_p4 = sum_1_reg_317;

assign sum_phi_fu_275_p4 = sum_reg_271;

assign tmp_10_fu_702_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_23_reg_1081));

assign tmp_11_fu_568_p2 = ($signed(ap_const_lv32_FFFFFFFE) + $signed(p_numLayer));

assign tmp_12_fu_581_p1 = i_1_reg_237[8:0];

assign tmp_13_fu_707_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_27_reg_1091));

assign tmp_15_fu_613_p2 = ($signed(j_reg_249) < $signed(tmp_14_fu_600_p6)? 1'b1: 1'b0);

assign tmp_17_fu_712_p2 = ($signed(i_2_reg_283) < $signed(grp_fu_432_p6)? 1'b1: 1'b0);

assign tmp_19_fu_591_p1 = i_1_reg_237[1:0];

assign tmp_1_fu_585_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_12_fu_581_p1));

assign tmp_20_cast_fu_647_p1 = $signed(tmp_20_fu_642_p2);

assign tmp_20_fu_642_p2 = (tmp_1_reg_1101 + tmp_31_fu_638_p1);

assign tmp_21_fu_547_p1 = tmp_s_fu_541_p2[8:0];

assign tmp_22_fu_551_p1 = tmp_s_fu_541_p2[1:0];

assign tmp_23_fu_560_p1 = tmp_7_fu_555_p2[8:0];

assign tmp_25_fu_564_p1 = tmp_7_fu_555_p2[1:0];

assign tmp_26_cast_fu_746_p1 = $signed(tmp_26_fu_741_p2);

assign tmp_26_fu_741_p2 = (tmp_10_reg_1157 + tmp_33_fu_737_p1);

assign tmp_27_fu_573_p1 = tmp_11_fu_568_p2[8:0];

assign tmp_28_fu_784_p2 = ($signed(i_3_cast_fu_780_p1) < $signed(tmp_16_reg_1170)? 1'b1: 1'b0);

assign tmp_29_fu_662_p2 = ($signed(k_cast_fu_658_p1) < $signed(tmp_18_reg_1124)? 1'b1: 1'b0);

assign tmp_2_fu_494_p2 = (config_r_q0 == ap_const_lv32_2? 1'b1: 1'b0);

assign tmp_30_fu_577_p1 = tmp_11_fu_568_p2[1:0];

assign tmp_31_fu_638_p1 = j_reg_249[8:0];

assign tmp_32_fu_755_p2 = ($signed(j_1_cast_fu_751_p1) < $signed(tmp_24_reg_1183)? 1'b1: 1'b0);

assign tmp_33_fu_737_p1 = i_2_reg_283[8:0];

assign tmp_34_fu_795_p1 = i_3_reg_329[8:0];

assign tmp_35_cast_fu_682_p1 = $signed(tmp_35_fu_677_p2);

assign tmp_35_fu_677_p2 = (tmp_4_reg_1111 + tmp_39_fu_673_p1);

assign tmp_36_fu_799_p2 = (tmp_10_reg_1157 + tmp_34_fu_795_p1);

assign tmp_39_fu_673_p1 = k_reg_260[8:0];

assign tmp_3_fu_516_p2 = ($signed(i_cast_fu_512_p1) < $signed(p_layerSize_0)? 1'b1: 1'b0);

assign tmp_40_fu_697_p1 = tmp_41_neg_fu_691_p2;

assign tmp_41_neg_fu_691_p2 = (tmp_41_to_int_fu_687_p1 ^ ap_const_lv64_8000000000000000);

assign tmp_41_to_int_fu_687_p1 = reg_466;

assign tmp_44_fu_766_p1 = j_1_reg_306[8:0];

assign tmp_46_fu_770_p2 = (tmp_13_reg_1165 + tmp_44_fu_766_p1);

assign tmp_48_fu_814_p1 = phi_mul_reg_351[8:0];

assign tmp_49_cast_fu_775_p1 = $signed(tmp_46_fu_770_p2);

assign tmp_49_fu_828_p2 = ($signed(i_5_cast_fu_824_p1) < $signed(p_numLayer)? 1'b1: 1'b0);

assign tmp_4_fu_595_p2 = ($signed({{1'b0}, {ap_const_lv9_23}}) * $signed(tmp_21_reg_1071));

assign tmp_51_fu_843_p2 = ($signed(max_1_reg_362) < $signed(grp_fu_432_p6)? 1'b1: 1'b0);

assign tmp_52_fu_839_p1 = i_5_reg_340[1:0];

assign tmp_53_fu_921_p1 = $signed(max_1_reg_362);

assign tmp_54_cast_fu_804_p1 = $signed(tmp_36_fu_799_p2);

assign tmp_54_fu_849_p1 = max_1_reg_362[8:0];

assign tmp_55_fu_853_p2 = (tmp_54_fu_849_p1 + tmp_10_reg_1157);

assign tmp_56_fu_926_p1 = $signed(max_fu_76);

assign tmp_57_cast_fu_858_p1 = $signed(tmp_55_fu_853_p2);

assign tmp_57_fu_863_p1 = max_fu_76[8:0];

assign tmp_58_fu_867_p2 = (tmp_57_fu_863_p1 + tmp_10_reg_1157);

assign tmp_59_cast_fu_872_p1 = $signed(tmp_58_fu_867_p2);

assign tmp_59_fu_934_p4 = {{p_uOut_load_3_to_int_fu_930_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_5_fu_527_p1 = i_reg_226;

assign tmp_60_fu_877_p1 = $signed(max_fu_76);

assign tmp_61_fu_944_p1 = p_uOut_load_3_to_int_fu_930_p1[51:0];

assign tmp_62_fu_951_p4 = {{p_uOut_load_4_to_int_fu_948_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_63_fu_895_p2 = ($signed(j_2_reg_374) < $signed(tmp_70_fu_882_p6)? 1'b1: 1'b0);

assign tmp_64_fu_961_p1 = p_uOut_load_4_to_int_fu_948_p1[51:0];

assign tmp_65_fu_977_p2 = (notrhs_fu_971_p2 | notlhs_fu_965_p2);

assign tmp_66_fu_995_p2 = (notrhs2_fu_989_p2 | notlhs1_fu_983_p2);

assign tmp_67_fu_1001_p2 = (tmp_65_fu_977_p2 & tmp_66_fu_995_p2);

assign tmp_68_fu_407_opcode = ap_const_lv5_2;

assign tmp_69_fu_1007_p2 = (tmp_67_fu_1001_p2 & tmp_68_fu_407_p2);

assign tmp_6_fu_500_p2 = (config_r_q0 == ap_const_lv32_0? 1'b1: 1'b0);

assign tmp_71_fu_907_p1 = j_2_reg_374[8:0];

assign tmp_72_fu_911_p2 = (tmp_48_reg_1231 + tmp_71_fu_907_p1);

assign tmp_75_cast_fu_916_p1 = tmp_72_fu_911_p2;

assign tmp_7_fu_555_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(p_numLayer));

assign tmp_8_fu_536_p2 = ($signed(i_1_cast_fu_532_p1) < $signed(p_numLayer)? 1'b1: 1'b0);

assign tmp_9_fu_506_p2 = (tmp_6_fu_500_p2 | tmp_2_fu_494_p2);

assign tmp_fu_484_p2 = (config_r_q0 == ap_const_lv32_0? 1'b1: 1'b0);

assign tmp_s_fu_541_p2 = ($signed(ap_const_lv31_7FFFFFFF) + $signed(i_1_reg_237));

assign uOut_address0 = tmp_75_cast_reg_1280;

assign uOut_d0 = p_uOut_q1;
always @ (posedge ap_clk) begin
    tmp_5_reg_1058[63:31] <= 33'b000000000000000000000000000000000;
    tmp_23_reg_1081[8:0] <= 9'b111111111;
    tmp_25_reg_1086[1:0] <= 2'b11;
    tmp_27_reg_1091[8:0] <= 9'b111111110;
    tmp_30_reg_1096[1:0] <= 2'b10;
    tmp_10_reg_1157[8:0] <= 9'b111011101;
    tmp_13_reg_1165[8:0] <= 9'b110111010;
    tmp_75_cast_reg_1280[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end



endmodule //ANN

