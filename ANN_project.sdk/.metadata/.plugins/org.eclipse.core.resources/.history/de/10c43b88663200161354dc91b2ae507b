/**
 *
 * Carlos III University of Madrid.
 *
 * Master Final Thesis: Heartbeat classifier based on ANN (Artificial Neural
 * Network).
 *
 * Author: Pedro Marcos Solórzano
 * Tutor: Luis Mengibar Pozo (Tutor)
 *
 *
 * Back-propagation training for feedforward ANN
 * Header file
 *
 *
 */

/*
 * Header guard
 */
#ifndef TRAINING_H_
#define TRAINING_H_

/*
 * back-propagation training status
 */
typedef int BackPropStatus;
#define

/*
 * Includes
 */
#include "ANN.h"

/*
 * Back-propagation training class
 * This class is derived from ANN class
 */
class Training{

private:
  /*
   * Private variables:
   * Besides the protected ANN variables, the training needs some parameters
   * such as delta error, learning Rate and momentum.
   * On the other hand, an extra variable to store the previous weight of the
   * neurons is needed.
   */
  double **_deltaError, ***_prevWeight, _learningRate, _momentum;

  ANN _ann;

public:
  /*
   * Empty constructor
   */
  Training();
  /*
   * Constructor method. It creates a new ANN and trains it. These parameters
   * must be set:
   * - number of layers (including input & output layers)
   * - number of neurons in each layer
   * - momentum for the training
   * - learning rate
   * - delta errors for each neuron.
   */
  Training(int layers, int *layerSizes, double momentum, double learningRate,
            double **deltaError);
  /*
   * Training method
   */
  int backpropagation(int interations, int threshold, );
  /*
   * Destructor
   */
  virtual ~Training();
};

#endif
